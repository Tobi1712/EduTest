{"ast":null,"code":"import _slicedToArray from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport { css as _css } from \"styled-components\";\nvar _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\customer\\\\Testing\\\\test.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n          left: 25rem;\\n        \"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n          right: 25rem;\\n        \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'antd'; // import Highlighter from 'react-highlight-words';\n\n// import { \n//     ChangeQuestionSearchText,\n//     ChangeQuestionTableData,\n//     ChangeQuestionModalState,\n// } from '../../../actions/trainerAction';\nimport { ChangeTestSearchText, ChangeTestTableData, ChangeTestModalState, ChangeAnswersSearchText, ChangeAnswersTableData // ChangeAnswersModalState,\n} from '../../../actions/chapterAction';\nimport Alert from '../../../components/common/alert';\nimport { SecurePost, SecureGet } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport TestPage from './testpage';\nimport styled from \"styled-components\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport Counter from './Counter';\nconst Container = styled.div.withConfig({\n  displayName: \"test__Container\",\n  componentId: \"sc-13myauf-0\"\n})([\"display:flex;justify-content:center;align-items:center;min-height:80vh;width:100%;\"]);\nconst ScreenQuiz = styled.div.withConfig({\n  displayName: \"test__ScreenQuiz\",\n  componentId: \"sc-13myauf-1\"\n})([\"display:flex;justify-content:\", \";align-items:center;flex-direction:column;max-width:1200px;padding:\", \";width:100%;height:80vh;background:#fff;border-radius:5px;box-shadow:0px 5px 40px -20px #000;\"], props => props.screen ? \"space-between\" : \"center\", props => props.screen ? \"5rem\" : \".5rem\");\nconst Title = styled.h1.withConfig({\n  displayName: \"test__Title\",\n  componentId: \"sc-13myauf-2\"\n})([\"font-size:2.5rem;margin-bottom:0.5rem;text-align:center;max-width:90%;\"]);\nconst Paragraph = styled.p.withConfig({\n  displayName: \"test__Paragraph\",\n  componentId: \"sc-13myauf-3\"\n})([\"font-size:1.5rem;\"]); // const Button = styled.button`\n//   font-size: 1.2rem;\n//   font-weight: bold;\n//   width: 40%;\n//   height: 3rem;\n//   // color: #fff;\n//   border: none;\n//   // background: #7159c1;\n//   border-radius: 5px;\n//   box-shadow: 0px 3px 3px 0px #666;\n//   @-webkit-keyframes pulsate {\n//     0% {transform: scale(0.1, 0.1); opacity: 0.0;}\n//     50% {opacity: 1.0;}\n//     100% {transform: scale(7, 7); opacity: 0.0;}\n// }\n// `;\n\nconst ButtonScr = styled.button.withConfig({\n  displayName: \"test__ButtonScr\",\n  componentId: \"sc-13myauf-4\"\n})([\"font-size:1.4rem;z-index:10;position:fixed;top:15%;\", \"\"], props => props.right ? _css(_templateObject()) : _css(_templateObject2()));\nconst ContainerLabel = styled.div.withConfig({\n  displayName: \"test__ContainerLabel\",\n  componentId: \"sc-13myauf-5\"\n})([\"display:flex;align-items:flex-start;flex-direction:column;margin:0 auto 0.5rem auto;\"]);\nconst Label = styled.label.withConfig({\n  displayName: \"test__Label\",\n  componentId: \"sc-13myauf-6\"\n})([\"display:flex;justify-content:center;align-items:center;\"]);\nconst Radio = styled.input.attrs({\n  type: 'checkbox'\n}).withConfig({\n  displayName: \"test__Radio\",\n  componentId: \"sc-13myauf-7\"\n})([\"display:flex;justify-content:center;align-items:center;width:15px;height:15px;border-radius:50%;border:7.5px solid black;margin:0 0.5rem 0 0;background:\", \";\"], props => props.clickedLabel ? \"#7159c1\" : \"#fff\"); // const IntoRadio = styled.div`\n//   width: 5px;\n//   height: 5px;\n//   border-radius: 3px;\n//   background: #fff;\n// `;\n// const Error = styled.div`\n//   top: 22rem;\n//   color: red;\n//   position: absolute;\n//   font-weight: bold;\n// `;\n\nexport default function Test(props) {\n  console.log(props);\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        screen = _useState2[0],\n        setScreen = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        count = _useState4[0],\n        setCount = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        answer = _useState6[0],\n        setAnswer = _useState6[1];\n\n  const _useState7 = useState(props.id),\n        _useState8 = _slicedToArray(_useState7, 2),\n        matId = _useState8[0],\n        setMatId = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        testStarted = _useState10[0],\n        setTestStarted = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        testEnded = _useState12[0],\n        setTestEnded = _useState12[1]; // const [testStarted, setTestStarted] = useState(false);\n  // constructor(props){\n  //   super(props);\n  //   this.state={\n  //     //questions:[],\n  //     loading:false,\n  //     screen: true,\n  //     count: 0,\n  //     //clickedLabel: [],\n  //     answer: 0,\n  //     //error:false,\n  //     // screenFinish:false,\n  //     //second:60,\n  //    // time:{},\n  //     //checked:false,\n  //     disableButton: false,\n  //     testStarted:false,\n  //     testEnded:false,\n  //     testDidNotStart:true,\n  //     matId : this.props.id,\n  //    // details:[],\n  //   }\n  // }\n\n\n  useEffect(() => {\n    console.log(\"1 - componentDidMount\", this.state.matId);\n    this.props.ChangeTestTableData(this.props.id);\n    this.props.ChangeAnswersTableData(this.props.id);\n  }, []);\n\n  const renderInitial = () => {\n    console.log(\"renderInitial\"); // const { count } = this.state;\n\n    setScreen(false);\n    setCount(1);\n    setTestStarted(true);\n    setTestEnded(false); // this.setState({\n    //   screen: false,\n    //   loading: false,\n    //   count: 1,\n    //   testStarted: true,\n    //   testEnded: false,\n    //   testDidNotStart: false,\n    // });\n  };\n\n  const renderScreenInitial = () => {\n    console.log('THIS1:', this.props.chapter.testTableData.userid);\n    console.log(\"THIS2:\", this.props.login._id);\n\n    if (this.props.chapter.testTableData.userid !== undefined) {\n      console.log('THIS3:', this.props.chapter.testTableData.userid);\n      console.log(\"THIS4:\", this.props.login._id);\n\n      if (this.props.chapter.testTableData.userid !== this.props.login._id) {\n        console.log(\"1  CREATE_TEST\", this.props.chapter.testid);\n        SecurePost({\n          url: \"\".concat(apis.CREATE_TEST),\n          data: {\n            _id: this.props.chapter.testid,\n            chapterid: this.props.chid,\n            materialid: this.props.id,\n            startDate: Date().toLocaleString(),\n            complationDate: Date(),\n            startTest: true,\n            endTest: false,\n            result: 0\n          }\n        }).then(response => {\n          if (response.data.success) {\n            this.props.ChangeTestModalState(false, null, 'Save');\n            Alert('success', 'Успешно', response.data.message);\n          } else {\n            this.props.ChangeTestModalState(false, null, 'Save');\n            return Alert('warning', 'Предупреждение!', response.data.message);\n          }\n        }).catch(error => {\n          this.props.ChangeTestModalState(false, null, 'Save');\n          return Alert('error', 'Ошибка!', 'Ошибка сервера');\n        });\n        console.log(\"CREATE_ANSWERS\", this.props.chapter.testid);\n        SecurePost({\n          url: \"\".concat(apis.CREATE_TST),\n          data: {\n            materialId: this.props.id // testid : this.props.chapter.testTableData._id,\n\n          }\n        });\n      } else if (this.props.chapter.testTableData.userid === this.props.login._id) {\n        console.log(\"HJK\"); // if(this.props.chapter.testTableData.userid===this.props.login._id){\n\n        return /*#__PURE__*/React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        }, /*#__PURE__*/React.createElement(ScreenQuiz, {\n          screen: this.state.screen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }, /*#__PURE__*/React.createElement(Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, \"\\u0422\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(Counter, {\n          id: this.state.matId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        }), /*#__PURE__*/React.createElement(Button, {\n          onClick: this.renderInitial,\n          style: {\n            fontSize: \"1.2rem\",\n            fontWeight: \"bold\",\n            width: \"40%\",\n            height: \"3rem\",\n            border: \"none\",\n            borderRadius: \"5px\",\n            boxShadow: \"0px 3px 3px 0px #666\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        }, \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\"))); // }\n      }\n    } // if ((this.state.testStarted==false)||\n    // ((this.props.chapter.testTableData.userid!=='undefined' || this.props.chapter.testTableData.userid!==undefined || this.props.chapter.testTableData.userid!==null || this.props.chapter.testTableData.userid!=='null')&&\n    // (this.props.login._id!=='undefined' || this.props.login._id!==undefined || this.props.login._id!==null || this.props.login._id!=='null'))){\n    //   if(this.props.chapter.testTableData.userid===this.props.login._id){\n    //     return (\n    //       <Container>\n    //         <ScreenQuiz screen={this.state.screen}>\n    //           <Title>Тестирование</Title>\n    //           <Counter id={this.state.matId}/>\n    //           <Button \n    //             onClick={this.renderInitial} \n    //             style={{\n    //               fontSize: \"1.2rem\", \n    //               fontWeight: \"bold\",\n    //               width: \"40%\",\n    //               height: \"3rem\",\n    //               border: \"none\",\n    //               borderRadius: \"5px\",\n    //               boxShadow: \"0px 3px 3px 0px #666\"\n    //             }}\n    //             >\n    //               Начать тест\n    //           </Button>\n    //         </ScreenQuiz>\n    //       </Container>\n    //     );\n    //   }\n    //   else{\n    //     return \"HJK\"\n    //   }\n    // } \n    // else if (this.state.testStarted==true && this.state.endTest==false){\n    //   return (\n    //     <Container>\n    //       <ScreenQuiz screen={this.state.screen}>\n    //         <Title>Тестирование</Title>\n    //         <Button \n    //           onClick={this.renderInitial} \n    //           style={{\n    //             fontSize: \"1.2rem\", \n    //             fontWeight: \"bold\",\n    //             width: \"40%\",\n    //             height: \"3rem\",\n    //             border: \"none\",\n    //             borderRadius: \"5px\",\n    //             boxShadow: \"0px 3px 3px 0px #666\"\n    //           }}\n    //           >\n    //             Продолжить тест\n    //         </Button>\n    //       </ScreenQuiz>\n    //     </Container>\n    //   );\n    // }\n    // else if(this.props.chapter.testTableData.userid!==this.props.login._id){\n    //   return (\n    //     <Container>\n    //       <ScreenQuiz screen={this.state.screen}>\n    //         <Title>Тестирование</Title>\n    //         <Button \n    //           onClick={this.renderInitial} \n    //           style={{\n    //             fontSize: \"1.2rem\", \n    //             fontWeight: \"bold\",\n    //             width: \"40%\",\n    //             height: \"3rem\",\n    //             border: \"none\",\n    //             borderRadius: \"5px\",\n    //             boxShadow: \"0px 3px 3px 0px #666\"\n    //           }}\n    //           >\n    //             Продолжить тест\n    //         </Button>\n    //       </ScreenQuiz>\n    //     </Container>\n    //   );\n    // }\n\n  }; // render() {\n  // const { questions, screen, count, answer, disableButton } = this.state;\n\n\n  return screen ? this.renderScreenInitial() : /*#__PURE__*/React.createElement(TestPage, {\n    q: this.props.chapter.AnswerTableData,\n    id: this.props.id,\n    count: count,\n    screen: screen,\n    answer: answer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356\n    },\n    __self: this\n  }); // }\n} // const mapStateToProps = state => ({\n//     chapter : state.chapter,\n//     trainer : state.trainer\n// });\n// export default connect(mapStateToProps,{\n//     // ChangeQuestionSearchText,\n//     // ChangeQuestionTableData,\n//     // ChangeQuestionModalState,\n//     ChangeTestSearchText,\n//     ChangeTestTableData,\n//     ChangeTestModalState,\n//     ChangeAnswersSearchText,\n//     ChangeAnswersTableData,\n//     // ChangeAnswersModalState\n// })(Test);","map":{"version":3,"names":["React","Component","useState","useEffect","connect","Button","ChangeTestSearchText","ChangeTestTableData","ChangeTestModalState","ChangeAnswersSearchText","ChangeAnswersTableData","Alert","SecurePost","SecureGet","apis","TestPage","styled","Counter","Container","div","ScreenQuiz","props","screen","Title","h1","Paragraph","p","ButtonScr","button","right","css","ContainerLabel","Label","label","Radio","input","attrs","type","clickedLabel","Test","console","log","setScreen","count","setCount","answer","setAnswer","id","matId","setMatId","testStarted","setTestStarted","testEnded","setTestEnded","state","renderInitial","renderScreenInitial","chapter","testTableData","userid","login","_id","undefined","testid","url","CREATE_TEST","data","chapterid","chid","materialid","startDate","Date","toLocaleString","complationDate","startTest","endTest","result","then","response","success","message","catch","error","CREATE_TST","materialId","fontSize","fontWeight","width","height","border","borderRadius","boxShadow","AnswerTableData"],"sources":["C:/React_project/EduTest/frontend/src/components/customer/Testing/test.js"],"sourcesContent":["import React, { Component, useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Button } from 'antd';\r\n// import Highlighter from 'react-highlight-words';\r\nimport  { css } from 'styled-components/macro'\r\n// import { \r\n//     ChangeQuestionSearchText,\r\n//     ChangeQuestionTableData,\r\n//     ChangeQuestionModalState,\r\n// } from '../../../actions/trainerAction';\r\nimport { \r\n  ChangeTestSearchText,\r\n  ChangeTestTableData,\r\n  ChangeTestModalState,\r\n  ChangeAnswersSearchText,\r\n  ChangeAnswersTableData,\r\n  // ChangeAnswersModalState,\r\n} from '../../../actions/chapterAction';\r\n\r\nimport Alert from '../../../components/common/alert';\r\nimport { SecurePost, SecureGet } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport TestPage from './testpage';\r\nimport styled from \"styled-components\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport Counter from './Counter';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 80vh;\r\n  width: 100%;\r\n  /*background: #7159c1;*/\r\n`;\r\n\r\nconst ScreenQuiz = styled.div`\r\n  display: flex;\r\n  justify-content: ${props => (props.screen ? \"space-between\" : \"center\")};\r\n  align-items: center;\r\n  flex-direction: column;\r\n  max-width: 1200px;\r\n  padding: ${props => (props.screen ? \"5rem\" : \".5rem\")};\r\n  width: 100%;\r\n  height: 80vh;\r\n  background: #fff;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 5px 40px -20px #000;\r\n\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 2.5rem;\r\n  // color: #7159c1;\r\n  margin-bottom: 0.5rem;\r\n  text-align: center;\r\n  max-width: 90%;\r\n`;\r\n\r\nconst Paragraph = styled.p`\r\n  font-size: 1.5rem;\r\n`;\r\n\r\n// const Button = styled.button`\r\n//   font-size: 1.2rem;\r\n//   font-weight: bold;\r\n//   width: 40%;\r\n//   height: 3rem;\r\n//   // color: #fff;\r\n//   border: none;\r\n//   // background: #7159c1;\r\n//   border-radius: 5px;\r\n//   box-shadow: 0px 3px 3px 0px #666;\r\n\r\n//   @-webkit-keyframes pulsate {\r\n//     0% {transform: scale(0.1, 0.1); opacity: 0.0;}\r\n//     50% {opacity: 1.0;}\r\n//     100% {transform: scale(7, 7); opacity: 0.0;}\r\n// }\r\n// `;\r\n\r\nconst ButtonScr = styled.button`\r\n  font-size: 1.4rem;\r\n  z-index: 10;\r\n  position: fixed;\r\n  top: 15%;\r\n  ${(props) =>\r\n    props.right\r\n      ? css`\r\n          right: 25rem;\r\n        `\r\n      : css`\r\n          left: 25rem;\r\n        `}\r\n`\r\n\r\nconst ContainerLabel = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  margin: 0 auto 0.5rem auto;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Radio = styled.input.attrs({ type: 'checkbox' })`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 15px;\r\n  height: 15px;\r\n  border-radius: 50%;\r\n  border: 7.5px solid black;\r\n  margin: 0 0.5rem 0 0;\r\n  background: ${props => (props.clickedLabel ? \"#7159c1\" : \"#fff\")};\r\n`;\r\n\r\n// const IntoRadio = styled.div`\r\n//   width: 5px;\r\n//   height: 5px;\r\n//   border-radius: 3px;\r\n//   background: #fff;\r\n// `;\r\n\r\n// const Error = styled.div`\r\n//   top: 22rem;\r\n//   color: red;\r\n//   position: absolute;\r\n//   font-weight: bold;\r\n// `;\r\n\r\n\r\nexport default function Test(props){\r\n  console.log(props)\r\n  const [screen, setScreen] = useState(true);\r\n  const [count, setCount] = useState(0);\r\n  const [answer, setAnswer] = useState(0);\r\n  const [matId, setMatId] = useState(props.id);\r\n  const [testStarted, setTestStarted] = useState(false);\r\n  const [testEnded, setTestEnded] = useState(false);\r\n  // const [testStarted, setTestStarted] = useState(false);\r\n\r\n    // constructor(props){\r\n    //   super(props);\r\n    //   this.state={\r\n    //     //questions:[],\r\n    //     loading:false,\r\n    //     screen: true,\r\n    //     count: 0,\r\n    //     //clickedLabel: [],\r\n    //     answer: 0,\r\n    //     //error:false,\r\n    //     // screenFinish:false,\r\n    //     //second:60,\r\n    //    // time:{},\r\n    //     //checked:false,\r\n    //     disableButton: false,\r\n    //     testStarted:false,\r\n    //     testEnded:false,\r\n    //     testDidNotStart:true,\r\n    //     matId : this.props.id,\r\n    //    // details:[],\r\n    //   }\r\n    // }\r\n  \r\n    useEffect(() =>{\r\n      console.log(\"1 - componentDidMount\", this.state.matId)\r\n      this.props.ChangeTestTableData(this.props.id);\r\n      this.props.ChangeAnswersTableData(this.props.id);\r\n    }, [])\r\n\r\n\r\n    const renderInitial = () => {\r\n      console.log(\"renderInitial\")\r\n      // const { count } = this.state;\r\n      setScreen(false);\r\n      setCount(1);\r\n      setTestStarted(true);\r\n      setTestEnded(false);\r\n      // this.setState({\r\n      //   screen: false,\r\n      //   loading: false,\r\n      //   count: 1,\r\n      //   testStarted: true,\r\n      //   testEnded: false,\r\n      //   testDidNotStart: false,\r\n      // });\r\n\r\n      \r\n    };\r\n\r\n    const renderScreenInitial = () => {\r\n      console.log('THIS1:',this.props.chapter.testTableData.userid)\r\n      console.log(\"THIS2:\",this.props.login._id)\r\n      if(this.props.chapter.testTableData.userid!==undefined){\r\n        console.log('THIS3:',this.props.chapter.testTableData.userid)\r\n        console.log(\"THIS4:\",this.props.login._id)\r\n        if(this.props.chapter.testTableData.userid!==this.props.login._id){\r\n          console.log(\"1  CREATE_TEST\", this.props.chapter.testid)\r\n          SecurePost({\r\n            url : `${apis.CREATE_TEST}`,\r\n            data : {\r\n              _id: this.props.chapter.testid,\r\n                chapterid : this.props.chid,\r\n                materialid : this.props.id,\r\n                startDate : Date().toLocaleString(),\r\n                complationDate : Date(),\r\n                startTest: true,\r\n                endTest: false,\r\n                result: 0\r\n              }\r\n            })\r\n            .then((response)=>{\r\n              if(response.data.success){\r\n                  this.props.ChangeTestModalState(false,null, 'Save'); \r\n                  Alert('success','Успешно',response.data.message);\r\n              }\r\n              else{\r\n                  this.props.ChangeTestModalState(false,null, 'Save');\r\n                  return Alert('warning','Предупреждение!',response.data.message);\r\n              }\r\n            })\r\n            .catch((error)=>{\r\n                this.props.ChangeTestModalState(false,null, 'Save');\r\n                return Alert('error','Ошибка!','Ошибка сервера');\r\n            })\r\n            \r\n          console.log(\"CREATE_ANSWERS\", this.props.chapter.testid)  \r\n          SecurePost({\r\n            url : `${apis.CREATE_TST}`,\r\n            data : {\r\n              materialId : this.props.id,\r\n              // testid : this.props.chapter.testTableData._id,\r\n            }\r\n          });\r\n        }\r\n        else if(this.props.chapter.testTableData.userid===this.props.login._id){\r\n          console.log(\"HJK\")\r\n          // if(this.props.chapter.testTableData.userid===this.props.login._id){\r\n            return (\r\n              <Container>\r\n                <ScreenQuiz screen={this.state.screen}>\r\n                  <Title>Тестирование</Title>\r\n                  <Counter id={this.state.matId}/>\r\n                  <Button \r\n                    onClick={this.renderInitial} \r\n                    style={{\r\n                      fontSize: \"1.2rem\", \r\n                      fontWeight: \"bold\",\r\n                      width: \"40%\",\r\n                      height: \"3rem\",\r\n                      border: \"none\",\r\n                      borderRadius: \"5px\",\r\n                      boxShadow: \"0px 3px 3px 0px #666\"\r\n                    }}\r\n                    >\r\n                      Начать тест\r\n                  </Button>\r\n                </ScreenQuiz>\r\n              </Container>\r\n            );\r\n          // }\r\n        }\r\n\r\n      }\r\n\r\n      // if ((this.state.testStarted==false)||\r\n      // ((this.props.chapter.testTableData.userid!=='undefined' || this.props.chapter.testTableData.userid!==undefined || this.props.chapter.testTableData.userid!==null || this.props.chapter.testTableData.userid!=='null')&&\r\n      // (this.props.login._id!=='undefined' || this.props.login._id!==undefined || this.props.login._id!==null || this.props.login._id!=='null'))){\r\n      //   if(this.props.chapter.testTableData.userid===this.props.login._id){\r\n      //     return (\r\n      //       <Container>\r\n      //         <ScreenQuiz screen={this.state.screen}>\r\n      //           <Title>Тестирование</Title>\r\n      //           <Counter id={this.state.matId}/>\r\n      //           <Button \r\n      //             onClick={this.renderInitial} \r\n      //             style={{\r\n      //               fontSize: \"1.2rem\", \r\n      //               fontWeight: \"bold\",\r\n      //               width: \"40%\",\r\n      //               height: \"3rem\",\r\n      //               border: \"none\",\r\n      //               borderRadius: \"5px\",\r\n      //               boxShadow: \"0px 3px 3px 0px #666\"\r\n      //             }}\r\n      //             >\r\n      //               Начать тест\r\n      //           </Button>\r\n      //         </ScreenQuiz>\r\n      //       </Container>\r\n      //     );\r\n      //   }\r\n      //   else{\r\n      //     return \"HJK\"\r\n      //   }\r\n      // } \r\n      // else if (this.state.testStarted==true && this.state.endTest==false){\r\n      //   return (\r\n      //     <Container>\r\n      //       <ScreenQuiz screen={this.state.screen}>\r\n      //         <Title>Тестирование</Title>\r\n      //         <Button \r\n      //           onClick={this.renderInitial} \r\n      //           style={{\r\n      //             fontSize: \"1.2rem\", \r\n      //             fontWeight: \"bold\",\r\n      //             width: \"40%\",\r\n      //             height: \"3rem\",\r\n      //             border: \"none\",\r\n      //             borderRadius: \"5px\",\r\n      //             boxShadow: \"0px 3px 3px 0px #666\"\r\n      //           }}\r\n      //           >\r\n      //             Продолжить тест\r\n      //         </Button>\r\n      //       </ScreenQuiz>\r\n      //     </Container>\r\n      //   );\r\n      // }\r\n      // else if(this.props.chapter.testTableData.userid!==this.props.login._id){\r\n      //   return (\r\n      //     <Container>\r\n      //       <ScreenQuiz screen={this.state.screen}>\r\n      //         <Title>Тестирование</Title>\r\n      //         <Button \r\n      //           onClick={this.renderInitial} \r\n      //           style={{\r\n      //             fontSize: \"1.2rem\", \r\n      //             fontWeight: \"bold\",\r\n      //             width: \"40%\",\r\n      //             height: \"3rem\",\r\n      //             border: \"none\",\r\n      //             borderRadius: \"5px\",\r\n      //             boxShadow: \"0px 3px 3px 0px #666\"\r\n      //           }}\r\n      //           >\r\n      //             Продолжить тест\r\n      //         </Button>\r\n      //       </ScreenQuiz>\r\n      //     </Container>\r\n      //   );\r\n      // }\r\n    };\r\n\r\n\r\n\r\n\r\n    // render() {\r\n      // const { questions, screen, count, answer, disableButton } = this.state;\r\n      return screen ? this.renderScreenInitial() : \r\n        <TestPage q={this.props.chapter.AnswerTableData} id={this.props.id} count={count} screen={screen} answer={answer}/>\r\n       ;\r\n    // }\r\n  }\r\n  \r\n  // const mapStateToProps = state => ({\r\n  //     chapter : state.chapter,\r\n  //     trainer : state.trainer\r\n  // });\r\n  \r\n  // export default connect(mapStateToProps,{\r\n  //     // ChangeQuestionSearchText,\r\n  //     // ChangeQuestionTableData,\r\n  //     // ChangeQuestionModalState,\r\n  //     ChangeTestSearchText,\r\n  //     ChangeTestTableData,\r\n  //     ChangeTestModalState,\r\n  //     ChangeAnswersSearchText,\r\n  //     ChangeAnswersTableData,\r\n  //     // ChangeAnswersModalState\r\n  // })(Test);\r\n\r\n"],"mappings":"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C,KAAK,EAAE,KAHF;YAILC,MAAM,EAAE,MAJH;YAKLC,MAAM,EAAE,MALH;YAMLC,YAAY,EAAE,KANT;YAOLC,SAAS,EAAE;UAPN,CAFT;UAAA;YAAA;YAAA;UAAA;UAAA;QAAA,mEAHF,CADF,CADF,CAHmE,CAyBrE;MACD;IAEF,CAzE+B,CA2EhC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;EACD,CAxJD,CA3D+B,CAwN/B;EACE;;;EACA,OAAOrE,MAAM,GAAG,KAAKkC,mBAAL,EAAH,gBACX,oBAAC,QAAD;IAAU,CAAC,EAAE,KAAKnC,KAAL,CAAWoC,OAAX,CAAmBmC,eAAhC;IAAiD,EAAE,EAAE,KAAKvE,KAAL,CAAW0B,EAAhE;IAAoE,KAAK,EAAEJ,KAA3E;IAAkF,MAAM,EAAErB,MAA1F;IAAkG,MAAM,EAAEuB,MAA1G;IAAA;MAAA;MAAA;IAAA;IAAA;EAAA,EADF,CA1N6B,CA6N/B;AACD,C,CAED;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}