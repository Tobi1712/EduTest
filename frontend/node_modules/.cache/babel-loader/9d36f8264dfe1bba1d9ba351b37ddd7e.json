{"ast":null,"code":"import _objectSpread from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nconst initialState = {\n  QuestionmodalOpened: false,\n  AllQuestionconfirmDirty: false,\n  QuestionsearchText: '',\n  QuestionTableLoading: false,\n  QuestionTableData: [],\n  questionId: null,\n  //selectedSubjects:[],\n  // selectedChapter:[],\n  // selectedMaterials:[],\n  QuestionFormData: {},\n  // fifthoptioAddButtonVisible:true,\n  TestTableLoading: false,\n  TestTableData: [],\n  DataActiveTestDetails: {\n    testDetailsId: null,\n    testquestions: []\n  },\n  NewTestmodalOpened: false,\n  Createtestmode: 'Создать'\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case 'CHANGE_QUESTION_MODAL_STATE':\n      return _objectSpread({}, state, {\n        QuestionmodalOpened: action.payload1,\n        questionId: action.payload2,\n        Questionmode: action.payload3,\n        questioneditdetails: action.payload4\n      });\n\n    case 'CHANGE_QUESTION_FORM_CONFIRMDIRTY':\n      return _objectSpread({}, state, {\n        AllQuestionconfirmDirty: action.payload\n      });\n\n    case 'CHANGE_QUESTION_SEARCH_TEXT':\n      return _objectSpread({}, state, {\n        QuestionsearchText: action.payload\n      });\n\n    case 'CHANGE_QUESTION_TABLE_LOADING_STATUS':\n      return _objectSpread({}, state, {\n        QuestionTableLoading: action.payload1,\n        QuestionTableData: action.payload2 // case 'ADD_FIFTH_OPTION':\n        //     return {\n        //         ...state,\n        //         QuestionFormData:{\n        //             ...state.QuestionFormData,\n        //             options:[\n        //                 ...state.QuestionFormData.options,\n        //                 {\n        //                     image :null,\n        //                     body : null,\n        //                     isAnswer :false\n        //                 }\n        //             ]\n        //         },\n        //         // fifthoptioAddButtonVisible:false\n        //     }\n        // case 'CHANGE_SELECTED_SUBJECT':\n        //     return {\n        //         ...state,\n        //         selectedSubjects : action.payload\n        //     }\n        // case 'CHANGE_SELECTED_CHAPTER':\n        //     return {\n        //         ...state,\n        //         selectedChapter : action.payload\n        //     }\n        //     case 'CHANGE_SELECTED_MATERIAL':\n        //         return {\n        //             ...state,\n        //             selectedMaterials : action.payload\n        //         }\n\n      });\n\n    case 'CHANGE_QUESTION_FORM_DATA':\n      return _objectSpread({}, state, {\n        QuestionFormData: action.payload\n      });\n\n    case 'CHANGE_TEST_DETAILS_MODAL_STATE':\n      return _objectSpread({}, state, {\n        TestDetailsmodalOpened: action.payload1,\n        DataActiveTestDetails: _objectSpread({}, state.DataActiveTestDetails, {\n          testDetailsId: action.payload2\n        })\n      });\n\n    case 'NEW_TEST_MODAL_STATE':\n      return _objectSpread({}, state, {\n        NewTestmodalOpened: action.payload1,\n        Createtestmode: action.payload2\n      });\n\n    case 'CHANGE_TEST_SEARCH_TEXT':\n      return _objectSpread({}, state, {\n        TestsearchText: action.payload\n      });\n\n    case 'CHANGE_TEST_TABLE_LOADING_STATUS':\n      return _objectSpread({}, state, {\n        TestTableLoading: action.payload1,\n        TestTableData: action.payload2\n      });\n\n    case 'CHANGE_CURRENT_ACTIVE_TEST_QUESTION':\n      return _objectSpread({}, state, {\n        DataActiveTestDetails: _objectSpread({}, state.DataActiveTestDetails, {\n          testquestions: action.payload\n        })\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:\\React_project\\EduTest\\frontend\\src\\reducers\\trainer.js"],"names":["initialState","QuestionmodalOpened","AllQuestionconfirmDirty","QuestionsearchText","QuestionTableLoading","QuestionTableData","questionId","QuestionFormData","TestTableLoading","TestTableData","DataActiveTestDetails","testDetailsId","testquestions","NewTestmodalOpened","Createtestmode","state","action","type","payload1","payload2","Questionmode","payload3","questioneditdetails","payload4","payload","TestDetailsmodalOpened","TestsearchText"],"mappings":";AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,mBAAmB,EAAG,KADL;AAEjBC,EAAAA,uBAAuB,EAAE,KAFR;AAGjBC,EAAAA,kBAAkB,EAAG,EAHJ;AAIjBC,EAAAA,oBAAoB,EAAG,KAJN;AAKjBC,EAAAA,iBAAiB,EAAG,EALH;AAMjBC,EAAAA,UAAU,EAAG,IANI;AAOjB;AACA;AACA;AACAC,EAAAA,gBAAgB,EAAC,EAVA;AAWjB;AACAC,EAAAA,gBAAgB,EAAC,KAZA;AAajBC,EAAAA,aAAa,EAAC,EAbG;AAcjBC,EAAAA,qBAAqB,EAAG;AACpBC,IAAAA,aAAa,EAAG,IADI;AAEpBC,IAAAA,aAAa,EAAE;AAFK,GAdP;AAkBjBC,EAAAA,kBAAkB,EAAG,KAlBJ;AAmBjBC,EAAAA,cAAc,EAAG;AAnBA,CAArB;AAuBA,gBAAe,CAACC,KAAK,GAAGf,YAAT,EAAuBgB,MAAvB,KAAiC;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,6BAAL;AACI,+BACOF,KADP;AAEId,QAAAA,mBAAmB,EAAGe,MAAM,CAACE,QAFjC;AAGIZ,QAAAA,UAAU,EAAGU,MAAM,CAACG,QAHxB;AAIIC,QAAAA,YAAY,EAAGJ,MAAM,CAACK,QAJ1B;AAKIC,QAAAA,mBAAmB,EAAGN,MAAM,CAACO;AALjC;;AAQJ,SAAK,mCAAL;AACI,+BACOR,KADP;AAEIb,QAAAA,uBAAuB,EAAGc,MAAM,CAACQ;AAFrC;;AAIJ,SAAK,6BAAL;AACI,+BACOT,KADP;AAEIZ,QAAAA,kBAAkB,EAAGa,MAAM,CAACQ;AAFhC;;AAIJ,SAAK,sCAAL;AACI,+BACOT,KADP;AAEIX,QAAAA,oBAAoB,EAAGY,MAAM,CAACE,QAFlC;AAGIb,QAAAA,iBAAiB,EAAGW,MAAM,CAACG,QAH/B,CAKJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAnCI;;AAoCJ,SAAK,2BAAL;AACI,+BACOJ,KADP;AAEIR,QAAAA,gBAAgB,EAAGS,MAAM,CAACQ;AAF9B;;AAIJ,SAAK,iCAAL;AACI,+BACOT,KADP;AAEIU,QAAAA,sBAAsB,EAAGT,MAAM,CAACE,QAFpC;AAGIR,QAAAA,qBAAqB,oBACdK,KAAK,CAACL,qBADQ;AAEjBC,UAAAA,aAAa,EAAGK,MAAM,CAACG;AAFN;AAHzB;;AASJ,SAAK,sBAAL;AACI,+BACOJ,KADP;AAEIF,QAAAA,kBAAkB,EAAGG,MAAM,CAACE,QAFhC;AAGIJ,QAAAA,cAAc,EAAGE,MAAM,CAACG;AAH5B;;AAMJ,SAAK,yBAAL;AACI,+BACOJ,KADP;AAEIW,QAAAA,cAAc,EAAGV,MAAM,CAACQ;AAF5B;;AAIJ,SAAK,kCAAL;AACI,+BACOT,KADP;AAEIP,QAAAA,gBAAgB,EAAGQ,MAAM,CAACE,QAF9B;AAGIT,QAAAA,aAAa,EAAEO,MAAM,CAACG;AAH1B;;AAKJ,SAAK,qCAAL;AACI,+BACOJ,KADP;AAEIL,QAAAA,qBAAqB,oBACdK,KAAK,CAACL,qBADQ;AAEjBE,UAAAA,aAAa,EAACI,MAAM,CAACQ;AAFJ;AAFzB;;AAOJ;AACI,aAAOT,KAAP;AAnGR;AAqGH,CAtGD","sourcesContent":["const initialState = {\r\n    QuestionmodalOpened : false,\r\n    AllQuestionconfirmDirty: false,\r\n    QuestionsearchText : '',\r\n    QuestionTableLoading : false, \r\n    QuestionTableData : [],\r\n    questionId : null,\r\n    //selectedSubjects:[],\r\n    // selectedChapter:[],\r\n    // selectedMaterials:[],\r\n    QuestionFormData:{},\r\n    // fifthoptioAddButtonVisible:true,\r\n    TestTableLoading:false,\r\n    TestTableData:[],\r\n    DataActiveTestDetails : {\r\n        testDetailsId : null,\r\n        testquestions :[]\r\n    },\r\n    NewTestmodalOpened : false,\r\n    Createtestmode : 'Создать',\r\n}\r\n\r\n\r\nexport default (state = initialState, action )=>{\r\n    switch(action.type){\r\n        case 'CHANGE_QUESTION_MODAL_STATE':\r\n            return {\r\n                ...state,\r\n                QuestionmodalOpened : action.payload1,\r\n                questionId : action.payload2,\r\n                Questionmode : action.payload3,\r\n                questioneditdetails : action.payload4\r\n            }\r\n\r\n        case 'CHANGE_QUESTION_FORM_CONFIRMDIRTY':\r\n            return {\r\n                ...state,\r\n                AllQuestionconfirmDirty : action.payload\r\n            }\r\n        case 'CHANGE_QUESTION_SEARCH_TEXT':\r\n            return {\r\n                ...state,\r\n                QuestionsearchText : action.payload\r\n            }\r\n        case 'CHANGE_QUESTION_TABLE_LOADING_STATUS':\r\n            return {\r\n                ...state,\r\n                QuestionTableLoading : action.payload1,\r\n                QuestionTableData : action.payload2\r\n            }\r\n        // case 'ADD_FIFTH_OPTION':\r\n        //     return {\r\n        //         ...state,\r\n        //         QuestionFormData:{\r\n        //             ...state.QuestionFormData,\r\n        //             options:[\r\n        //                 ...state.QuestionFormData.options,\r\n        //                 {\r\n        //                     image :null,\r\n        //                     body : null,\r\n        //                     isAnswer :false\r\n        //                 }\r\n        //             ]\r\n        //         },\r\n        //         // fifthoptioAddButtonVisible:false\r\n        //     }\r\n        // case 'CHANGE_SELECTED_SUBJECT':\r\n        //     return {\r\n        //         ...state,\r\n        //         selectedSubjects : action.payload\r\n        //     }\r\n        // case 'CHANGE_SELECTED_CHAPTER':\r\n        //     return {\r\n        //         ...state,\r\n        //         selectedChapter : action.payload\r\n        //     }\r\n        //     case 'CHANGE_SELECTED_MATERIAL':\r\n        //         return {\r\n        //             ...state,\r\n        //             selectedMaterials : action.payload\r\n        //         }\r\n        case 'CHANGE_QUESTION_FORM_DATA':\r\n            return{\r\n                ...state,\r\n                QuestionFormData : action.payload\r\n            }\r\n        case 'CHANGE_TEST_DETAILS_MODAL_STATE':\r\n            return {\r\n                ...state,\r\n                TestDetailsmodalOpened : action.payload1,\r\n                DataActiveTestDetails :{\r\n                    ...state.DataActiveTestDetails,\r\n                    testDetailsId : action.payload2\r\n                }\r\n            }\r\n\r\n        case 'NEW_TEST_MODAL_STATE':\r\n            return{\r\n                ...state,\r\n                NewTestmodalOpened : action.payload1,\r\n                Createtestmode : action.payload2\r\n            }\r\n\r\n        case 'CHANGE_TEST_SEARCH_TEXT':\r\n            return {\r\n                ...state,\r\n                TestsearchText : action.payload\r\n            }\r\n        case 'CHANGE_TEST_TABLE_LOADING_STATUS':\r\n            return {\r\n                ...state,\r\n                TestTableLoading : action.payload1,\r\n                TestTableData :action.payload2\r\n            }\r\n        case 'CHANGE_CURRENT_ACTIVE_TEST_QUESTION':\r\n            return{\r\n                ...state,\r\n                DataActiveTestDetails:{\r\n                    ...state.DataActiveTestDetails,\r\n                    testquestions:action.payload\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}