{"ast":null,"code":"var _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\admin\\\\Division\\\\newdivision.js\";\nimport React, { Component } from 'react';\nimport './newdivision.css';\nimport { Form, Input, Button, Select } from 'antd';\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport { connect } from 'react-redux';\nimport { ChangeDivisionConfirmDirty, ChangeDivisionModalState, ChangeDivisionTableData } from '../../../actions/adminAction';\nimport Alert from '../../../components/common/alert'; //const { Option } = Select;\n\nclass NewDivision extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          console.log('Полученные значения формы: ', values);\n          SecurePost({\n            url: \"\".concat(apis.CREATE_DIVISION),\n            data: {\n              _id: this.props.admin.divisionId,\n              name: values.name,\n              description: values.description\n            }\n          }).then(response => {\n            if (response.data.success) {\n              this.props.ChangeDivisionModalState(false, null, 'Регистрация');\n              Alert('success', 'Успешно', response.data.message);\n              this.props.ChangeDivisionTableData();\n            } else {\n              console.log(response.data);\n              this.props.ChangeDivisionModalState(false, null, 'Регистрация');\n              return Alert('warning', 'Предупреждение!', response.data.message);\n            }\n          }).catch(error => {\n            this.props.ChangeDivisionModalState(false, null, 'Регистрация');\n            return Alert('error', 'Ошибка!', 'Ошибка сервера');\n          });\n        }\n      });\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(\"div\", {\n      className: \"register-division-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"register-division-form-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n      hasFeedback: true,\n      className: \"input-admin-division\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, getFieldDecorator('name', {\n      initialValue: this.props.admin.divisiondetails.name,\n      rules: [{\n        required: true,\n        message: 'Пожалуйста, введите название подразделения!',\n        whitespace: true\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",\n      hasFeedback: true,\n      className: \"input-admin-division\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, getFieldDecorator('description', {\n      initialValue: this.props.admin.divisiondetails.description,\n      rules: [{\n        required: false,\n        message: 'Описание!',\n        whitespace: true\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.props.admin.Divisionmode)))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  admin: state.admin\n});\n\nconst NewDivisionForm = Form.create({\n  name: 'register'\n})(NewDivision);\nexport default connect(mapStateToProps, {\n  ChangeDivisionConfirmDirty,\n  ChangeDivisionModalState,\n  ChangeDivisionTableData\n})(NewDivisionForm);","map":{"version":3,"sources":["C:\\React_project\\EduTest\\frontend\\src\\components\\admin\\Division\\newdivision.js"],"names":["React","Component","Form","Input","Button","Select","SecurePost","apis","connect","ChangeDivisionConfirmDirty","ChangeDivisionModalState","ChangeDivisionTableData","Alert","NewDivision","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","console","log","url","CREATE_DIVISION","data","_id","admin","divisionId","name","description","then","response","success","message","catch","error","render","getFieldDecorator","initialValue","divisiondetails","rules","required","whitespace","Divisionmode","mapStateToProps","state","NewDivisionForm","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport './newdivision.css';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Select\r\n} from 'antd';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    ChangeDivisionConfirmDirty,\r\n    ChangeDivisionModalState,\r\n    ChangeDivisionTableData\r\n} from '../../../actions/adminAction';\r\nimport Alert from '../../../components/common/alert';\r\n//const { Option } = Select;\r\nclass NewDivision extends Component {\r\n\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                console.log('Полученные значения формы: ', values);\r\n                \r\n                    SecurePost({\r\n                        url : `${apis.CREATE_DIVISION}`,\r\n                        data : {\r\n                            _id : this.props.admin.divisionId,\r\n                            name : values.name,                            \r\n                            description : values.description\r\n                        }\r\n                    }).then((response)=>{\r\n                        if(response.data.success){\r\n                            this.props.ChangeDivisionModalState(false,null,'Регистрация');\r\n                            Alert('success','Успешно',response.data.message);\r\n                            this.props.ChangeDivisionTableData();\r\n                        }\r\n                        else{\r\n                            console.log(response.data);\r\n                            this.props.ChangeDivisionModalState(false,null,'Регистрация');\r\n                            return Alert('warning','Предупреждение!',response.data.message);\r\n                        }\r\n                    }).catch((error)=>{\r\n                        this.props.ChangeDivisionModalState(false,null,'Регистрация');\r\n                        return Alert('error','Ошибка!','Ошибка сервера');\r\n                    })\r\n                \r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div className=\"register-division-form\">\r\n                <div className=\"register-division-form-body\">\r\n                    <Form  onSubmit={this.handleSubmit}>\r\n                        <Form.Item label=\"Название\" hasFeedback className=\"input-admin-division\">\r\n                            {getFieldDecorator('name', {\r\n                                initialValue : this.props.admin.divisiondetails.name,\r\n                                rules: [{ required: true, message: 'Пожалуйста, введите название подразделения!', whitespace: true }],\r\n                            })(<Input />)}\r\n                        </Form.Item>\r\n                    \r\n                        <Form.Item label=\"Описание\" hasFeedback className=\"input-admin-division\">\r\n                            {getFieldDecorator('description', {\r\n                                initialValue : this.props.admin.divisiondetails.description,\r\n                                rules: [\r\n                                    {\r\n                                        required: false,\r\n                                        message: 'Описание!',\r\n                                        whitespace: true\r\n                                    },\r\n                                ],\r\n                            })(<Input />)}\r\n                        </Form.Item> \r\n\r\n                        \r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                {this.props.admin.Divisionmode}\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin : state.admin\r\n});\r\n\r\n\r\n\r\nconst NewDivisionForm = Form.create({ name: 'register' })(NewDivision);\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeDivisionConfirmDirty,\r\n    ChangeDivisionModalState,\r\n    ChangeDivisionTableData\r\n})(NewDivisionForm);\r\n\r\n"]},"metadata":{},"sourceType":"module"}