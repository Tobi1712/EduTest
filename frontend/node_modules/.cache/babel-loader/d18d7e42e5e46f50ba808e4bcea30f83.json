{"ast":null,"code":"import _slicedToArray from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport { css as _css } from \"styled-components\";\nimport { createGlobalStyle as _createGlobalStyle } from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\admin\\\\ForCustomers\\\\slidertest.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n          left: 0.5rem;\\n        \"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n          right: 0.5rem;\\n        \"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  * {\\n    box-sizing: border-box;\\n  }\\n  html,body {\\n    padding: 0;\\n    margin: 0;\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport Slider from 'react-touch-drag-slider';\nimport { ChangeSlideSearchText, ChangeSlideTableData, ChangeSlideModalState } from '../../../actions/chapterAction'; // import images from './images'\n// define some basic styles\n\nconst GlobalStyles = _createGlobalStyle(_templateObject()); // The slider will fit any size container, lets go full screen...\n\n\nconst AppStyles = _styled.main.withConfig({\n  displayName: \"slidertest__AppStyles\",\n  componentId: \"sc-1aix7tj-0\"\n})([\"height:50vh;width:50vw;\"]); // create some buttons for none drag slide change\n\n\nconst Button = _styled.button.withConfig({\n  displayName: \"slidertest__Button\",\n  componentId: \"sc-1aix7tj-1\"\n})([\"font-size:2rem;z-index:10;position:fixed;top:50%;\", \"\"], props => props.right ? _css(_templateObject2()) : _css(_templateObject3()));\n\nfunction SliderShow2() {\n  const _useState = useState(1),\n        _useState2 = _slicedToArray(_useState, 2),\n        index = _useState2[0],\n        setIndex = _useState2[1]; //   var data1=[{image: 'https://images.unsplash.com/photo-1609952048180-7b35ea6b083b?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80', caption: 'assas'},\n  //         {image: 'https://images.unsplash.com/photo-1608241175281-722a1c6111be?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80', caption: 'asa'}];\n\n\n  var data2 = [];\n  this.props.chapter.slideTableData.map((d, i) => {\n    data2[i] = {\n      image: d.slimage,\n      caption: d.slbody\n    };\n  });\n  console.log(data2);\n\n  const increment = () => {\n    if (index < data1.length - 1) setIndex(index + 1);\n  };\n\n  const decrement = () => {\n    if (index > 0) setIndex(index - 1);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(GlobalStyles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), /*#__PURE__*/React.createElement(AppStyles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: decrement,\n    left: true,\n    disabled: index === 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"\\u3008\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: increment,\n    right: true,\n    disabled: index === data1.length - 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"\\u3009\"), /*#__PURE__*/React.createElement(Slider, {\n    onSlideComplete: setIndex,\n    onSlideStart: i => {\n      console.log('started dragging on slide', i);\n    },\n    activeIndex: index,\n    threshHold: 100,\n    transition: 0.3,\n    scaleOnDrag: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, data1.map(({\n    image,\n    caption\n  }, index) => /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    key: index,\n    alt: caption,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })))));\n}\n\nconst mapStateToProps = state => ({\n  chapter: state.chapter\n});\n\nexport default SliderShow2;","map":{"version":3,"names":["React","useState","Slider","ChangeSlideSearchText","ChangeSlideTableData","ChangeSlideModalState","GlobalStyles","createGlobalStyle","AppStyles","styled","main","Button","button","props","right","css","SliderShow2","index","setIndex","data2","chapter","slideTableData","map","d","i","image","slimage","caption","slbody","console","log","increment","data1","length","decrement","mapStateToProps","state"],"sources":["C:/React_project/EduTest/frontend/src/components/admin/ForCustomers/slidertest.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Slider from 'react-touch-drag-slider'\r\nimport styled, { createGlobalStyle, css } from 'styled-components/macro'\r\nimport { \r\n    ChangeSlideSearchText,\r\n    ChangeSlideTableData,\r\n    ChangeSlideModalState\r\n} from '../../../actions/chapterAction';\r\n// import images from './images'\r\n\r\n// define some basic styles\r\nconst GlobalStyles = createGlobalStyle`\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n  html,body {\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n`\r\n// The slider will fit any size container, lets go full screen...\r\nconst AppStyles = styled.main`\r\n  height: 50vh;\r\n  width: 50vw;\r\n`\r\n\r\n// create some buttons for none drag slide change\r\nconst Button = styled.button`\r\n  font-size: 2rem;\r\n  z-index: 10;\r\n  position: fixed;\r\n  top: 50%;\r\n  ${(props) =>\r\n    props.right\r\n      ? css`\r\n          right: 0.5rem;\r\n        `\r\n      : css`\r\n          left: 0.5rem;\r\n        `}\r\n`\r\n\r\nfunction SliderShow2() {\r\n\r\n  const [index, setIndex] = useState(1)\r\n//   var data1=[{image: 'https://images.unsplash.com/photo-1609952048180-7b35ea6b083b?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80', caption: 'assas'},\r\n//         {image: 'https://images.unsplash.com/photo-1608241175281-722a1c6111be?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80', caption: 'asa'}];\r\n\r\n        var data2=[];\r\n\r\n        this.props.chapter.slideTableData.map((d,i)=>{\r\n            \r\n            data2[i]=(\r\n                {\r\n                image: d.slimage,\r\n                caption: d.slbody\r\n                }\r\n            )\r\n        })\r\n        console.log(data2);\r\n        const increment = () => {\r\n            if (index < data1.length - 1) setIndex(index + 1)\r\n        }\r\n\r\n        const decrement = () => {\r\n            if (index > 0) setIndex(index - 1)\r\n        }\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyles />\r\n      <AppStyles>\r\n        <Button onClick={decrement} left disabled={index === 0}>\r\n          〈\r\n        </Button>\r\n        <Button\r\n          onClick={increment}\r\n          right\r\n          disabled={index === data1.length - 1}\r\n        >\r\n          〉\r\n        </Button>\r\n        <Slider\r\n          onSlideComplete={setIndex}\r\n          onSlideStart={(i) => {\r\n            console.log('started dragging on slide', i)\r\n          }}\r\n          activeIndex={index}\r\n          threshHold={100}\r\n          transition={0.3}\r\n          scaleOnDrag={true}\r\n        >\r\n          {data1.map(({ image, caption }, index) => (\r\n            <img src={image} key={index} alt={caption} />\r\n          ))}\r\n        </Slider>\r\n      </AppStyles>\r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = state => ({\r\n    chapter : state.chapter\r\n});\r\n\r\nexport default SliderShow2"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,SACIC,qBADJ,EAEIC,oBAFJ,EAGIC,qBAHJ,QAIO,gCAJP,C,CAKA;AAEA;;AACA,MAAMC,YAAY,GAAGC,kBAAH,mBAAlB,C,CASA;;;AACA,MAAMC,SAAS,GAAGC,OAAM,CAACC,IAAV;EAAA;EAAA;AAAA,+BAAf,C,CAKA;;;AACA,MAAMC,MAAM,GAAGF,OAAM,CAACG,MAAV;EAAA;EAAA;AAAA,8DAKPC,KAAD,IACAA,KAAK,CAACC,KAAN,GACIC,IADJ,uBAIIA,IAJJ,oBANQ,CAAZ;;AAeA,SAASC,WAAT,GAAuB;EAAA,kBAEKf,QAAQ,CAAC,CAAD,CAFb;EAAA;EAAA,MAEdgB,KAFc;EAAA,MAEPC,QAFO,kBAGvB;EACA;;;EAEQ,IAAIC,KAAK,GAAC,EAAV;EAEA,KAAKN,KAAL,CAAWO,OAAX,CAAmBC,cAAnB,CAAkCC,GAAlC,CAAsC,CAACC,CAAD,EAAGC,CAAH,KAAO;IAEzCL,KAAK,CAACK,CAAD,CAAL,GACI;MACAC,KAAK,EAAEF,CAAC,CAACG,OADT;MAEAC,OAAO,EAAEJ,CAAC,CAACK;IAFX,CADJ;EAMH,CARD;EASAC,OAAO,CAACC,GAAR,CAAYX,KAAZ;;EACA,MAAMY,SAAS,GAAG,MAAM;IACpB,IAAId,KAAK,GAAGe,KAAK,CAACC,MAAN,GAAe,CAA3B,EAA8Bf,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;EACjC,CAFD;;EAIA,MAAMiB,SAAS,GAAG,MAAM;IACpB,IAAIjB,KAAK,GAAG,CAAZ,EAAeC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;EAClB,CAFD;;EAIN,oBACE,uDACE,oBAAC,YAAD;IAAA;MAAA;MAAA;IAAA;IAAA;EAAA,EADF,eAEE,oBAAC,SAAD;IAAA;MAAA;MAAA;IAAA;IAAA;EAAA,gBACE,oBAAC,MAAD;IAAQ,OAAO,EAAEiB,SAAjB;IAA4B,IAAI,MAAhC;IAAiC,QAAQ,EAAEjB,KAAK,KAAK,CAArD;IAAA;MAAA;MAAA;IAAA;IAAA;EAAA,YADF,eAIE,oBAAC,MAAD;IACE,OAAO,EAAEc,SADX;IAEE,KAAK,MAFP;IAGE,QAAQ,EAAEd,KAAK,KAAKe,KAAK,CAACC,MAAN,GAAe,CAHrC;IAAA;MAAA;MAAA;IAAA;IAAA;EAAA,YAJF,eAWE,oBAAC,MAAD;IACE,eAAe,EAAEf,QADnB;IAEE,YAAY,EAAGM,CAAD,IAAO;MACnBK,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCN,CAAzC;IACD,CAJH;IAKE,WAAW,EAAEP,KALf;IAME,UAAU,EAAE,GANd;IAOE,UAAU,EAAE,GAPd;IAQE,WAAW,EAAE,IARf;IAAA;MAAA;MAAA;IAAA;IAAA;EAAA,GAUGe,KAAK,CAACV,GAAN,CAAU,CAAC;IAAEG,KAAF;IAASE;EAAT,CAAD,EAAqBV,KAArB,kBACT;IAAK,GAAG,EAAEQ,KAAV;IAAiB,GAAG,EAAER,KAAtB;IAA6B,GAAG,EAAEU,OAAlC;IAAA;MAAA;MAAA;IAAA;IAAA;EAAA,EADD,CAVH,CAXF,CAFF,CADF;AA+BD;;AACD,MAAMQ,eAAe,GAAGC,KAAK,KAAK;EAC9BhB,OAAO,EAAGgB,KAAK,CAAChB;AADc,CAAL,CAA7B;;AAIA,eAAeJ,WAAf"},"metadata":{},"sourceType":"module"}