{"ast":null,"code":"import _objectSpread from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { css as _css } from \"styled-components\";\nimport { createGlobalStyle as _createGlobalStyle } from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\admin\\\\ForCustomers\\\\test.js\";\nimport React, { Component, useState } from 'react';\nimport Slider from 'react-touch-drag-slider';\nimport { connect } from 'react-redux';\nimport { Table, Input, Button, Typography, Divider, Icon, Modal, Popconfirm } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { ChangeQuestionSearchText, ChangeQuestionTableData, ChangeQuestionModalState } from '../../../actions/trainerAction';\nimport Alert from '../../../components/common/alert';\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport Test2 from './test2';\nimport Test3 from './test3';\n\nclass Test extends Component {\n  constructor(props) {\n    super(props);\n\n    this.OpentestModal = id => {\n      this.setState((previousState, previousProps) => {\n        return {\n          materialId: id,\n          testModelVisible: true\n        };\n      });\n    };\n\n    this.ClosetestModal = () => {\n      this.setState((previousState, previousProps) => {\n        return {\n          materialId: null,\n          testModelVisible: false\n        };\n      });\n    };\n\n    this.getColumnSearchProps = dataIndex => ({\n      filterDropdown: ({\n        setSelectedKeys,\n        selectedKeys,\n        confirm,\n        clearFilters\n      }) => /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          padding: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Input, {\n        ref: node => {\n          this.searchInput = node;\n        },\n        placeholder: \"Search \".concat(dataIndex),\n        value: selectedKeys[0],\n        onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n        onPressEnter: () => this.handleSearch(selectedKeys, confirm),\n        style: {\n          width: 188,\n          marginBottom: 8,\n          display: 'block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        onClick: () => this.handleSearch(selectedKeys, confirm),\n        icon: \"search\",\n        size: \"small\",\n        style: {\n          width: 90,\n          marginRight: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Search\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.handleReset(clearFilters),\n        size: \"small\",\n        style: {\n          width: 90\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Reset\")),\n      filterIcon: filtered => /*#__PURE__*/React.createElement(Icon, {\n        type: \"search\",\n        style: {\n          color: filtered ? '#1890ff' : undefined\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }),\n      onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          setTimeout(() => this.searchInput.select());\n        }\n      },\n      render: text => /*#__PURE__*/React.createElement(Highlighter, {\n        highlightStyle: {\n          backgroundColor: '#ffc069',\n          padding: 0\n        },\n        searchWords: [this.props.admin.DivisionsearchText],\n        autoEscape: true,\n        textToHighlight: text.toString(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })\n    });\n\n    this.handleSearch = (selectedKeys, confirm) => {\n      confirm();\n      this.props.ChangeDivisionSearchText(selectedKeys[0]);\n    };\n\n    this.handleReset = clearFilters => {\n      clearFilters();\n      this.props.ChangeDivisionSearchText('');\n    };\n\n    this.state = {\n      QuestiontableLoading: false,\n      details: null,\n      materialId: null,\n      testModelVisible: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.ChangeQuestionTableData(this.props.id);\n  }\n\n  render() {\n    const columns = [_objectSpread({\n      title: 'Название',\n      dataIndex: 'body',\n      key: 'body',\n      width: '25%'\n    }, this.getColumnSearchProps('name')), _objectSpread({\n      title: 'Описание',\n      dataIndex: 'description',\n      key: 'description',\n      width: '25%'\n    }, this.getColumnSearchProps('description')), {\n      title: 'Компания',\n      dataIndex: 'company.name',\n      key: 'company.name',\n      width: '25%' //...this.getColumnSearchProps('company.name'),\n\n    }, {\n      title: 'Действие',\n      key: '_id',\n      dataIndex: '_id',\n      render: key => /*#__PURE__*/React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        shape: \"circle\",\n        icon: \"edit\",\n        onClick: () => this.openModal(key, 'Сохранить'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), /*#__PURE__*/React.createElement(Divider, {\n        type: \"vertical\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), /*#__PURE__*/React.createElement(Popconfirm, {\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B\\uFF1F\",\n        cancelText: \"\\u041D\\u0435\\u0442\",\n        okText: \"\\u0414\\u0430\",\n        onConfirm: () => {\n          this.deleteDivision(key);\n        },\n        icon: /*#__PURE__*/React.createElement(Icon, {\n          type: \"delete\",\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"danger\",\n        shape: \"circle\",\n        icon: \"delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      })))\n    }];\n    var questions = [];\n    const Title = Typography.Title;\n    this.props.trainer.QuestionTableData.map((d, i) => {\n      questions[i] = {\n        question: d.body,\n        optionA: d.answer1,\n        optionB: d.answer2,\n        optionC: d.answer3,\n        optionD: d.answer4,\n        optionE: d.answer5,\n        answer: (d.trueans1 === true ? d.answer1 : null) || (d.trueans2 === true ? d.answer2 : null) || (d.trueans3 === true ? d.answer3 : null) || (d.trueans4 === true ? d.answer4 : null) || (d.trueans5 === true ? d.answer5 : null) // answerOptions: [\n        //   { answerText: d.answer1, isCorrect: d.trueans1 },\n        //   { answerText: d.answer2, isCorrect: d.trueans2 },\n        //   { answerText: d.answer3, isCorrect: d.trueans3 },\n        //   { answerText: d.answer4, isCorrect: d.trueans4 },\n        //   { answerText: d.answer5, isCorrect: d.trueans5}\n        // ]\n\n      };\n    });\n    console.log(\"fg\", questions);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin-table-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      icon: \"user-add\",\n      style: {\n        marginBottom: '10px'\n      },\n      onClick: () => this.OpentestModal(key),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register-division-form-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(Title, {\n      level: 4,\n      style: {\n        color: '#fff',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043E\\u0442\\u0434\\u0435\\u043B\\u043E\\u0432\")), /*#__PURE__*/React.createElement(Table, {\n      bordered: true,\n      columns: columns,\n      dataSource: this.props.trainer.questionTableData,\n      size: \"medium\",\n      pagination: {\n        pageSize: 5\n      },\n      loading: this.props.trainer.questionTableLoadingStatus,\n      rowKey: \"_id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), \";\", /*#__PURE__*/React.createElement(Modal, {\n      visible: this.props.trainer.QuestionmodalOpened,\n      title: false,\n      onOk: this.handleOk,\n      onCancel: this.closeModal,\n      style: {\n        top: '20px',\n        padding: '0px',\n        backgroundColor: 'rgb(155,175,190)'\n      },\n      width: \"40%\",\n      destroyOnClose: true,\n      footer: [],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(Test3, {\n      details: questions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  chapter: state.chapter,\n  trainer: state.trainer\n});\n\nexport default connect(mapStateToProps, {\n  ChangeQuestionSearchText,\n  ChangeQuestionTableData,\n  ChangeQuestionModalState\n})(Test); // import React, { Component } from 'react';\n// import { Table, Input, Button, Typography, Divider, Icon, Modal, Popconfirm } from 'antd';\n// import Highlighter from 'react-highlight-words';\n// import { connect } from 'react-redux';\n// import { \n//     ChangeDivisionSearchText,\n//     ChangeDivisionTableData,\n//     ChangeDivisionModalState,\n//     ChangeCompanyTableData,\n//     ChangeSelectedCompany,\n// } from '../../../actions/adminAction';\n// import './alldivision.css'\n// import Alert from '../../../components/common/alert';\n// import {SecurePost} from '../../../services/axiosCall';\n// import apis from '../../../services/Apis';\n// import NewDivisionForm from './newdivision';\n// class AllDivision extends Component {\n//   constructor(props){\n//     super(props);\n//     this.state={\n//       DivisiontableLoading : false\n//     }\n//   }\n//   openModal = (id,mode)=>{\n//     this.props.ChangeDivisionModalState(true,id,mode);\n//   }\n//   closeModal = ()=>{\n//     this.props.ChangeDivisionModalState(false,null,'Регистрация');\n//   }\n//   componentDidMount(){\n//     this.props.ChangeCompanyTableData();\n//     this.props.ChangeDivisionTableData(this.props.admin.selectedCompany);\n//   }\n//   deleteDivision = (id)=>{\n//     SecurePost({\n//       url : `${apis.DELETE_DIVISION}`,\n//       data : {\n//           _id : id\n//       }\n//     }).then((response)=>{\n//       if(response.data.success){\n//         Alert('success','Успешно',response.data.message);\n//         this.props.ChangeDivisionTableData();\n//       }\n//       else{\n//         return Alert('warning','Предупреждение!',response.data.message);\n//       }\n//     }).catch((error)=>{\n//       return Alert('error','Ошибка!','Ошибка сервера');\n//     })\n//   }\n//     render() {\n//       const { Title } = Typography;\n//       const columns = [\n//         {\n//           title: 'Название',\n//           dataIndex: 'name',\n//           key: 'name',\n//           width: '25%',\n//           ...this.getColumnSearchProps('name'),\n//         },\n//         {\n//           title: 'Описание',\n//           dataIndex: 'description',\n//           key: 'description',\n//           width: '25%',\n//           ...this.getColumnSearchProps('description'),\n//         },   \n//         {\n//           title: 'Компания',\n//           dataIndex: 'company.name',\n//           key: 'company.name',\n//           width: '25%',\n//           //...this.getColumnSearchProps('company.name'),\n//         },    \n//         {\n//           title: 'Действие',\n//           key: '_id',\n//           dataIndex: '_id',\n//           render: (key) => (\n//             <span>\n//               <Button type=\"primary\" shape=\"circle\" icon=\"edit\" onClick={()=>this.openModal(key,'Сохранить')}/>\n//                 <Divider type=\"vertical\" />\n//                 <Popconfirm\n//                   title=\"Вы уверены？\"\n//                   cancelText=\"Нет\"\n//                   okText=\"Да\"\n//                   onConfirm={()=>{this.deleteDivision(key)}}\n//                   icon={<Icon type=\"delete\" style={{ color: 'red' }} />}\n//                 >\n//                   <Button type=\"danger\" shape=\"circle\" icon=\"delete\" />\n//                 </Popconfirm>\n//             </span>\n//           ),\n//         },\n//       ];\n//         return (\n//             <div className=\"admin-table-container\">\n//               <Button type=\"primary\" icon=\"user-add\" style={{marginBottom:'10px'}} onClick={()=>this.openModal(null,'Регистрация')}>\n//               Добавить\n//               </Button> \n//               <div className=\"register-division-form-header\">\n//                 <Title level={4} style={{color:'#fff',textAlign:'center'}}>Список отделов</Title>\n//               </div>\n//               <Table \n//                 bordered={true} \n//                 columns={columns} \n//                 dataSource={this.props.admin.divisionTableData} \n//                 size=\"medium\" \n//                 pagination={{ pageSize: 5 }}\n//                 loading={this.props.admin.divisionTableLoadingStatus}\n//                 rowKey=\"_id\" \n//               />;\n//               <Modal\n//                 visible={this.props.admin.DivisionmodalOpened}\n//                 title={false}\n//                 onOk={this.handleOk}\n//                 onCancel={this.closeModal}\n//                 style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\n//                 width=\"40%\"\n//                 destroyOnClose={true}\n//                 footer={[\n//                 ]}\n//               >\n//                 <NewDivisionForm />\n//               </Modal>\n//             </div>\n//         )\n//     }\n// }\n// const mapStateToProps = state => ({\n//     admin : state.admin\n// });\n// export default connect(mapStateToProps,{\n//     ChangeDivisionSearchText,\n//     ChangeDivisionTableData,\n//     ChangeDivisionModalState,\n//     ChangeCompanyTableData,\n//     ChangeSelectedCompany,\n// })(AllDivision);","map":{"version":3,"names":["React","Component","useState","Slider","connect","Table","Input","Button","Typography","Divider","Icon","Modal","Popconfirm","Highlighter","ChangeQuestionSearchText","ChangeQuestionTableData","ChangeQuestionModalState","Alert","SecurePost","apis","Test2","Test3","Test","constructor","props","OpentestModal","id","setState","previousState","previousProps","materialId","testModelVisible","ClosetestModal","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","value","handleSearch","width","marginBottom","display","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","backgroundColor","admin","DivisionsearchText","ChangeDivisionSearchText","state","QuestiontableLoading","details","componentDidMount","columns","title","key","openModal","deleteDivision","questions","Title","trainer","QuestionTableData","map","d","i","question","body","optionA","answer1","optionB","answer2","optionC","answer3","optionD","answer4","optionE","answer5","answer","trueans1","trueans2","trueans3","trueans4","trueans5","console","log","textAlign","questionTableData","pageSize","questionTableLoadingStatus","QuestionmodalOpened","handleOk","closeModal","top","mapStateToProps","chapter"],"sources":["C:/React_project/EduTest/frontend/src/components/admin/ForCustomers/test.js"],"sourcesContent":["import React, { Component, useState } from 'react'\r\nimport Slider from 'react-touch-drag-slider'\r\nimport { connect } from 'react-redux';\r\nimport { Table, Input, Button, Typography, Divider, Icon, Modal, Popconfirm } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport styled, { createGlobalStyle, css } from 'styled-components/macro'\r\nimport { \r\n    ChangeQuestionSearchText,\r\n    ChangeQuestionTableData,\r\n    ChangeQuestionModalState\r\n} from '../../../actions/trainerAction';\r\nimport Alert from '../../../components/common/alert';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Test2 from './test2';\r\nimport Test3 from './test3';\r\n\r\n\r\nclass Test extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state={\r\n        QuestiontableLoading : false,\r\n        details : null,\r\n        materialId : null,\r\n        testModelVisible:false\r\n      }\r\n    }\r\n  \r\n    componentDidMount(){\r\n      this.props.ChangeQuestionTableData(this.props.id);\r\n    }\r\n    OpentestModal = (id)=>{\r\n      this.setState((previousState,previousProps)=>{\r\n        return{\r\n          materialId:id,\r\n          testModelVisible:true\r\n        }\r\n      })\r\n    }\r\n  \r\n    ClosetestModal = ()=>{\r\n      this.setState((previousState,previousProps)=>{\r\n        return{\r\n          materialId:null,\r\n          testModelVisible:false\r\n        }\r\n      })\r\n    }\r\n    \r\n    getColumnSearchProps = dataIndex => ({\r\n      filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n        <div style={{ padding: 8 }}>\r\n          <Input\r\n            ref={node => {\r\n              this.searchInput = node;\r\n            }}\r\n            placeholder={`Search ${dataIndex}`}\r\n            value={selectedKeys[0]}\r\n            onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n            onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n            style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n          />\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n            icon=\"search\"\r\n            size=\"small\"\r\n            style={{ width: 90, marginRight: 8 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n        </div>\r\n      ),\r\n      filterIcon: filtered => (\r\n        <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n      ),\r\n      onFilter: (value, record) =>\r\n        record[dataIndex]\r\n          .toString()\r\n          .toLowerCase()\r\n          .includes(value.toLowerCase()),\r\n      onFilterDropdownVisibleChange: visible => {\r\n        if (visible) {\r\n          setTimeout(() => this.searchInput.select());\r\n        }\r\n      },\r\n      render: text => (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[this.props.admin.DivisionsearchText]}\r\n          autoEscape\r\n          textToHighlight={text.toString()}\r\n        />\r\n      ),\r\n    });\r\n  \r\n    handleSearch = (selectedKeys, confirm) => {\r\n      confirm();\r\n      this.props.ChangeDivisionSearchText(selectedKeys[0])\r\n    };\r\n  \r\n    handleReset = clearFilters => {\r\n      clearFilters();\r\n      this.props.ChangeDivisionSearchText('')\r\n    };\r\n\r\n    render() {\r\n      const columns = [\r\n        {\r\n          title: 'Название',\r\n          dataIndex: 'body',\r\n          key: 'body',\r\n          width: '25%',\r\n          ...this.getColumnSearchProps('name'),\r\n        },\r\n        {\r\n          title: 'Описание',\r\n          dataIndex: 'description',\r\n          key: 'description',\r\n          width: '25%',\r\n          ...this.getColumnSearchProps('description'),\r\n        },   \r\n        {\r\n          title: 'Компания',\r\n          dataIndex: 'company.name',\r\n          key: 'company.name',\r\n          width: '25%',\r\n          //...this.getColumnSearchProps('company.name'),\r\n        },    \r\n        {\r\n          title: 'Действие',\r\n          key: '_id',\r\n          dataIndex: '_id',\r\n          render: (key) => (\r\n            <span>\r\n              <Button type=\"primary\" shape=\"circle\" icon=\"edit\" onClick={()=>this.openModal(key,'Сохранить')}/>\r\n                <Divider type=\"vertical\" />\r\n                <Popconfirm\r\n                  title=\"Вы уверены？\"\r\n                  cancelText=\"Нет\"\r\n                  okText=\"Да\"\r\n                  onConfirm={()=>{this.deleteDivision(key)}}\r\n                  icon={<Icon type=\"delete\" style={{ color: 'red' }} />}\r\n                >\r\n                  <Button type=\"danger\" shape=\"circle\" icon=\"delete\" />\r\n                </Popconfirm>\r\n              \r\n            </span>\r\n          ),\r\n        },\r\n      ];\r\n      var questions=[];\r\n      const { Title } = Typography;\r\n      this.props.trainer.QuestionTableData.map((d,i)=>{\r\n          \r\n          questions[i]=(\r\n              {\r\n                  question : d.body,\r\n                  optionA : d.answer1,\r\n                  optionB : d.answer2,\r\n                  optionC : d.answer3,\r\n                  optionD : d.answer4,\r\n                  optionE : d.answer5,\r\n                  answer : (d.trueans1===true ? d.answer1 : null) || (d.trueans2===true ? d.answer2 : null) || (d.trueans3===true ? d.answer3 : null) ||\r\n                           (d.trueans4===true ? d.answer4 : null) || (d.trueans5===true ? d.answer5 : null)\r\n                  // answerOptions: [\r\n                  //   { answerText: d.answer1, isCorrect: d.trueans1 },\r\n                  //   { answerText: d.answer2, isCorrect: d.trueans2 },\r\n                  //   { answerText: d.answer3, isCorrect: d.trueans3 },\r\n                  //   { answerText: d.answer4, isCorrect: d.trueans4 },\r\n                  //   { answerText: d.answer5, isCorrect: d.trueans5}\r\n                  // ]\r\n              }\r\n          )\r\n          \r\n      })\r\n        console.log(\"fg\", questions)\r\n          return (\r\n            <div className=\"admin-table-container\">\r\n                <Button type=\"primary\" icon=\"user-add\" style={{marginBottom:'10px'}} onClick={()=>this.OpentestModal(key)}>\r\n                Добавить\r\n                </Button> \r\n                <div className=\"register-division-form-header\">\r\n                  <Title level={4} style={{color:'#fff',textAlign:'center'}}>Список отделов</Title>\r\n                </div>\r\n                <Table \r\n                  bordered={true} \r\n                  columns={columns} \r\n                  dataSource={this.props.trainer.questionTableData} \r\n                  size=\"medium\" \r\n                  pagination={{ pageSize: 5 }}\r\n                  loading={this.props.trainer.questionTableLoadingStatus}\r\n                  rowKey=\"_id\" \r\n                />;\r\n                <Modal\r\n                  visible={this.props.trainer.QuestionmodalOpened}\r\n                  title={false}\r\n                  onOk={this.handleOk}\r\n                  onCancel={this.closeModal}\r\n                  style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\r\n                  width=\"40%\"\r\n                  destroyOnClose={true}\r\n                  footer={[\r\n                    \r\n                  ]}\r\n                >\r\n                  <Test3 details={questions}/>\r\n                </Modal>\r\n              </div>\r\n              \r\n          )\r\n      }\r\n  }\r\n  \r\n  const mapStateToProps = state => ({\r\n      chapter : state.chapter,\r\n      trainer : state.trainer\r\n  });\r\n  \r\n  export default connect(mapStateToProps,{\r\n      ChangeQuestionSearchText,\r\n      ChangeQuestionTableData,\r\n      ChangeQuestionModalState\r\n  })(Test);\r\n\r\n\r\n\r\n\r\n  // import React, { Component } from 'react';\r\n  // import { Table, Input, Button, Typography, Divider, Icon, Modal, Popconfirm } from 'antd';\r\n  // import Highlighter from 'react-highlight-words';\r\n  // import { connect } from 'react-redux';\r\n  // import { \r\n  //     ChangeDivisionSearchText,\r\n  //     ChangeDivisionTableData,\r\n  //     ChangeDivisionModalState,\r\n  //     ChangeCompanyTableData,\r\n  //     ChangeSelectedCompany,\r\n  // } from '../../../actions/adminAction';\r\n  // import './alldivision.css'\r\n  // import Alert from '../../../components/common/alert';\r\n  // import {SecurePost} from '../../../services/axiosCall';\r\n  // import apis from '../../../services/Apis';\r\n  // import NewDivisionForm from './newdivision';\r\n  \r\n  \r\n  // class AllDivision extends Component {\r\n  \r\n  //   constructor(props){\r\n  //     super(props);\r\n  //     this.state={\r\n  //       DivisiontableLoading : false\r\n  //     }\r\n  //   }\r\n  \r\n  //   openModal = (id,mode)=>{\r\n  //     this.props.ChangeDivisionModalState(true,id,mode);\r\n  //   }\r\n  \r\n  //   closeModal = ()=>{\r\n  //     this.props.ChangeDivisionModalState(false,null,'Регистрация');\r\n  //   }\r\n  \r\n  //   componentDidMount(){\r\n  //     this.props.ChangeCompanyTableData();\r\n  //     this.props.ChangeDivisionTableData(this.props.admin.selectedCompany);\r\n  //   }\r\n  \r\n  //   deleteDivision = (id)=>{\r\n  //     SecurePost({\r\n  //       url : `${apis.DELETE_DIVISION}`,\r\n  //       data : {\r\n  //           _id : id\r\n  //       }\r\n  //     }).then((response)=>{\r\n  //       if(response.data.success){\r\n  //         Alert('success','Успешно',response.data.message);\r\n  //         this.props.ChangeDivisionTableData();\r\n  //       }\r\n  //       else{\r\n  //         return Alert('warning','Предупреждение!',response.data.message);\r\n  //       }\r\n  //     }).catch((error)=>{\r\n  //       return Alert('error','Ошибка!','Ошибка сервера');\r\n  //     })\r\n  //   }\r\n  \r\n      \r\n  \r\n  //     render() {\r\n  //       const { Title } = Typography;\r\n  //       const columns = [\r\n  //         {\r\n  //           title: 'Название',\r\n  //           dataIndex: 'name',\r\n  //           key: 'name',\r\n  //           width: '25%',\r\n  //           ...this.getColumnSearchProps('name'),\r\n  //         },\r\n  //         {\r\n  //           title: 'Описание',\r\n  //           dataIndex: 'description',\r\n  //           key: 'description',\r\n  //           width: '25%',\r\n  //           ...this.getColumnSearchProps('description'),\r\n  //         },   \r\n  //         {\r\n  //           title: 'Компания',\r\n  //           dataIndex: 'company.name',\r\n  //           key: 'company.name',\r\n  //           width: '25%',\r\n  //           //...this.getColumnSearchProps('company.name'),\r\n  //         },    \r\n  //         {\r\n  //           title: 'Действие',\r\n  //           key: '_id',\r\n  //           dataIndex: '_id',\r\n  //           render: (key) => (\r\n  //             <span>\r\n  //               <Button type=\"primary\" shape=\"circle\" icon=\"edit\" onClick={()=>this.openModal(key,'Сохранить')}/>\r\n  //                 <Divider type=\"vertical\" />\r\n  //                 <Popconfirm\r\n  //                   title=\"Вы уверены？\"\r\n  //                   cancelText=\"Нет\"\r\n  //                   okText=\"Да\"\r\n  //                   onConfirm={()=>{this.deleteDivision(key)}}\r\n  //                   icon={<Icon type=\"delete\" style={{ color: 'red' }} />}\r\n  //                 >\r\n  //                   <Button type=\"danger\" shape=\"circle\" icon=\"delete\" />\r\n  //                 </Popconfirm>\r\n                \r\n  //             </span>\r\n  //           ),\r\n  //         },\r\n  //       ];\r\n  //         return (\r\n  //             <div className=\"admin-table-container\">\r\n  //               <Button type=\"primary\" icon=\"user-add\" style={{marginBottom:'10px'}} onClick={()=>this.openModal(null,'Регистрация')}>\r\n  //               Добавить\r\n  //               </Button> \r\n  //               <div className=\"register-division-form-header\">\r\n  //                 <Title level={4} style={{color:'#fff',textAlign:'center'}}>Список отделов</Title>\r\n  //               </div>\r\n  //               <Table \r\n  //                 bordered={true} \r\n  //                 columns={columns} \r\n  //                 dataSource={this.props.admin.divisionTableData} \r\n  //                 size=\"medium\" \r\n  //                 pagination={{ pageSize: 5 }}\r\n  //                 loading={this.props.admin.divisionTableLoadingStatus}\r\n  //                 rowKey=\"_id\" \r\n  //               />;\r\n  //               <Modal\r\n  //                 visible={this.props.admin.DivisionmodalOpened}\r\n  //                 title={false}\r\n  //                 onOk={this.handleOk}\r\n  //                 onCancel={this.closeModal}\r\n  //                 style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\r\n  //                 width=\"40%\"\r\n  //                 destroyOnClose={true}\r\n  //                 footer={[\r\n                    \r\n  //                 ]}\r\n  //               >\r\n  //                 <NewDivisionForm />\r\n  //               </Modal>\r\n  //             </div>\r\n  //         )\r\n  //     }\r\n  // }\r\n  \r\n  // const mapStateToProps = state => ({\r\n  //     admin : state.admin\r\n  // });\r\n  \r\n  // export default connect(mapStateToProps,{\r\n  //     ChangeDivisionSearchText,\r\n  //     ChangeDivisionTableData,\r\n  //     ChangeDivisionModalState,\r\n  //     ChangeCompanyTableData,\r\n  //     ChangeSelectedCompany,\r\n  // })(AllDivision);"],"mappings":"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},"metadata":{},"sourceType":"module"}