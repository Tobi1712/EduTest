{"ast":null,"code":"import _objectSpread from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\admin\\\\Questions\\\\newquestion.js\";\nimport React, { Component } from 'react'; //import './newquestion.css';\n\nimport auth from '../../../services/AuthServices';\nimport { Form, Input, Button, Select, Row, Col, Checkbox, Modal, Upload, Icon } from 'antd';\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport { connect } from 'react-redux';\nimport { ChangeQuestionConfirmDirty, ChangeQuestionTableData, ChangeQuestionModalState } from '../../../actions/trainerAction';\nimport Alert from '../../../components/common/alert'; //const { Option } = Select;\n\nimport NewOptionForm from '../options/newoptions';\n\nclass NewQuestion extends Component {\n  constructor(props) {\n    super(props);\n\n    this.Customalert = () => {\n      Modal.confirm({\n        title: 'Подтверждать',\n        content: 'пустой параметр не может быть установлен в качестве ответа',\n        okText: 'Ok',\n        cancelText: null\n      });\n    };\n\n    this.OptionTextChange1 = e => {\n      var newAnswer1 = this.state.questionDetails.answer1;\n      var newTrueAns1 = this.state.questionDetails.trueans1;\n      newAnswer1 = e.target.value;\n\n      if (newAnswer1 === 'undefined' || newAnswer1 === undefined || newAnswer1 === 'null' || newAnswer1 === '' || newAnswer1 === null) {\n        newTrueAns1 = false;\n        this.setState((ps, pp) => {\n          return {\n            questionDetails: _objectSpread({}, ps.questionDetails, {\n              answer1: newAnswer1,\n              trueans1: newTrueAns1\n            })\n          };\n        });\n      }\n\n      this.setState((ps, pp) => {\n        return {\n          questionDetails: _objectSpread({}, ps.questionDetails, {\n            answer1: newAnswer1,\n            trueans1: newTrueAns1\n          })\n        };\n      });\n    };\n\n    this.AnswerOptionSwitch1 = e => {\n      if (this.state.questionDetails.answer1 !== '' && this.state.questionDetails.answer1 !== null) {\n        var newOption1 = this.props.trainer.questioneditdetails.answer1;\n        var newTrueAns1 = this.state.questionDetails.trueans1;\n        newTrueAns1 = e.target.checked;\n        this.setState((ps, pp) => {\n          return {\n            questionDetails: _objectSpread({}, ps.questionDetails, {\n              trueans1: newTrueAns1\n            })\n          };\n        });\n      } else {\n        this.Customalert();\n        return;\n      }\n    };\n\n    this.OptionTextChange2 = e => {\n      var newAnswer2 = this.state.questionDetails.answer2;\n      var newTrueAns2 = this.state.questionDetails.trueans2;\n      newAnswer2 = e.target.value;\n\n      if (newAnswer2 === 'undefined' || newAnswer2 === undefined || newAnswer2 === 'null' || newAnswer2 === '' || newAnswer2 === null) {\n        newTrueAns2 = false;\n        this.setState((ps, pp) => {\n          return {\n            questionDetails: _objectSpread({}, ps.questionDetails, {\n              answer2: newAnswer2,\n              trueans2: newTrueAns2\n            })\n          };\n        });\n      }\n\n      this.setState((ps, pp) => {\n        return {\n          questionDetails: _objectSpread({}, ps.questionDetails, {\n            answer2: newAnswer2,\n            trueans2: newTrueAns2\n          })\n        };\n      });\n    };\n\n    this.AnswerOptionSwitch2 = e => {\n      if (this.state.questionDetails.answer2 !== '' && this.state.questionDetails.answer2 !== null) {\n        var newOption2 = this.state.questionDetails.trueans2;\n        newOption2 = e.target.checked;\n        this.setState((ps, pp) => {\n          return {\n            questionDetails: _objectSpread({}, ps.questionDetails, {\n              trueans2: newOption2\n            })\n          };\n        });\n      } else {\n        this.Customalert();\n        return;\n      }\n    };\n\n    this.OptionTextChange3 = e => {\n      var newAnswer3 = this.state.questionDetails.answer3;\n      var newTrueAns3 = this.state.questionDetails.trueans3;\n      newAnswer3 = e.target.value;\n\n      if (newAnswer3 === 'undefined' || newAnswer3 === undefined || newAnswer3 === 'null' || newAnswer3 === '' || newAnswer3 === null) {\n        newTrueAns3 = false;\n        this.setState((ps, pp) => {\n          return {\n            questionDetails: _objectSpread({}, ps.questionDetails, {\n              answer3: newAnswer3,\n              trueans3: newTrueAns3\n            })\n          };\n        });\n      }\n\n      this.setState((ps, pp) => {\n        return {\n          questionDetails: _objectSpread({}, ps.questionDetails, {\n            answer3: newAnswer3,\n            trueans3: newTrueAns3\n          })\n        };\n      });\n    };\n\n    this.AnswerOptionSwitch3 = e => {\n      if (this.props.trainer.questioneditdetails.answer3 !== '' && this.props.trainer.questioneditdetails.answer3 !== null) {\n        var newOption3 = this.state.questionDetails.trueans3;\n        newOption3 = e.target.checked;\n        this.setState((ps, pp) => {\n          return {\n            questionDetails: _objectSpread({}, ps.questionDetails, {\n              trueans3: newOption3\n            })\n          };\n        });\n      } else {\n        this.Customalert();\n        return;\n      }\n    };\n\n    this.OptionTextChange4 = e => {\n      var newAnswer4 = this.state.questionDetails.answer4;\n      var newTrueAns4 = this.state.questionDetails.trueans4;\n      newAnswer4 = e.target.value;\n\n      if (newAnswer4 === 'undefined' || newAnswer4 === undefined || newAnswer4 === 'null' || newAnswer4 === '' || newAnswer4 === null) {\n        newTrueAns4 = false;\n        this.setState((ps, pp) => {\n          return {\n            questionDetails: _objectSpread({}, ps.questionDetails, {\n              answer4: newAnswer4,\n              trueans4: newTrueAns4\n            })\n          };\n        });\n      }\n\n      this.setState((ps, pp) => {\n        return {\n          questionDetails: _objectSpread({}, ps.questionDetails, {\n            answer4: newAnswer4,\n            trueans4: newTrueAns4\n          })\n        };\n      });\n    };\n\n    this.AnswerOptionSwitch4 = e => {\n      if (this.props.trainer.questioneditdetails.answer4 !== '' && this.props.trainer.questioneditdetails.answer5 !== null) {\n        var newOption4 = this.state.questionDetails.trueans4;\n        newOption4 = e.target.checked;\n        this.setState((ps, pp) => {\n          return {\n            questionDetails: _objectSpread({}, ps.questionDetails, {\n              trueans4: newOption4\n            })\n          };\n        });\n      } else {\n        this.Customalert();\n        return;\n      }\n    };\n\n    this.OptionTextChange5 = e => {\n      var newAnswer5 = this.state.questionDetails.answer5;\n      var newTrueAns5 = this.state.questionDetails.trueans5;\n      newAnswer5 = e.target.value;\n\n      if (newAnswer5 === 'undefined' || newAnswer5 === undefined || newAnswer5 === 'null' || newAnswer5 === '' || newAnswer5 === null) {\n        newTrueAns5 = false;\n        this.setState((ps, pp) => {\n          return {\n            questionDetails: _objectSpread({}, ps.questionDetails, {\n              answer5: newAnswer5,\n              trueans5: newTrueAns5\n            })\n          };\n        });\n      }\n\n      this.setState((ps, pp) => {\n        return {\n          questionDetails: _objectSpread({}, ps.questionDetails, {\n            answer5: newAnswer5,\n            trueans5: newTrueAns5\n          })\n        };\n      });\n    };\n\n    this.AnswerOptionSwitch5 = e => {\n      if (this.props.trainer.questioneditdetails.answer5 !== '' && this.props.trainer.questioneditdetails.answer5 !== null) {\n        var newOption5 = this.state.questionDetails.answer5;\n        newOption5 = e.target.checked;\n        this.setState((ps, pp) => {\n          return {\n            questionDetails: _objectSpread({}, ps.questionDetails, {\n              trueans5: newOption5\n            })\n          };\n        });\n      } else {\n        this.Customalert();\n        return;\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          console.log('Полученные значения формы: ', values);\n          SecurePost({\n            url: \"\".concat(apis.CREATE_QUESTIONS),\n            data: {\n              _id: this.props.trainer.questionId,\n              body: values.questionbody,\n              quesimg: this.state.questionDetails.questionimage,\n              material: this.state.materialId,\n              answer1: values.answer1,\n              trueans1: this.state.questionDetails.trueans1,\n              answer2: values.answer2,\n              trueans2: this.state.questionDetails.trueans2,\n              answer3: values.answer3,\n              trueans3: this.state.questionDetails.trueans3,\n              answer4: values.answer4,\n              trueans4: this.state.questionDetails.trueans4,\n              answer5: values.answer5,\n              trueans5: this.state.questionDetails.trueans5\n            }\n          }).then(response => {\n            if (response.data.success) {\n              this.props.ChangeQuestionModalState(false, null, 'Регистрация');\n              Alert('success', 'Успешно', response.data.message); // this.props.ChangeSlideTableData();\n            } else {\n              console.log(response.data);\n              this.props.ChangeQuestionModalState(false, null, 'Регистрация');\n              return Alert('warning', 'Предупреждение!', response.data.message);\n            }\n          }).catch(error => {\n            this.props.ChangeQuestionModalState(false, null, 'Регистрация');\n            return Alert('error', 'Ошибка!', 'Ошибка сервера');\n          });\n        }\n      });\n    };\n\n    this.changeqImage = f => {\n      this.setState((ps, pp) => {\n        return {\n          questionDetails: _objectSpread({}, ps.questionDetails, {\n            questionimage: f.link ? \"\".concat(apis.BASE, \"/\").concat(f.link) : null\n          }),\n          submitDisabled: false\n        };\n      });\n    };\n\n    this.upl = () => {\n      this.setState({\n        submitDisabled: true\n      });\n    };\n\n    this.state = {\n      questionDetails: {\n        questionimage: null,\n        answer1: this.props.trainer.questioneditdetails.answer1,\n        trueans1: this.props.trainer.questioneditdetails.trueans1,\n        answer2: this.props.trainer.questioneditdetails.answer2,\n        trueans2: this.props.trainer.questioneditdetails.trueans2,\n        answer3: this.props.trainer.questioneditdetails.answer3,\n        trueans3: this.props.trainer.questioneditdetails.trueans3,\n        answer4: this.props.trainer.questioneditdetails.answer4,\n        trueans4: this.props.trainer.questioneditdetails.trueans4,\n        answer5: this.props.trainer.questioneditdetails.answer5,\n        trueans5: this.props.trainer.questioneditdetails.trueans5\n      },\n      adding: false,\n      submitDisabled: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      materialId: this.props.qnid\n    });\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const Option = Select.Option;\n    const TextArea = Input.TextArea;\n    var QuestionImageprops = {\n      name: 'file',\n      action: \"\".concat(apis.BASE).concat(apis.FILE_UPLOAD, \"?Token=\").concat(auth.retriveToken()),\n      listType: 'picture'\n    };\n    return React.createElement(\"div\", {\n      className: \"register-subject-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"register-trainer-form-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 18,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"\\u0412\\u043E\\u043F\\u0440\\u043E\\u0441\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, getFieldDecorator('questionbody', {\n      initialValue: this.props.trainer.questioneditdetails.body,\n      rules: [{\n        required: true,\n        message: 'Пожалуйста, введите вопрос!'\n      }]\n    })(React.createElement(TextArea, {\n      rows: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      span: 6,\n      style: {\n        padding: '0px 20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"\\u0418\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, React.createElement(Upload, Object.assign({}, QuestionImageprops, {\n      beforeUpload: this.upl,\n      onRemove: this.changeqImage,\n      onSuccess: this.changeqImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }), \" \\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C\"))))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, React.createElement(Col, {\n      offset: 1,\n      span: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"\\u0412\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442 1\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, getFieldDecorator('answer1', {\n      initialValue: this.props.trainer.questioneditdetails.answer1,\n      rules: [{\n        required: false,\n        message: 'Пожалуйста, введите вариант 1!'\n      }]\n    })(React.createElement(TextArea, {\n      rows: 2,\n      onChange: e => this.OptionTextChange1(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      span: 2,\n      style: {\n        paddingTop: '45px',\n        paddingLeft: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: this.state.questionDetails.trueans1,\n      onChange: e => this.AnswerOptionSwitch1(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, React.createElement(Col, {\n      offset: 1,\n      span: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"\\u0412\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442 2\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, getFieldDecorator('answer2', {\n      initialValue: this.state.questionDetails.answer2,\n      rules: [{\n        required: false,\n        message: 'Пожалуйста, введите вариант 2!'\n      }]\n    })(React.createElement(TextArea, {\n      rows: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      span: 2,\n      style: {\n        paddingTop: '45px',\n        paddingLeft: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: this.state.questionDetails.trueans2,\n      onChange: e => this.AnswerOptionSwitch2(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }, React.createElement(Col, {\n      offset: 1,\n      span: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"\\u0412\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442 3\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, getFieldDecorator('answer3', {\n      initialValue: this.props.trainer.questioneditdetails.answer3,\n      rules: [{\n        required: false,\n        message: 'Пожалуйста, введите вариант 3!'\n      }]\n    })(React.createElement(TextArea, {\n      rows: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      span: 2,\n      style: {\n        paddingTop: '45px',\n        paddingLeft: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: this.state.questionDetails.trueans3,\n      onChange: e => this.AnswerOptionSwitch3(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }, React.createElement(Col, {\n      offset: 1,\n      span: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"\\u0412\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442 4\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }, getFieldDecorator('answer4', {\n      initialValue: this.props.trainer.questioneditdetails.answer4,\n      rules: [{\n        required: false,\n        message: 'Пожалуйста, введите вариант 4!'\n      }]\n    })(React.createElement(TextArea, {\n      rows: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      span: 2,\n      style: {\n        paddingTop: '45px',\n        paddingLeft: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: this.state.questionDetails.trueans4,\n      onChange: e => this.AnswerOptionSwitch4(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, React.createElement(Col, {\n      offset: 1,\n      span: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"\\u0412\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442 5\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, getFieldDecorator('answer5', {\n      initialValue: this.props.trainer.questioneditdetails.answer5,\n      rules: [{\n        required: false,\n        message: 'Пожалуйста, введите вариант 5!'\n      }]\n    })(React.createElement(TextArea, {\n      rows: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      span: 2,\n      style: {\n        paddingTop: '45px',\n        paddingLeft: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: this.state.questionDetails.trueans5,\n      onChange: e => this.AnswerOptionSwitch5(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }, React.createElement(Col, {\n      offset: 20,\n      span: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }, this.props.trainer.Questionmode))))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  admin: state.admin,\n  trainer: state.trainer,\n  chapter: state.chapter\n});\n\nconst NewQuestionForm = Form.create({\n  name: 'newQuestion'\n})(NewQuestion);\nexport default connect(mapStateToProps, {\n  ChangeQuestionConfirmDirty,\n  ChangeQuestionModalState,\n  ChangeQuestionTableData\n})(NewQuestionForm);","map":{"version":3,"sources":["C:\\React_project\\EduTest\\frontend\\src\\components\\admin\\Questions\\newquestion.js"],"names":["React","Component","auth","Form","Input","Button","Select","Row","Col","Checkbox","Modal","Upload","Icon","SecurePost","apis","connect","ChangeQuestionConfirmDirty","ChangeQuestionTableData","ChangeQuestionModalState","Alert","NewOptionForm","NewQuestion","constructor","props","Customalert","confirm","title","content","okText","cancelText","OptionTextChange1","e","newAnswer1","state","questionDetails","answer1","newTrueAns1","trueans1","target","value","undefined","setState","ps","pp","AnswerOptionSwitch1","newOption1","trainer","questioneditdetails","checked","OptionTextChange2","newAnswer2","answer2","newTrueAns2","trueans2","AnswerOptionSwitch2","newOption2","OptionTextChange3","newAnswer3","answer3","newTrueAns3","trueans3","AnswerOptionSwitch3","newOption3","OptionTextChange4","newAnswer4","answer4","newTrueAns4","trueans4","AnswerOptionSwitch4","answer5","newOption4","OptionTextChange5","newAnswer5","newTrueAns5","trueans5","AnswerOptionSwitch5","newOption5","handleSubmit","preventDefault","form","validateFieldsAndScroll","err","values","console","log","url","CREATE_QUESTIONS","data","_id","questionId","body","questionbody","quesimg","questionimage","material","materialId","then","response","success","message","catch","error","changeqImage","f","link","BASE","submitDisabled","upl","adding","componentDidMount","qnid","render","getFieldDecorator","Option","TextArea","QuestionImageprops","name","action","FILE_UPLOAD","retriveToken","listType","initialValue","rules","required","padding","paddingTop","paddingLeft","Questionmode","mapStateToProps","admin","chapter","NewQuestionForm","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n//import './newquestion.css';\r\nimport auth from '../../../services/AuthServices';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Select,\r\n    Row,\r\n    Col,\r\n    Checkbox,\r\n    Modal,\r\n    Upload,\r\n    Icon\r\n} from 'antd';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    ChangeQuestionConfirmDirty,\r\n    ChangeQuestionTableData,\r\n    ChangeQuestionModalState\r\n} from '../../../actions/trainerAction';\r\nimport Alert from '../../../components/common/alert';\r\n//const { Option } = Select;\r\nimport NewOptionForm from '../options/newoptions';\r\nclass NewQuestion extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            questionDetails:{\r\n                questionimage:null,\r\n                answer1: this.props.trainer.questioneditdetails.answer1,\r\n                trueans1: this.props.trainer.questioneditdetails.trueans1,\r\n                answer2: this.props.trainer.questioneditdetails.answer2,\r\n                trueans2: this.props.trainer.questioneditdetails.trueans2,\r\n                answer3: this.props.trainer.questioneditdetails.answer3,\r\n                trueans3: this.props.trainer.questioneditdetails.trueans3,\r\n                answer4: this.props.trainer.questioneditdetails.answer4,\r\n                trueans4: this.props.trainer.questioneditdetails.trueans4,\r\n                answer5: this.props.trainer.questioneditdetails.answer5,\r\n                trueans5: this.props.trainer.questioneditdetails.trueans5,\r\n            },\r\n            adding:false,\r\n            submitDisabled:false,\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            materialId:this.props.qnid\r\n        });\r\n    }\r\n\r\n    Customalert = ()=>{\r\n        Modal.confirm({\r\n            title: 'Подтверждать',\r\n            content: 'пустой параметр не может быть установлен в качестве ответа',\r\n            okText: 'Ok',\r\n            cancelText: null,\r\n        });\r\n    }\r\n\r\n    // QuestionImageonChange = (f)=>{\r\n    //     var newQuestion = this.state.questionDetails.questionimage\r\n    //     if(!f){\r\n    //         newQuestion=null\r\n    //     }\r\n    //     else{\r\n    //         newQuestion=`${apis.BASE}/${f.link}`\r\n            \r\n    //     }\r\n    //     this.setState({\r\n    //         submitDisabled:false\r\n    //     })\r\n    //     if(newQuestion==='undefined' || newQuestion===undefined || newQuestion===null || newQuestion==='null') {\r\n    //         //(newOptions[i].body==='undefined' || newOptions[i].body===undefined || newOptions[i].body==='null' || newOptions[i].body==='' || newOptions[i].body===null)){\r\n    //             newQuestion=this.state.questionDetails.questionimage;    \r\n    //     }\r\n    //     this.setState((ps,pp)=>{\r\n    //         return({\r\n    //             questionDetails:{\r\n    //                 ...ps.questionDetails,\r\n    //                 questionimage:newQuestion\r\n    //             }\r\n    //         })\r\n    //     })\r\n    // }\r\n\r\n    OptionTextChange1 =(e)=>{\r\n        var newAnswer1 = this.state.questionDetails.answer1\r\n        var newTrueAns1 = this.state.questionDetails.trueans1\r\n        newAnswer1 = e.target.value\r\n        if((newAnswer1==='undefined' || newAnswer1===undefined || newAnswer1==='null' || newAnswer1==='' || newAnswer1===null)){\r\n                newTrueAns1 = false\r\n                this.setState((ps,pp)=>{\r\n                    return({\r\n                        questionDetails:{\r\n                            ...ps.questionDetails,\r\n                            answer1:newAnswer1,\r\n                            trueans1:newTrueAns1\r\n                        }\r\n                    })\r\n                })\r\n        }\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                questionDetails:{\r\n                    ...ps.questionDetails,\r\n                    answer1:newAnswer1,\r\n                    trueans1:newTrueAns1\r\n                }\r\n            })\r\n        })     \r\n    }\r\n\r\n    AnswerOptionSwitch1 = (e)=>{\r\n        if((this.state.questionDetails.answer1!=='' && this.state.questionDetails.answer1!==null)){\r\n            var newOption1 = this.props.trainer.questioneditdetails.answer1\r\n            var newTrueAns1 = this.state.questionDetails.trueans1\r\n            newTrueAns1 = e.target.checked\r\n            this.setState((ps,pp)=>{\r\n                return({\r\n                    questionDetails:{\r\n                        ...ps.questionDetails,\r\n                        trueans1:newTrueAns1\r\n                    }\r\n                })\r\n            })\r\n        }\r\n        else{   \r\n            this.Customalert()\r\n            return;\r\n        }\r\n    }\r\n\r\n    OptionTextChange2 =(e)=>{\r\n        var newAnswer2 = this.state.questionDetails.answer2\r\n        var newTrueAns2 = this.state.questionDetails.trueans2\r\n        newAnswer2 = e.target.value\r\n        if((newAnswer2==='undefined' || newAnswer2===undefined || newAnswer2==='null' || newAnswer2==='' || newAnswer2===null)){\r\n                newTrueAns2 = false\r\n                this.setState((ps,pp)=>{\r\n                    return({\r\n                        questionDetails:{\r\n                            ...ps.questionDetails,\r\n                            answer2:newAnswer2,\r\n                            trueans2:newTrueAns2\r\n                        }\r\n                    })\r\n                })\r\n        }\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                questionDetails:{\r\n                    ...ps.questionDetails,\r\n                    answer2:newAnswer2,\r\n                    trueans2:newTrueAns2\r\n                }\r\n            })\r\n        })     \r\n    }\r\n\r\n    AnswerOptionSwitch2 = (e)=>{\r\n        if((this.state.questionDetails.answer2!=='' && this.state.questionDetails.answer2!==null)){\r\n            var newOption2 = this.state.questionDetails.trueans2\r\n            newOption2 = e.target.checked\r\n            this.setState((ps,pp)=>{\r\n                return({\r\n                    questionDetails:{\r\n                        ...ps.questionDetails,\r\n                        trueans2:newOption2\r\n                    }\r\n                })\r\n            })\r\n        }\r\n        else{   \r\n            this.Customalert()\r\n            return;\r\n        }\r\n    }\r\n\r\n    OptionTextChange3 =(e)=>{\r\n        var newAnswer3 = this.state.questionDetails.answer3\r\n        var newTrueAns3 = this.state.questionDetails.trueans3\r\n        newAnswer3 = e.target.value\r\n        if((newAnswer3==='undefined' || newAnswer3===undefined || newAnswer3==='null' || newAnswer3==='' || newAnswer3===null)){\r\n                newTrueAns3 = false\r\n                this.setState((ps,pp)=>{\r\n                    return({\r\n                        questionDetails:{\r\n                            ...ps.questionDetails,\r\n                            answer3:newAnswer3,\r\n                            trueans3:newTrueAns3\r\n                        }\r\n                    })\r\n                })\r\n        }\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                questionDetails:{\r\n                    ...ps.questionDetails,\r\n                    answer3:newAnswer3,\r\n                    trueans3:newTrueAns3\r\n                }\r\n            })\r\n        })     \r\n    }\r\n\r\n    AnswerOptionSwitch3 = (e)=>{\r\n        if((this.props.trainer.questioneditdetails.answer3!=='' && this.props.trainer.questioneditdetails.answer3!==null)){\r\n            var newOption3 = this.state.questionDetails.trueans3\r\n            newOption3 = e.target.checked\r\n            this.setState((ps,pp)=>{\r\n                return({\r\n                    questionDetails:{\r\n                        ...ps.questionDetails,\r\n                        trueans3:newOption3\r\n                    }\r\n                })\r\n            })\r\n        }\r\n        else{   \r\n            this.Customalert()\r\n            return;\r\n        }\r\n    }\r\n\r\n    OptionTextChange4 =(e)=>{\r\n        var newAnswer4 = this.state.questionDetails.answer4\r\n        var newTrueAns4 = this.state.questionDetails.trueans4\r\n        newAnswer4 = e.target.value\r\n        if((newAnswer4==='undefined' || newAnswer4===undefined || newAnswer4==='null' || newAnswer4==='' || newAnswer4===null)){\r\n                newTrueAns4 = false\r\n                this.setState((ps,pp)=>{\r\n                    return({\r\n                        questionDetails:{\r\n                            ...ps.questionDetails,\r\n                            answer4:newAnswer4,\r\n                            trueans4:newTrueAns4\r\n                        }\r\n                    })\r\n                })\r\n        }\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                questionDetails:{\r\n                    ...ps.questionDetails,\r\n                    answer4:newAnswer4,\r\n                    trueans4:newTrueAns4\r\n                }\r\n            })\r\n        })     \r\n    }\r\n\r\n    AnswerOptionSwitch4 = (e)=>{\r\n        if((this.props.trainer.questioneditdetails.answer4!=='' && this.props.trainer.questioneditdetails.answer5!==null)){\r\n            var newOption4 = this.state.questionDetails.trueans4\r\n            newOption4 = e.target.checked\r\n            this.setState((ps,pp)=>{\r\n                return({\r\n                    questionDetails:{\r\n                        ...ps.questionDetails,\r\n                        trueans4:newOption4\r\n                    }\r\n                })\r\n            })\r\n        }\r\n        else{   \r\n            this.Customalert()\r\n            return;\r\n        }\r\n    }\r\n\r\n    OptionTextChange5 =(e)=>{\r\n        var newAnswer5 = this.state.questionDetails.answer5\r\n        var newTrueAns5 = this.state.questionDetails.trueans5\r\n        newAnswer5 = e.target.value\r\n        if((newAnswer5==='undefined' || newAnswer5===undefined || newAnswer5==='null' || newAnswer5==='' || newAnswer5===null)){\r\n                newTrueAns5 = false\r\n                this.setState((ps,pp)=>{\r\n                    return({\r\n                        questionDetails:{\r\n                            ...ps.questionDetails,\r\n                            answer5:newAnswer5,\r\n                            trueans5:newTrueAns5\r\n                        }\r\n                    })\r\n                })\r\n        }\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                questionDetails:{\r\n                    ...ps.questionDetails,\r\n                    answer5:newAnswer5,\r\n                    trueans5:newTrueAns5\r\n                }\r\n            })\r\n        })     \r\n    }\r\n\r\n    AnswerOptionSwitch5 = (e)=>{\r\n        if((this.props.trainer.questioneditdetails.answer5!=='' && this.props.trainer.questioneditdetails.answer5!==null)){\r\n            var newOption5 = this.state.questionDetails.answer5\r\n            newOption5 = e.target.checked\r\n            this.setState((ps,pp)=>{\r\n                return({\r\n                    questionDetails:{\r\n                        ...ps.questionDetails,\r\n                        trueans5:newOption5\r\n                    }\r\n                })\r\n            })\r\n        }\r\n        else{   \r\n            this.Customalert()\r\n            return;\r\n        }\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                console.log('Полученные значения формы: ', values);\r\n                    SecurePost({\r\n                        url : `${apis.CREATE_QUESTIONS}`,\r\n                        data : {\r\n                            _id : this.props.trainer.questionId,\r\n                            body : values.questionbody,                            \r\n                            quesimg : this.state.questionDetails.questionimage,\r\n                            material : this.state.materialId,\r\n                            answer1 : values.answer1,\r\n                            trueans1 : this.state.questionDetails.trueans1,\r\n                            answer2 : values.answer2,\r\n                            trueans2 : this.state.questionDetails.trueans2,\r\n                            answer3 : values.answer3,\r\n                            trueans3 : this.state.questionDetails.trueans3,\r\n                            answer4 : values.answer4,\r\n                            trueans4 : this.state.questionDetails.trueans4,\r\n                            answer5 : values.answer5,\r\n                            trueans5 : this.state.questionDetails.trueans5,\r\n                        }\r\n                    }).then((response)=>{\r\n                        if(response.data.success){\r\n                            this.props.ChangeQuestionModalState(false,null,'Регистрация');\r\n                            Alert('success','Успешно',response.data.message);\r\n                            // this.props.ChangeSlideTableData();\r\n                        }\r\n                        else{\r\n                            console.log(response.data);\r\n                            this.props.ChangeQuestionModalState(false,null,'Регистрация');\r\n                            return Alert('warning','Предупреждение!',response.data.message);\r\n                        }\r\n                    }).catch((error)=>{\r\n                        this.props.ChangeQuestionModalState(false,null,'Регистрация');\r\n                        return Alert('error','Ошибка!','Ошибка сервера');\r\n                    })\r\n                \r\n            }\r\n        });\r\n    };\r\n\r\n    changeqImage = (f)=>{\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                questionDetails:{\r\n                    ...ps.questionDetails,\r\n                    questionimage:(f.link ?`${apis.BASE}/${f.link}`:null)\r\n                },\r\n                submitDisabled:false\r\n            })\r\n        })\r\n    }\r\n\r\n    upl=()=>{\r\n        this.setState({\r\n            submitDisabled: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const { Option } = Select;\r\n        const { TextArea } = Input;\r\n        var QuestionImageprops={\r\n            name: 'file',\r\n            action: `${apis.BASE}${apis.FILE_UPLOAD}?Token=${auth.retriveToken()}`,\r\n            listType: 'picture',\r\n        }\r\n        \r\n        return (\r\n            <div className=\"register-subject-form\" >\r\n                <div className=\"register-trainer-form-body\">\r\n                    <Form  onSubmit={this.handleSubmit}>\r\n                        <div>\r\n                            \r\n                            <Row>\r\n                                <Col span={18}>\r\n                                    <Form.Item label=\"Вопрос\" hasFeedback>\r\n                                        {getFieldDecorator('questionbody', {\r\n                                            initialValue : this.props.trainer.questioneditdetails.body,\r\n                                            rules: [{ required: true, message: 'Пожалуйста, введите вопрос!' }],\r\n                                        })(\r\n                                            <TextArea rows={5} />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={6} style={{padding : '0px 20px'}}>\r\n                                    <Form.Item label=\"Изображение вопроса\">\r\n                                        <Upload {...QuestionImageprops} beforeUpload={this.upl} onRemove={this.changeqImage} onSuccess={this.changeqImage}>\r\n                                            <Button>\r\n                                                <Icon type=\"upload\" /> Загрузить\r\n                                            </Button>\r\n                                        </Upload>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col offset={1} span={16}>\r\n                                    <Form.Item label=\"Вариант 1\" hasFeedback>\r\n                                        {getFieldDecorator('answer1', {\r\n                                            initialValue : this.props.trainer.questioneditdetails.answer1,\r\n                                            rules: [{ required: false, message: 'Пожалуйста, введите вариант 1!' }],\r\n                                        })(\r\n                                            <TextArea rows={2} onChange={ (e)=>this.OptionTextChange1(e)}/>\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={2} style={{paddingTop: '45px', paddingLeft: '20px'}}>\r\n                                    <Form.Item>\r\n                                        <Checkbox checked={this.state.questionDetails.trueans1} onChange={(e)=>this.AnswerOptionSwitch1(e)}></Checkbox>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col offset={1} span={16}>\r\n                                    <Form.Item label=\"Вариант 2\" hasFeedback>\r\n                                        {getFieldDecorator('answer2', {\r\n                                            initialValue : this.state.questionDetails.answer2,                                            \r\n\r\n                                            rules: [{ required: false, message: 'Пожалуйста, введите вариант 2!' }],\r\n                                        })(\r\n                                            <TextArea rows={2} />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={2} style={{paddingTop: '45px', paddingLeft: '20px'}}>\r\n                                    <Form.Item>\r\n                                    <Checkbox checked={this.state.questionDetails.trueans2} onChange={(e)=>this.AnswerOptionSwitch2(e)}></Checkbox>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col offset={1} span={16}>\r\n                                    <Form.Item label=\"Вариант 3\" hasFeedback>\r\n                                        {getFieldDecorator('answer3', {\r\n                                            initialValue : this.props.trainer.questioneditdetails.answer3,\r\n                                            rules: [{ required: false, message: 'Пожалуйста, введите вариант 3!' }],\r\n                                        })(\r\n                                            <TextArea rows={2} />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={2} style={{paddingTop: '45px', paddingLeft: '20px'}}>\r\n                                    <Form.Item>\r\n                                    <Checkbox checked={this.state.questionDetails.trueans3} onChange={(e)=>this.AnswerOptionSwitch3(e)}></Checkbox>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col offset={1} span={16}>\r\n                                    <Form.Item label=\"Вариант 4\" hasFeedback>\r\n                                        {getFieldDecorator('answer4', {\r\n                                            initialValue : this.props.trainer.questioneditdetails.answer4,\r\n                                            rules: [{ required: false, message: 'Пожалуйста, введите вариант 4!' }],\r\n                                        })(\r\n                                            <TextArea rows={2} />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={2} style={{paddingTop: '45px', paddingLeft: '20px'}}>\r\n                                    <Form.Item>\r\n                                    <Checkbox checked={this.state.questionDetails.trueans4} onChange={(e)=>this.AnswerOptionSwitch4(e)}></Checkbox>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col offset={1} span={16}>\r\n                                    <Form.Item label=\"Вариант 5\" hasFeedback>\r\n                                        {getFieldDecorator('answer5', {\r\n                                            initialValue : this.props.trainer.questioneditdetails.answer5,\r\n                                            rules: [{ required: false, message: 'Пожалуйста, введите вариант 5!' }],\r\n                                        })(\r\n                                            <TextArea rows={2} />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={2} style={{paddingTop: '45px', paddingLeft: '20px'}}>\r\n                                    <Form.Item>\r\n                                    <Checkbox checked={this.state.questionDetails.trueans5} onChange={(e)=>this.AnswerOptionSwitch5(e)}></Checkbox>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col offset={20}  span={4}>\r\n                                    <Form.Item>\r\n                                        <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                            {this.props.trainer.Questionmode}\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin : state.admin,\r\n    trainer : state.trainer,\r\n    chapter : state.chapter\r\n});\r\n\r\n\r\n\r\nconst NewQuestionForm = Form.create({ name: 'newQuestion' })(NewQuestion);\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeQuestionConfirmDirty,\r\n    ChangeQuestionModalState,\r\n    ChangeQuestionTableData\r\n})(NewQuestionForm);\r\n\r\n"]},"metadata":{},"sourceType":"module"}