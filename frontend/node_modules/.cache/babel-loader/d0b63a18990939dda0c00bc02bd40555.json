{"ast":null,"code":"import _objectSpread from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\admin\\\\Customer\\\\allcustomer.js\";\nimport React, { Component } from 'react';\nimport { Table, Input, Button, Typography, Divider, Icon, Modal, Popconfirm } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { connect } from 'react-redux';\nimport { ChangeCustomerSearchText, ChangeCustomerTableData, ChangeCustomerModalState, ChangeCompanyTableData, ChangeSelectedCompany, ChangeDivisionTableData, ChangeSelectedDivisions } from '../../../actions/adminAction';\nimport './allcustomer.css';\nimport Alert from '../../../components/common/alert';\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport NewCustomerForm from './newcustomer';\nimport LocalizedStrings from 'react-localization';\nlet strings = new LocalizedStrings({\n  ru: {\n    Reg: \"Регистрация\",\n    Succes: \"Успешно\",\n    Warning: \"Предупреждение!\",\n    Error: \"Ошибка!\",\n    ErrorServer: \"Ошибка сервера\",\n    Search: \"Поиск\",\n    FullName: \"ФИО\",\n    Name: \"name\",\n    Avatar: \"Аватар\",\n    Email: \"Эл. почта\",\n    EmailSearch: \"Эл.почты\",\n    Chapter: \"Отдел\",\n    Company: \"Компания\",\n    Action: \"Действие\",\n    Save: \"Сохранить\",\n    YouReallyWantThis: \"Вы уверены?\",\n    No: \"Нет\",\n    Yes: \"Да\",\n    CostomerList: \"Список пользователей\",\n    Cancel: \"Отмена\",\n    Add: \"Добавить\"\n  },\n  kz: {\n    Reg: \"Тіркеу\",\n    Succes: \"Сәтті\",\n    Warning: \"Ескерту!\",\n    Error: \"Қате!\",\n    ErrorServer: \"Сервер қатесі\",\n    Search: \"Іздеу\",\n    FullName: \"Аты-жөні\",\n    Name: \"Аты\",\n    Avatar: \"Аватар\",\n    Email: \"Электрондық пошта\",\n    EmailSearch: \"Электрондық пошта\",\n    Chapter: \"Бөлім\",\n    Company: \"Компания\",\n    Action: \"Әрекет\",\n    Save: \"Сақтау\",\n    YouReallyWantThis: \"Сіз сенімдісіз бе?\",\n    No: \"Жоқ\",\n    Yes: \"Иә\",\n    CostomerList: \"Пайдаланушылар тізімі\",\n    Cancel: \"Болдырмау\",\n    Add: \"Қосу\"\n  }\n});\n\nclass AllCustomer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.openModal = (id, mode) => {\n      this.props.ChangeCustomerModalState(true, id, mode);\n    };\n\n    this.closeModal = () => {\n      this.props.ChangeCustomerModalState(false, null, strings.Reg);\n    };\n\n    this.deleteCustomer = id => {\n      SecurePost({\n        url: \"\".concat(apis.DELETE_CUSTOMER),\n        data: {\n          _id: id\n        }\n      }).then(response => {\n        if (response.data.success) {\n          Alert('success', strings.Succes, response.data.message); //this.props.ChangeCompanyTableData(this.props.admin.selectedDivisions);\n\n          this.props.ChangeCustomerTableData(this.props.admin.selectedCompany);\n        } else {\n          return Alert('warning', 'strings.Warning', response.data.message);\n        }\n      }).catch(error => {\n        return Alert('error', strings.Error, strings.ErrorServer);\n      });\n    };\n\n    this.getColumnSearchProps = dataIndex => ({\n      filterDropdown: ({\n        setSelectedKeys,\n        selectedKeys,\n        confirm,\n        clearFilters\n      }) => /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          padding: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Input, {\n        ref: node => {\n          this.searchInput = node;\n        },\n        placeholder: \"\".concat(strings.Search, \" \").concat(dataIndex),\n        value: selectedKeys[0],\n        onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n        onPressEnter: () => this.handleSearch(selectedKeys, confirm),\n        style: {\n          width: 188,\n          marginBottom: 8,\n          display: 'block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        onClick: () => this.handleSearch(selectedKeys, confirm),\n        icon: \"search\",\n        size: \"small\",\n        style: {\n          width: 90,\n          marginRight: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"\\u041F\\u043E\\u0438\\u0441\\u043A\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.handleReset(clearFilters),\n        size: \"small\",\n        style: {\n          width: 90\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\")),\n      filterIcon: filtered => /*#__PURE__*/React.createElement(Icon, {\n        type: \"search\",\n        style: {\n          color: filtered ? '#97c222' : undefined\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }),\n      onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          setTimeout(() => this.searchInput.select());\n        }\n      },\n      render: text => /*#__PURE__*/React.createElement(Highlighter, {\n        highlightStyle: {\n          backgroundColor: '#ffc069',\n          padding: 0\n        },\n        searchWords: [this.props.admin.CustomersearchText],\n        autoEscape: true,\n        textToHighlight: text.toString(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      })\n    });\n\n    this.handleSearch = (selectedKeys, confirm) => {\n      confirm();\n      this.props.ChangeCustomerSearchText(selectedKeys[0]);\n    };\n\n    this.handleReset = clearFilters => {\n      clearFilters();\n      this.props.ChangeCustomerSearchText('');\n    };\n\n    this.state = {\n      CustomertableLoading: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.ChangeDivisionTableData();\n    this.props.ChangeCompanyTableData(this.props.admin.selectedDivisions);\n    this.props.ChangeCustomerTableData(this.props.admin.selectedCompany);\n  }\n\n  // handleDivisionChange =(s)=>{\n  //   this.props.ChangeSelectedDivisions(s);\n  //   this.props.ChangeCustomerTableData(s);\n  // }\n  render() {\n    strings.setLanguage(this.props.lang);\n    const Title = Typography.Title;\n    const columns = [_objectSpread({\n      title: strings.FullName,\n      dataIndex: 'name',\n      key: 'name',\n      width: '25%'\n    }, this.getColumnSearchProps(strings.FullName)), {\n      title: 'Аватар',\n      dataIndex: 'avatar',\n      key: 'avatar',\n      width: '5%',\n      render: key => /*#__PURE__*/React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: key,\n        style: {\n          width: \"60px\",\n          height: \"60px\"\n        },\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }))\n    }, _objectSpread({\n      title: strings.Email,\n      dataIndex: 'emailid',\n      key: 'emailid',\n      width: '25%'\n    }, this.getColumnSearchProps(strings.EmailSearch)), {\n      title: strings.Chapter,\n      dataIndex: 'division.name',\n      key: 'division.name',\n      width: '15%'\n    }, {\n      title: strings.Company,\n      dataIndex: 'company.name',\n      key: 'company.name',\n      width: '15%',\n      ц\n    }, {\n      title: 'Права модератора',\n      dataIndex: 'company.name',\n      key: 'company.name',\n      width: '15%'\n    }, {\n      title: strings.Action,\n      key: '_id',\n      dataIndex: '_id',\n      render: key => /*#__PURE__*/React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        shape: \"circle\",\n        icon: \"edit\",\n        onClick: () => this.openModal(key, strings.Save),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }), /*#__PURE__*/React.createElement(Divider, {\n        type: \"vertical\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }), /*#__PURE__*/React.createElement(Popconfirm, {\n        title: strings.YouReallyWantThis,\n        cancelText: strings.No,\n        okText: strings.Yes,\n        onConfirm: () => {\n          this.deleteCustomer(key);\n        },\n        icon: /*#__PURE__*/React.createElement(Icon, {\n          type: \"delete\",\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"danger\",\n        shape: \"circle\",\n        icon: \"delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      })))\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin-table-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      icon: \"user-add\",\n      style: {\n        marginBottom: '10px'\n      },\n      onClick: () => this.openModal(null, 'Регистрация'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, strings.Add), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"xx-form-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(Title, {\n      level: 4,\n      style: {\n        color: '#000000',\n        textAlign: 'left',\n        fontFamily: 'Montserrat',\n        fontSize: '14pt',\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, strings.CostomerList)), /*#__PURE__*/React.createElement(Table, {\n      bordered: true,\n      columns: columns,\n      dataSource: this.props.admin.customerTableData,\n      size: \"medium\",\n      pagination: {\n        pageSize: 5\n      },\n      loading: this.props.admin.customerTableLoadingStatus,\n      rowKey: \"_id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }), \";\", /*#__PURE__*/React.createElement(Modal, {\n      visible: this.props.admin.CustomermodalOpened,\n      title: false,\n      onOk: this.handleOk,\n      onCancel: this.closeModal,\n      style: {\n        top: '20px',\n        padding: '0px',\n        backgroundColor: 'rgb(155,175,190)'\n      },\n      width: \"40%\",\n      destroyOnClose: true,\n      footer: [strings.setLanguage(this.props.lang)],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(NewCustomerForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  admin: state.admin\n});\n\nexport default connect(mapStateToProps, {\n  ChangeCustomerSearchText,\n  ChangeCustomerTableData,\n  ChangeCustomerModalState,\n  ChangeSelectedDivisions,\n  ChangeDivisionTableData,\n  ChangeCompanyTableData,\n  ChangeSelectedCompany\n})(AllCustomer);","map":{"version":3,"names":["React","Component","Table","Input","Button","Typography","Divider","Icon","Modal","Popconfirm","Highlighter","connect","ChangeCustomerSearchText","ChangeCustomerTableData","ChangeCustomerModalState","ChangeCompanyTableData","ChangeSelectedCompany","ChangeDivisionTableData","ChangeSelectedDivisions","Alert","SecurePost","apis","NewCustomerForm","LocalizedStrings","strings","ru","Reg","Succes","Warning","Error","ErrorServer","Search","FullName","Name","Avatar","Email","EmailSearch","Chapter","Company","Action","Save","YouReallyWantThis","No","Yes","CostomerList","Cancel","Add","kz","AllCustomer","constructor","props","openModal","id","mode","closeModal","deleteCustomer","url","DELETE_CUSTOMER","data","_id","then","response","success","message","admin","selectedCompany","catch","error","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","value","handleSearch","width","marginBottom","display","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","backgroundColor","CustomersearchText","state","CustomertableLoading","componentDidMount","selectedDivisions","setLanguage","lang","Title","columns","title","key","height","ц","textAlign","fontFamily","fontSize","fontWeight","customerTableData","pageSize","customerTableLoadingStatus","CustomermodalOpened","handleOk","top","mapStateToProps"],"sources":["C:/React_project/EduTest/frontend/src/components/admin/Customer/allcustomer.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Table, Input, Button, Typography, Divider, Icon, Modal, Popconfirm } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    ChangeCustomerSearchText,\r\n    ChangeCustomerTableData,\r\n    ChangeCustomerModalState,\r\n    ChangeCompanyTableData,\r\n    ChangeSelectedCompany,\r\n    ChangeDivisionTableData,\r\n    ChangeSelectedDivisions\r\n} from '../../../actions/adminAction';\r\nimport './allcustomer.css'\r\nimport Alert from '../../../components/common/alert';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport NewCustomerForm from './newcustomer';\r\n\r\nimport  LocalizedStrings  from  'react-localization' ;\r\nlet strings = new LocalizedStrings({\r\n  ru:{\r\n    Reg:\"Регистрация\",\r\n    Succes:\"Успешно\",\r\n    Warning:\"Предупреждение!\",\r\n    Error:\"Ошибка!\",\r\n    ErrorServer:\"Ошибка сервера\",\r\n    Search:\"Поиск\",\r\n    FullName:\"ФИО\",\r\n    Name:\"name\",\r\n    Avatar:\"Аватар\",\r\n    Email:\"Эл. почта\",\r\n    EmailSearch:\"Эл.почты\",\r\n    Chapter:\"Отдел\",\r\n    Company:\"Компания\",\r\n    Action:\"Действие\",\r\n    Save:\"Сохранить\",\r\n    YouReallyWantThis:\"Вы уверены?\",\r\n    No:\"Нет\",\r\n    Yes:\"Да\",\r\n    CostomerList:\"Список пользователей\",\r\n    Cancel:\"Отмена\",\r\n    Add: \"Добавить\"\r\n  },\r\n  kz: {\r\n    Reg :\"Тіркеу\",\r\n    Succes :\"Сәтті\",\r\n    Warning :\"Ескерту!\",\r\n    Error :\"Қате!\",\r\n    ErrorServer :\"Сервер қатесі\",\r\n    Search :\"Іздеу\",\r\n    FullName :\"Аты-жөні\",\r\n    Name :\"Аты\",\r\n    Avatar :\"Аватар\",\r\n    Email :\"Электрондық пошта\",\r\n    EmailSearch :\"Электрондық пошта\",\r\n    Chapter :\"Бөлім\",\r\n    Company :\"Компания\",\r\n    Action :\"Әрекет\",\r\n    Save :\"Сақтау\",\r\n    YouReallyWantThis :\"Сіз сенімдісіз бе?\",\r\n    No :\"Жоқ\",\r\n    Yes :\"Иә\",\r\n    CostomerList :\"Пайдаланушылар тізімі\",\r\n    Cancel:\"Болдырмау\",\r\n    Add: \"Қосу\"\r\n  }\r\n });\r\nclass AllCustomer extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      CustomertableLoading : false\r\n    }\r\n  }\r\n\r\n  openModal = (id,mode)=>{\r\n    this.props.ChangeCustomerModalState(true, id, mode);\r\n  }\r\n\r\n  closeModal = ()=>{\r\n    this.props.ChangeCustomerModalState(false,null,strings.Reg);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.ChangeDivisionTableData();\r\n    this.props.ChangeCompanyTableData(this.props.admin.selectedDivisions);\r\n    this.props.ChangeCustomerTableData(this.props.admin.selectedCompany);\r\n  }\r\n\r\n  deleteCustomer = (id)=>{\r\n    SecurePost({\r\n      url : `${apis.DELETE_CUSTOMER}`,\r\n      data : {\r\n          _id : id\r\n      }\r\n    }).then((response)=>{\r\n      if(response.data.success){\r\n        Alert('success',strings.Succes,response.data.message);\r\n        //this.props.ChangeCompanyTableData(this.props.admin.selectedDivisions);\r\n        this.props.ChangeCustomerTableData(this.props.admin.selectedCompany);\r\n      }\r\n      else{\r\n        return Alert('warning','strings.Warning',response.data.message);\r\n      }\r\n    }).catch((error)=>{\r\n      return Alert('error',strings.Error,strings.ErrorServer);\r\n    })\r\n  }\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => {\r\n                this.searchInput = node;\r\n              }}\r\n              placeholder={`${strings.Search} ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n              icon=\"search\"\r\n              size=\"small\"\r\n              style={{ width: 90, marginRight: 8 }}\r\n            >\r\n              Поиск\r\n            </Button>\r\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n              Отмена\r\n            </Button>\r\n          </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n          <Icon type=\"search\" style={{ color: filtered ? '#97c222' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n          record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: visible => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n          }\r\n        },\r\n        render: text => (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[this.props.admin.CustomersearchText]}\r\n            autoEscape\r\n            textToHighlight={text.toString()}\r\n          />\r\n        ),\r\n      });\r\n    \r\n      handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.props.ChangeCustomerSearchText(selectedKeys[0])\r\n      };\r\n    \r\n      handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.props.ChangeCustomerSearchText('')\r\n      };\r\n      // handleDivisionChange =(s)=>{\r\n      //   this.props.ChangeSelectedDivisions(s);\r\n      //   this.props.ChangeCustomerTableData(s);\r\n      // }\r\n\r\n    render() {\r\n      strings.setLanguage(this.props.lang)\r\n      const { Title } = Typography;\r\n      const columns = [\r\n        \r\n        {\r\n          title: strings.FullName,\r\n          dataIndex: 'name',\r\n          key: 'name',\r\n          width: '25%',\r\n          ...this.getColumnSearchProps(strings.FullName),\r\n        },\r\n        {\r\n          title: 'Аватар',\r\n          dataIndex: 'avatar',\r\n          key: 'avatar',\r\n          width: '5%',\r\n          render: (key) => (\r\n\r\n            <div>\r\n            <img src={key} style={{width: \"60px\",height: \"60px\",}} alt=\"\"/>\r\n                         \r\n            </div>\r\n          )\r\n        },\r\n        {\r\n          title: strings.Email,\r\n          dataIndex: 'emailid',\r\n          key: 'emailid',\r\n          width: '25%',\r\n          ...this.getColumnSearchProps(strings.EmailSearch),\r\n        },  \r\n        \r\n        {\r\n          title: strings.Chapter,\r\n          dataIndex: 'division.name',\r\n          key: 'division.name',\r\n          width: '15%',\r\n        },\r\n        \r\n        {\r\n          title: strings.Company,\r\n          dataIndex: 'company.name',\r\n          key: 'company.name',\r\n          width: '15%',ц\r\n        },\r\n        {\r\n          title: 'Права модератора',\r\n          dataIndex: 'company.name',\r\n          key: 'company.name',\r\n          width: '15%',\r\n        },\r\n        {\r\n          title: strings.Action,\r\n          key: '_id',\r\n          dataIndex: '_id',\r\n          render: (key) => (\r\n            <span>\r\n              <Button type=\"primary\" shape=\"circle\" icon=\"edit\" onClick={()=>this.openModal(key,strings.Save)}/>\r\n                <Divider type=\"vertical\" />\r\n                <Popconfirm\r\n                  title={strings.YouReallyWantThis}\r\n                  cancelText={strings.No}\r\n                  okText={strings.Yes}\r\n                  onConfirm={()=>{this.deleteCustomer(key)}}\r\n                  icon={<Icon type=\"delete\" style={{ color: 'red' }} />}\r\n                >\r\n                  <Button type=\"danger\" shape=\"circle\" icon=\"delete\" />\r\n                </Popconfirm>\r\n              \r\n            </span>\r\n          ),\r\n        },\r\n      ];\r\n        return (\r\n            <div className=\"admin-table-container\">\r\n              <Button type=\"primary\" icon=\"user-add\" style={{marginBottom:'10px'}} onClick={()=>this.openModal(null,'Регистрация')}>\r\n              {strings.Add}\r\n              </Button> \r\n              \r\n              <div className=\"xx-form-header\">\r\n                <Title level={4} style={{color:'#000000',textAlign:'left',fontFamily:'Montserrat',fontSize:'14pt',fontWeight:'bold'}}>{strings.CostomerList}</Title>\r\n              </div>\r\n              <Table \r\n                bordered={true} \r\n                columns={columns} \r\n                dataSource={this.props.admin.customerTableData} \r\n                size=\"medium\" \r\n                pagination={{ pageSize: 5 }}\r\n                loading={this.props.admin.customerTableLoadingStatus}\r\n                rowKey=\"_id\" \r\n              >\r\n                \r\n            </Table>;\r\n              <Modal\r\n                visible={this.props.admin.CustomermodalOpened}\r\n                title={false}\r\n                onOk={this.handleOk}\r\n                onCancel={this.closeModal}\r\n                style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\r\n                width=\"40%\"\r\n                destroyOnClose={true}\r\n                footer={[\r\n                  strings.setLanguage(this.props.lang)\r\n                ]}\r\n              >\r\n                <NewCustomerForm />\r\n              </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin : state.admin\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeCustomerSearchText,\r\n    ChangeCustomerTableData,\r\n    ChangeCustomerModalState,\r\n    ChangeSelectedDivisions,\r\n    ChangeDivisionTableData,\r\n    ChangeCompanyTableData,\r\n    ChangeSelectedCompany\r\n})(AllCustomer);"],"mappings":"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"},"metadata":{},"sourceType":"module"}