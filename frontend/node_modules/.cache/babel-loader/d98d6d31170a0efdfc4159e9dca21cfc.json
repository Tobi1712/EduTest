{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport { css as _css } from \"styled-components\";\nvar _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\customer\\\\Testing\\\\test.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n          left: 0.5rem;\\n        \"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n          right: 0.5rem;\\n        \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // import { Table, Input,  Typography, Divider, Icon, Modal, Popconfirm } from 'antd';\n// import Highlighter from 'react-highlight-words';\n\nimport { ChangeQuestionSearchText, ChangeQuestionTableData, ChangeQuestionModalState } from '../../../actions/trainerAction'; // import Alert from '../../../components/common/alert';\n\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis'; // import Test2 from './test2';\n// import Test3 from './test3';\n\nimport styled from \"styled-components\"; // import Carousel from \"react-multi-carousel\";\n\nimport \"react-multi-carousel/lib/styles.css\";\nimport classnames from 'classnames';\nimport Counter from './Counter';\nconst Container = styled.div.withConfig({\n  displayName: \"test__Container\",\n  componentId: \"sc-13myauf-0\"\n})([\"display:flex;justify-content:center;align-items:center;min-height:80vh;width:100%;\"]);\nconst ScreenQuiz = styled.div.withConfig({\n  displayName: \"test__ScreenQuiz\",\n  componentId: \"sc-13myauf-1\"\n})([\"display:flex;justify-content:\", \";align-items:center;flex-direction:column;max-width:1200px;padding:\", \";width:100%;height:80vh;background:#fff;border-radius:5px;box-shadow:0px 5px 40px -20px #000;\"], props => props.screen ? \"space-between\" : \"center\", props => props.screen ? \"5rem\" : \".5rem\");\nconst Title = styled.h1.withConfig({\n  displayName: \"test__Title\",\n  componentId: \"sc-13myauf-2\"\n})([\"font-size:2.5rem;margin-bottom:0.5rem;text-align:center;max-width:90%;\"]);\nconst Paragraph = styled.p.withConfig({\n  displayName: \"test__Paragraph\",\n  componentId: \"sc-13myauf-3\"\n})([\"font-size:1.5rem;\"]);\nconst Button = styled.button.withConfig({\n  displayName: \"test__Button\",\n  componentId: \"sc-13myauf-4\"\n})([\"font-size:1.2rem;font-weight:bold;width:40%;height:3rem;border:none;border-radius:5px;box-shadow:0px 3px 15px 0px #666;\"]);\nconst ButtonScr = styled.button.withConfig({\n  displayName: \"test__ButtonScr\",\n  componentId: \"sc-13myauf-5\"\n})([\"font-size:2rem;z-index:10;position:fixed;top:50%;\", \"\"], props => props.right ? _css(_templateObject()) : _css(_templateObject2()));\nconst ContainerLabel = styled.div.withConfig({\n  displayName: \"test__ContainerLabel\",\n  componentId: \"sc-13myauf-6\"\n})([\"display:flex;align-items:flex-start;flex-direction:column;margin:0 auto 0.5rem auto;\"]);\nconst Label = styled.label.withConfig({\n  displayName: \"test__Label\",\n  componentId: \"sc-13myauf-7\"\n})([\"display:flex;justify-content:center;align-items:center;\"]);\nconst Radio = styled.input.attrs({\n  type: 'checkbox'\n}).withConfig({\n  displayName: \"test__Radio\",\n  componentId: \"sc-13myauf-8\"\n})([\"display:flex;justify-content:center;align-items:center;width:15px;height:15px;border:0.5px solid black;margin:0 0.5rem 0 0;background:\", \";\"], props => props.clickedLabel ? \"#7159c1\" : \"#fff\"); // const IntoRadio = styled.div`\n//   width: 5px;\n//   height: 5px;\n//   border-radius: 3px;\n//   background: #fff;\n// `;\n\nconst Error = styled.div.withConfig({\n  displayName: \"test__Error\",\n  componentId: \"sc-13myauf-9\"\n})([\"top:22rem;color:red;position:absolute;font-weight:bold;\"]);\n\nclass Test extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNextClick = () => {\n      const _this$state = this.state,\n            count = _this$state.count,\n            questions = _this$state.questions,\n            clickedLabel = _this$state.clickedLabel,\n            answer = _this$state.answer;\n\n      if (questions.length >= count) {\n        this.setState({\n          count: count + 1,\n          checked: false\n        });\n      }\n    };\n\n    this.handlePrevClick = () => {\n      const _this$state2 = this.state,\n            count = _this$state2.count,\n            questions = _this$state2.questions,\n            clickedLabel = _this$state2.clickedLabel,\n            answer = _this$state2.answer;\n\n      if (questions.length >= count && count > 0) {\n        this.setState({\n          count: count - 1,\n          checked: false\n        });\n      }\n    };\n\n    this.handleClick = e => {\n      const _this$state3 = this.state,\n            count = _this$state3.count,\n            questions = _this$state3.questions,\n            clickedLabel = _this$state3.clickedLabel,\n            answer = _this$state3.answer;\n\n      if (questions.length >= count && clickedLabel.answerText) {\n        this.setState({\n          count: count + 1,\n          clickedLabel: {},\n          answer: clickedLabel.correctAnswer ? answer + 1 : answer,\n          checked: false,\n          error: false\n        });\n        const answers = []; // answers.push({clickedLabel});\n\n        e.preventDefault();\n        console.log(this.props);\n        SecurePost({\n          url: \"\".concat(apis.CREATE_QUESTIONS),\n          data: {\n            MyAnswers: clickedLabel\n          }\n        });\n        console.log('ZXC', MyAnswers);\n      } else {\n        this.setState({\n          count: count,\n          error: true\n        });\n      }\n\n      if (questions.length === count) {\n        this.setState({\n          screenFinish: true\n        });\n      } // this.handleCountDown();\n\n    };\n\n    this.renderInitial = () => {\n      const _this$state4 = this.state,\n            second = _this$state4.second,\n            count = _this$state4.count;\n      this.setState({\n        screen: false,\n        count: 1\n      }); // this.handleCountDown();\n    };\n\n    this.renderScreenInitial = () => {\n      return /*#__PURE__*/React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(ScreenQuiz, {\n        screen: this.state.screen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"\\u0422\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: this.renderInitial,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\")));\n    };\n\n    this.handleOptions = answerOptions => {\n      const _this$state5 = this.state,\n            clickedLabel = _this$state5.clickedLabel,\n            count = _this$state5.count,\n            checked = _this$state5.checked,\n            t = _this$state5.t;\n      console.log('click:', clickedLabel);\n      console.log('answer1:', answerOptions);\n      return answerOptions.map((a, i) => {\n        return /*#__PURE__*/React.createElement(Label, {\n          key: i,\n          onClick: () => this.setState({\n            clickedLabel: a,\n            checked: false,\n            error: false\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        }, console.log(\"Ak\"), /*#__PURE__*/React.createElement(Radio, {\n          clickedLabel: clickedLabel.answerText === a.answerText,\n          value: clickedLabel.answerText,\n          onChange: e => this.handleChange(e, i),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288\n          },\n          __self: this\n        }), /*#__PURE__*/React.createElement(Paragraph, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289\n          },\n          __self: this\n        }, a.answerText));\n      });\n    };\n\n    this.handleChange = (e, i) => {\n      const checked = this.state.checked; // this.setState({checked: !checked});\n\n      console.log('check', e.target.checked);\n      console.log('I', i);\n    };\n\n    this.renderQuestions = () => {\n      const _this$state6 = this.state,\n            count = _this$state6.count,\n            questions = _this$state6.questions,\n            error = _this$state6.error,\n            second = _this$state6.second,\n            time = _this$state6.time,\n            ind = _this$state6.ind;\n      const NewQuestions = Array.from(questions);\n      const removeQuestions = NewQuestions.slice(count - 1, count);\n      return removeQuestions.map((q, i) => /*#__PURE__*/React.createElement(Container, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(ScreenQuiz, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Counter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }), /*#__PURE__*/React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, count, \"/\", questions.length), /*#__PURE__*/React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, q.question), /*#__PURE__*/React.createElement(ContainerLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, this.handleOptions(q.answerOptions)), /*#__PURE__*/React.createElement(Button, {\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), error && /*#__PURE__*/React.createElement(Error, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, \"Please check an Options.\"), /*#__PURE__*/React.createElement(ButtonScr, {\n        onClick: this.handleNextClick,\n        right: true,\n        disabled: count === questions.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, \"\\u3009\"), /*#__PURE__*/React.createElement(ButtonScr, {\n        onClick: this.handlePrevClick,\n        left: true,\n        disabled: count === 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, \"\\u3008\"), console.log('Count:', count))));\n    };\n\n    this.renderResult = () => {\n      const _this$state7 = this.state,\n            answer = _this$state7.answer,\n            questions = _this$state7.questions,\n            screenFinish = _this$state7.screenFinish;\n      return /*#__PURE__*/React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(ScreenQuiz, {\n        screen: screenFinish,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, \"\\u0412\\u044B \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u043E \\u043E\\u0442\\u0432\\u0435\\u0442\\u0438\\u043B\\u0438 \", answer, \" \\u0438\\u0437 \", questions.length, \" \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u043E\\u0432\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.setState({\n          count: 0,\n          screenFinish: false,\n          screen: true,\n          answer: 0\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, \"\\u0422\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E\")));\n    };\n\n    this.state = {\n      questions: [],\n      screen: true,\n      count: 0,\n      clickedLabel: {},\n      answerLabel: {},\n      answer: 0,\n      error: false,\n      screenFinish: false,\n      second: 60,\n      time: {},\n      checked: true,\n      temp: [],\n      t: 0\n    };\n  }\n\n  componentDidMount() {\n    this.props.ChangeQuestionTableData(this.props.id);\n    var questions = [];\n    this.props.trainer.QuestionTableData.map((d, i) => {\n      questions[i] = {\n        question: d.body,\n        // questionImage : d.quesimg,\n        answerOptions: [{\n          answerText: d.answer1,\n          correctAnswer: d.trueans1\n        }, {\n          answerText: d.answer2,\n          correctAnswer: d.trueans2\n        }, {\n          answerText: d.answer3,\n          correctAnswer: d.trueans3\n        }, {\n          answerText: d.answer4,\n          correctAnswer: d.trueans4\n        }, {\n          answerText: d.answer5,\n          correctAnswer: d.trueans5\n        }]\n      };\n    });\n    this.setState({\n      questions: questions\n    });\n  }\n\n  render() {\n    const _this$state8 = this.state,\n          screenFinish = _this$state8.screenFinish,\n          questions = _this$state8.questions,\n          screen = _this$state8.screen;\n    return !screenFinish && questions ? /*#__PURE__*/React.createElement(React.Fragment, null, screen ? this.renderScreenInitial() : this.renderQuestions()) : this.renderResult();\n  } // render() {\n  //   console.log('qas',this.props.trainer.QuestionTableData);\n  //   console.log('qaz',this.state);\n  //   return (\n  //     <div>\n  //       <h1>Тестирование номер 1</h1>\n  //       {this.state.isStarted ? null : (\n  //         <div id=\"button\">\n  //           <Button variant=\"contained\" color=\"secondary\" onClick={()=>this.handleClick}>\n  //             Начать тест\n  //           </Button>\n  //         </div>\n  //       )}\n  //     {this.state.isStarted ? (\n  //     // <Test2  details={this.props.trainer.QuestionTableData}/>\n  //     ) : null}\n  //     </div>\n  //   )\n  // }\n\n\n}\n\nconst mapStateToProps = state => ({\n  chapter: state.chapter,\n  trainer: state.trainer\n});\n\nexport default connect(mapStateToProps, {\n  ChangeQuestionSearchText,\n  ChangeQuestionTableData,\n  ChangeQuestionModalState\n})(Test);","map":{"version":3,"names":["React","Component","connect","ChangeQuestionSearchText","ChangeQuestionTableData","ChangeQuestionModalState","SecurePost","apis","styled","classnames","Counter","Container","div","ScreenQuiz","props","screen","Title","h1","Paragraph","p","Button","button","ButtonScr","right","css","ContainerLabel","Label","label","Radio","input","attrs","type","clickedLabel","Error","Test","constructor","handleNextClick","state","count","questions","answer","length","setState","checked","handlePrevClick","handleClick","e","answerText","correctAnswer","error","answers","preventDefault","console","log","url","CREATE_QUESTIONS","data","MyAnswers","screenFinish","renderInitial","second","renderScreenInitial","handleOptions","answerOptions","t","map","a","i","handleChange","target","renderQuestions","time","ind","NewQuestions","Array","from","removeQuestions","slice","q","question","renderResult","answerLabel","temp","componentDidMount","id","trainer","QuestionTableData","d","body","answer1","trueans1","answer2","trueans2","answer3","trueans3","answer4","trueans4","answer5","trueans5","render","mapStateToProps","chapter"],"sources":["C:/React_project/EduTest/frontend/src/components/customer/Testing/test.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\n// import { Table, Input,  Typography, Divider, Icon, Modal, Popconfirm } from 'antd';\r\n// import Highlighter from 'react-highlight-words';\r\nimport  { css } from 'styled-components/macro'\r\nimport { \r\n    ChangeQuestionSearchText,\r\n    ChangeQuestionTableData,\r\n    ChangeQuestionModalState\r\n} from '../../../actions/trainerAction';\r\n// import Alert from '../../../components/common/alert';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\n// import Test2 from './test2';\r\n// import Test3 from './test3';\r\nimport styled from \"styled-components\";\r\n// import Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport classnames from 'classnames';\r\nimport Counter from './Counter';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 80vh;\r\n  width: 100%;\r\n  /*background: #7159c1;*/\r\n`;\r\n\r\nconst ScreenQuiz = styled.div`\r\n  display: flex;\r\n  justify-content: ${props => (props.screen ? \"space-between\" : \"center\")};\r\n  align-items: center;\r\n  flex-direction: column;\r\n  max-width: 1200px;\r\n  padding: ${props => (props.screen ? \"5rem\" : \".5rem\")};\r\n  width: 100%;\r\n  height: 80vh;\r\n  background: #fff;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 5px 40px -20px #000;\r\n\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 2.5rem;\r\n  // color: #7159c1;\r\n  margin-bottom: 0.5rem;\r\n  text-align: center;\r\n  max-width: 90%;\r\n`;\r\n\r\nconst Paragraph = styled.p`\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  width: 40%;\r\n  height: 3rem;\r\n  // color: #fff;\r\n  border: none;\r\n  // background: #7159c1;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 3px 15px 0px #666;\r\n`;\r\n\r\nconst ButtonScr = styled.button`\r\n  font-size: 2rem;\r\n  z-index: 10;\r\n  position: fixed;\r\n  top: 50%;\r\n  ${(props) =>\r\n    props.right\r\n      ? css`\r\n          right: 0.5rem;\r\n        `\r\n      : css`\r\n          left: 0.5rem;\r\n        `}\r\n`\r\n\r\nconst ContainerLabel = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  margin: 0 auto 0.5rem auto;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Radio = styled.input.attrs({ type: 'checkbox' })`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 15px;\r\n  height: 15px;\r\n  // border-radius: 7.5px;\r\n  border: 0.5px solid black;\r\n  margin: 0 0.5rem 0 0;\r\n  background: ${props => (props.clickedLabel ? \"#7159c1\" : \"#fff\")};\r\n`;\r\n\r\n// const IntoRadio = styled.div`\r\n//   width: 5px;\r\n//   height: 5px;\r\n//   border-radius: 3px;\r\n//   background: #fff;\r\n// `;\r\n\r\nconst Error = styled.div`\r\n  top: 22rem;\r\n  color: red;\r\n  position: absolute;\r\n  font-weight: bold;\r\n`;\r\n\r\nclass Test extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state={\r\n        questions:[],\r\n        screen: true,\r\n        count: 0,\r\n        clickedLabel: {},\r\n        answerLabel:{},\r\n        answer: 0,\r\n        error:false,\r\n        screenFinish:false,\r\n        second:60,\r\n        time:{},\r\n        checked:true,\r\n        temp:[],\r\n        t:0\r\n      }\r\n    }\r\n  \r\n    componentDidMount(){\r\n      this.props.ChangeQuestionTableData(this.props.id);\r\n      var questions=[];\r\n      this.props.trainer.QuestionTableData.map((d,i)=>{\r\n        questions[i]=(\r\n          {\r\n            question : d.body,\r\n            // questionImage : d.quesimg,\r\n            answerOptions: [\r\n              { answerText: d.answer1, correctAnswer: d.trueans1 },\r\n              { answerText: d.answer2, correctAnswer: d.trueans2 },\r\n              { answerText: d.answer3, correctAnswer: d.trueans3 },\r\n              { answerText: d.answer4, correctAnswer: d.trueans4 },\r\n              { answerText: d.answer5, correctAnswer: d.trueans5}\r\n            ]\r\n          }\r\n        )\r\n      });\r\n      this.setState({\r\n        questions:questions\r\n      })\r\n    }\r\n\r\n    handleNextClick=()=>{\r\n      const { count, questions, clickedLabel, answer} = this.state;\r\n      if (questions.length >= count) {\r\n        this.setState({\r\n          count: count + 1,\r\n          checked:false,\r\n        });\r\n      } \r\n    }\r\n\r\n    handlePrevClick=()=>{\r\n      const { count, questions, clickedLabel, answer} = this.state;\r\n      if (questions.length >= count && count>0) {\r\n        this.setState({\r\n          count: count - 1,\r\n          checked:false,\r\n        });\r\n      } \r\n    }\r\n\r\n    handleClick = (e)=> {\r\n      const { count, questions, clickedLabel, answer} = this.state;\r\n      if (questions.length >= count && clickedLabel.answerText) {\r\n        this.setState({\r\n          count: count + 1,\r\n          clickedLabel: {},\r\n          answer: clickedLabel.correctAnswer ? answer + 1 : answer,\r\n          checked: false,\r\n          error: false\r\n        });\r\n        const answers = [];\r\n        // answers.push({clickedLabel});\r\n        e.preventDefault();\r\n        console.log(this.props)\r\n\r\n                    SecurePost({\r\n                        url : `${apis.CREATE_QUESTIONS}`,\r\n                        data : {\r\n                          MyAnswers: clickedLabel\r\n                        }\r\n                    })\r\n\r\n        console.log('ZXC',MyAnswers);\r\n      } \r\n      else {\r\n        this.setState({\r\n          count: count,\r\n          error: true\r\n        });\r\n      }\r\n\r\n\r\n      if (questions.length === count) {\r\n        this.setState({\r\n          screenFinish: true\r\n        });\r\n      }\r\n      // this.handleCountDown();\r\n    }\r\n\r\n    // handleCountDown = () => {\r\n    //   const { second, count } = this.state;\r\n    //   clearInterval(this.timer);\r\n  \r\n    //   let counter = 1;\r\n    //   this.timer = setInterval(() => {\r\n    //     if (counter >= 10) {\r\n    //       clearInterval(this.timer);\r\n    //       if (second >= 10) {\r\n    //         this.setState({\r\n    //           count: count + 1\r\n    //         });\r\n    //       }\r\n    //     }\r\n  \r\n    //     this.setState({\r\n    //       second: counter\r\n    //     });\r\n    //     // console.log(counter++);\r\n    //   }, 1000);\r\n    // };\r\n\r\n    renderInitial = () => {\r\n      const { second, count } = this.state;\r\n  \r\n      this.setState({\r\n        screen: false,\r\n        count: 1\r\n      });\r\n      // this.handleCountDown();\r\n    };\r\n\r\n    renderScreenInitial = () => {\r\n      return (\r\n        <Container>\r\n          <ScreenQuiz screen={this.state.screen}>\r\n            <Title>Тестирование</Title>\r\n            {/* <Paragraph>Click to start</Paragraph> */}\r\n            <Button onClick={this.renderInitial}>Начать тест</Button>\r\n          </ScreenQuiz>\r\n        </Container>\r\n      );\r\n    };\r\n  \r\n    handleOptions = answerOptions => {\r\n      const { clickedLabel, count, checked, t } = this.state;\r\n      console.log('click:',clickedLabel);\r\n      console.log('answer1:',answerOptions);\r\n      return answerOptions.map((a, i) => {\r\n        return (\r\n          <Label\r\n            key={i}\r\n            onClick={() =>\r\n              this.setState({\r\n                clickedLabel: a,\r\n                checked : false,\r\n                error: false\r\n              })\r\n            }\r\n          >\r\n            {console.log(\"Ak\")}\r\n            <Radio clickedLabel={clickedLabel.answerText === a.answerText} value={clickedLabel.answerText} onChange={e => this.handleChange(e, i)}/>\r\n            <Paragraph>{a.answerText}</Paragraph>\r\n          </Label>\r\n          \r\n        );\r\n      });\r\n    };\r\n\r\n    handleChange = (e, i) => {\r\n      const {checked} = this.state\r\n      // this.setState({checked: !checked});\r\n      console.log('check', e.target.checked);\r\n      console.log('I',i)\r\n    };\r\n\r\n\r\n  //   startTimer = () => {\r\n  //     const countDownTime = Date.now() + 180000;\r\n  //     this.interval = setInterval(() => {\r\n  //         const now = new Date();\r\n  //         const distance = countDownTime - now;\r\n\r\n  //         const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n  //         const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n  //         if (distance < 0) {\r\n  //             clearInterval(this.interval);\r\n  //             this.setState({\r\n  //                 time: {\r\n  //                     minutes: 0,\r\n  //                     seconds: 0\r\n  //                 }\r\n  //             }, () => {\r\n  //                 this.endGame();\r\n  //             });\r\n  //         } else {\r\n  //             this.setState({\r\n  //                 time: {\r\n  //                     minutes,\r\n  //                     seconds,\r\n  //                     distance\r\n  //                 }\r\n  //             });\r\n  //         }\r\n  //     }, 1000);\r\n  // }\r\n\r\n  \r\n  \r\n    renderQuestions = () => {\r\n      const { count,questions, error, second, time, ind } = this.state;\r\n      const NewQuestions = Array.from(questions);\r\n      const removeQuestions = NewQuestions.slice(count - 1, count);\r\n    \r\n      return removeQuestions.map((q, i) => (\r\n\r\n        <Container key={i}>\r\n          <ScreenQuiz>\r\n            \r\n            {/* <div className=\"timer-container\">\r\n              <p>\r\n                <span className={classnames('right valid', {\r\n                  'warning': time.distance <= 120000,\r\n                  'invalid': time.distance < 30000\r\n                  })} style={{paddingLeft:'10px'}}>\r\n                  {time.minutes}:{time.seconds}\r\n                  <span  className=\"mdi mdi-clock-outline mdi-24px\"></span></span>\r\n              </p>\r\n            </div> */}\r\n            <Counter/>\r\n\r\n            <h3>{count}/{questions.length}</h3>\r\n            <Title>{q.question}</Title>\r\n            <ContainerLabel>\r\n              {this.handleOptions(q.answerOptions)}\r\n            </ContainerLabel>\r\n            <Button onClick={this.handleClick}>Сохранить</Button>\r\n            {error && <Error>Please check an Options.</Error>}\r\n            <ButtonScr onClick={this.handleNextClick} right disabled={count === questions.length}>〉</ButtonScr>\r\n            <ButtonScr onClick={this.handlePrevClick} left disabled={count===1}>〈</ButtonScr>\r\n            {console.log('Count:',count)}\r\n          </ScreenQuiz>\r\n        </Container>\r\n\r\n      ));\r\n    };\r\n  \r\n    renderResult = () => {\r\n      const { answer,questions, screenFinish } = this.state;\r\n  \r\n      return (\r\n        <Container>\r\n          <ScreenQuiz screen={screenFinish}>\r\n            <Title>Вы правильно ответили {answer} из {questions.length} вопросов</Title>\r\n            <Button\r\n              onClick={() =>\r\n                this.setState({\r\n                  count: 0,\r\n                  screenFinish: false,\r\n                  screen: true,\r\n                  answer: 0\r\n                })\r\n              }\r\n            >\r\n              Тестировать заново\r\n            </Button>\r\n          </ScreenQuiz>\r\n        </Container>\r\n      );\r\n    };\r\n\r\n\r\n    render() {\r\n      const { screenFinish, questions, screen } = this.state;\r\n\r\n      return !screenFinish && questions ? (\r\n        <>{screen ? this.renderScreenInitial() : this.renderQuestions()}</>\r\n      ) : (\r\n        this.renderResult()\r\n      );\r\n    }\r\n\r\n    // render() {\r\n    //   console.log('qas',this.props.trainer.QuestionTableData);\r\n    //   console.log('qaz',this.state);\r\n    //   return (\r\n    //     <div>\r\n    //       <h1>Тестирование номер 1</h1>\r\n    //       {this.state.isStarted ? null : (\r\n    //         <div id=\"button\">\r\n    //           <Button variant=\"contained\" color=\"secondary\" onClick={()=>this.handleClick}>\r\n    //             Начать тест\r\n    //           </Button>\r\n    //         </div>\r\n    //       )}\r\n        \r\n    //     {this.state.isStarted ? (\r\n    //     // <Test2  details={this.props.trainer.QuestionTableData}/>\r\n    //     ) : null}\r\n    //     </div>\r\n    //   )\r\n    // }\r\n  }\r\n  \r\n  const mapStateToProps = state => ({\r\n      chapter : state.chapter,\r\n      trainer : state.trainer\r\n  });\r\n  \r\n  export default connect(mapStateToProps,{\r\n      ChangeQuestionSearchText,\r\n      ChangeQuestionTableData,\r\n      ChangeQuestionModalState\r\n  })(Test);\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}