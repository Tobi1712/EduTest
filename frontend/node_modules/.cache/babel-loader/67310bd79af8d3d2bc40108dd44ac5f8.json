{"ast":null,"code":"import { css as _css } from \"styled-components\";\nimport { createGlobalStyle as _createGlobalStyle } from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\customer\\\\Testing\\\\test.js\";\nimport React, { Component, useState } from 'react';\nimport Slider from 'react-touch-drag-slider';\nimport { connect } from 'react-redux';\nimport { Table, Input, Button, Typography, Divider, Icon, Modal, Popconfirm } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { ChangeQuestionSearchText, ChangeQuestionTableData, ChangeQuestionModalState } from '../../../actions/trainerAction';\nimport Alert from '../../../components/common/alert';\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport Test2 from './test2';\nimport Test3 from './test3';\n\nclass Test extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      QuestiontableLoading: true,\n      details: null,\n      testId: null,\n      testModelVisible: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.ChangeQuestionTableData(this.props.id);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Test2, {\n      details: this.props.trainer.QuestionTableData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  chapter: state.chapter,\n  trainer: state.trainer\n});\n\nexport default connect(mapStateToProps, {\n  ChangeQuestionSearchText,\n  ChangeQuestionTableData,\n  ChangeQuestionModalState\n})(Test); // import React, { Component } from 'react';\n// import { Table, Input, Button, Typography, Divider, Icon, Modal, Popconfirm } from 'antd';\n// import Highlighter from 'react-highlight-words';\n// import { connect } from 'react-redux';\n// import { \n//     ChangeDivisionSearchText,\n//     ChangeDivisionTableData,\n//     ChangeDivisionModalState,\n//     ChangeCompanyTableData,\n//     ChangeSelectedCompany,\n// } from '../../../actions/adminAction';\n// import './alldivision.css'\n// import Alert from '../../../components/common/alert';\n// import {SecurePost} from '../../../services/axiosCall';\n// import apis from '../../../services/Apis';\n// import NewDivisionForm from './newdivision';\n// class AllDivision extends Component {\n//   constructor(props){\n//     super(props);\n//     this.state={\n//       DivisiontableLoading : false\n//     }\n//   }\n//   openModal = (id,mode)=>{\n//     this.props.ChangeDivisionModalState(true,id,mode);\n//   }\n//   closeModal = ()=>{\n//     this.props.ChangeDivisionModalState(false,null,'Регистрация');\n//   }\n//   componentDidMount(){\n//     this.props.ChangeCompanyTableData();\n//     this.props.ChangeDivisionTableData(this.props.admin.selectedCompany);\n//   }\n//   deleteDivision = (id)=>{\n//     SecurePost({\n//       url : `${apis.DELETE_DIVISION}`,\n//       data : {\n//           _id : id\n//       }\n//     }).then((response)=>{\n//       if(response.data.success){\n//         Alert('success','Успешно',response.data.message);\n//         this.props.ChangeDivisionTableData();\n//       }\n//       else{\n//         return Alert('warning','Предупреждение!',response.data.message);\n//       }\n//     }).catch((error)=>{\n//       return Alert('error','Ошибка!','Ошибка сервера');\n//     })\n//   }\n//     render() {\n//       const { Title } = Typography;\n//       const columns = [\n//         {\n//           title: 'Название',\n//           dataIndex: 'name',\n//           key: 'name',\n//           width: '25%',\n//           ...this.getColumnSearchProps('name'),\n//         },\n//         {\n//           title: 'Описание',\n//           dataIndex: 'description',\n//           key: 'description',\n//           width: '25%',\n//           ...this.getColumnSearchProps('description'),\n//         },   \n//         {\n//           title: 'Компания',\n//           dataIndex: 'company.name',\n//           key: 'company.name',\n//           width: '25%',\n//           //...this.getColumnSearchProps('company.name'),\n//         },    \n//         {\n//           title: 'Действие',\n//           key: '_id',\n//           dataIndex: '_id',\n//           render: (key) => (\n//             <span>\n//               <Button type=\"primary\" shape=\"circle\" icon=\"edit\" onClick={()=>this.openModal(key,'Сохранить')}/>\n//                 <Divider type=\"vertical\" />\n//                 <Popconfirm\n//                   title=\"Вы уверены？\"\n//                   cancelText=\"Нет\"\n//                   okText=\"Да\"\n//                   onConfirm={()=>{this.deleteDivision(key)}}\n//                   icon={<Icon type=\"delete\" style={{ color: 'red' }} />}\n//                 >\n//                   <Button type=\"danger\" shape=\"circle\" icon=\"delete\" />\n//                 </Popconfirm>\n//             </span>\n//           ),\n//         },\n//       ];\n//         return (\n//             <div className=\"admin-table-container\">\n//               <Button type=\"primary\" icon=\"user-add\" style={{marginBottom:'10px'}} onClick={()=>this.openModal(null,'Регистрация')}>\n//               Добавить\n//               </Button> \n//               <div className=\"register-division-form-header\">\n//                 <Title level={4} style={{color:'#fff',textAlign:'center'}}>Список отделов</Title>\n//               </div>\n//               <Table \n//                 bordered={true} \n//                 columns={columns} \n//                 dataSource={this.props.admin.divisionTableData} \n//                 size=\"medium\" \n//                 pagination={{ pageSize: 5 }}\n//                 loading={this.props.admin.divisionTableLoadingStatus}\n//                 rowKey=\"_id\" \n//               />;\n//               <Modal\n//                 visible={this.props.admin.DivisionmodalOpened}\n//                 title={false}\n//                 onOk={this.handleOk}\n//                 onCancel={this.closeModal}\n//                 style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\n//                 width=\"40%\"\n//                 destroyOnClose={true}\n//                 footer={[\n//                 ]}\n//               >\n//                 <NewDivisionForm />\n//               </Modal>\n//             </div>\n//         )\n//     }\n// }\n// const mapStateToProps = state => ({\n//     admin : state.admin\n// });\n// export default connect(mapStateToProps,{\n//     ChangeDivisionSearchText,\n//     ChangeDivisionTableData,\n//     ChangeDivisionModalState,\n//     ChangeCompanyTableData,\n//     ChangeSelectedCompany,\n// })(AllDivision);","map":{"version":3,"names":["React","Component","useState","Slider","connect","Table","Input","Button","Typography","Divider","Icon","Modal","Popconfirm","Highlighter","ChangeQuestionSearchText","ChangeQuestionTableData","ChangeQuestionModalState","Alert","SecurePost","apis","Test2","Test3","Test","constructor","props","state","QuestiontableLoading","details","testId","testModelVisible","componentDidMount","id","render","trainer","QuestionTableData","mapStateToProps","chapter"],"sources":["C:/React_project/EduTest/frontend/src/components/customer/Testing/test.js"],"sourcesContent":["import React, { Component, useState } from 'react'\r\nimport Slider from 'react-touch-drag-slider'\r\nimport { connect } from 'react-redux';\r\nimport { Table, Input, Button, Typography, Divider, Icon, Modal, Popconfirm } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport styled, { createGlobalStyle, css } from 'styled-components/macro'\r\nimport { \r\n    ChangeQuestionSearchText,\r\n    ChangeQuestionTableData,\r\n    ChangeQuestionModalState\r\n} from '../../../actions/trainerAction';\r\nimport Alert from '../../../components/common/alert';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Test2 from './test2';\r\nimport Test3 from './test3';\r\n\r\n\r\nclass Test extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state={\r\n        QuestiontableLoading : true,\r\n        details : null,\r\n        testId : null,\r\n        testModelVisible:false\r\n      }\r\n    }\r\n  \r\n    componentDidMount(){\r\n      this.props.ChangeQuestionTableData(this.props.id);\r\n      \r\n    }\r\n\r\n    \r\n    render() {\r\n          return (\r\n                  \r\n                  <Test2 details={this.props.trainer.QuestionTableData}/>\r\n\r\n              \r\n          )\r\n      }\r\n  }\r\n  \r\n  const mapStateToProps = state => ({\r\n      chapter : state.chapter,\r\n      trainer : state.trainer\r\n  });\r\n  \r\n  export default connect(mapStateToProps,{\r\n      ChangeQuestionSearchText,\r\n      ChangeQuestionTableData,\r\n      ChangeQuestionModalState\r\n  })(Test);\r\n\r\n\r\n\r\n\r\n  // import React, { Component } from 'react';\r\n  // import { Table, Input, Button, Typography, Divider, Icon, Modal, Popconfirm } from 'antd';\r\n  // import Highlighter from 'react-highlight-words';\r\n  // import { connect } from 'react-redux';\r\n  // import { \r\n  //     ChangeDivisionSearchText,\r\n  //     ChangeDivisionTableData,\r\n  //     ChangeDivisionModalState,\r\n  //     ChangeCompanyTableData,\r\n  //     ChangeSelectedCompany,\r\n  // } from '../../../actions/adminAction';\r\n  // import './alldivision.css'\r\n  // import Alert from '../../../components/common/alert';\r\n  // import {SecurePost} from '../../../services/axiosCall';\r\n  // import apis from '../../../services/Apis';\r\n  // import NewDivisionForm from './newdivision';\r\n  \r\n  \r\n  // class AllDivision extends Component {\r\n  \r\n  //   constructor(props){\r\n  //     super(props);\r\n  //     this.state={\r\n  //       DivisiontableLoading : false\r\n  //     }\r\n  //   }\r\n  \r\n  //   openModal = (id,mode)=>{\r\n  //     this.props.ChangeDivisionModalState(true,id,mode);\r\n  //   }\r\n  \r\n  //   closeModal = ()=>{\r\n  //     this.props.ChangeDivisionModalState(false,null,'Регистрация');\r\n  //   }\r\n  \r\n  //   componentDidMount(){\r\n  //     this.props.ChangeCompanyTableData();\r\n  //     this.props.ChangeDivisionTableData(this.props.admin.selectedCompany);\r\n  //   }\r\n  \r\n  //   deleteDivision = (id)=>{\r\n  //     SecurePost({\r\n  //       url : `${apis.DELETE_DIVISION}`,\r\n  //       data : {\r\n  //           _id : id\r\n  //       }\r\n  //     }).then((response)=>{\r\n  //       if(response.data.success){\r\n  //         Alert('success','Успешно',response.data.message);\r\n  //         this.props.ChangeDivisionTableData();\r\n  //       }\r\n  //       else{\r\n  //         return Alert('warning','Предупреждение!',response.data.message);\r\n  //       }\r\n  //     }).catch((error)=>{\r\n  //       return Alert('error','Ошибка!','Ошибка сервера');\r\n  //     })\r\n  //   }\r\n  \r\n      \r\n  \r\n  //     render() {\r\n  //       const { Title } = Typography;\r\n  //       const columns = [\r\n  //         {\r\n  //           title: 'Название',\r\n  //           dataIndex: 'name',\r\n  //           key: 'name',\r\n  //           width: '25%',\r\n  //           ...this.getColumnSearchProps('name'),\r\n  //         },\r\n  //         {\r\n  //           title: 'Описание',\r\n  //           dataIndex: 'description',\r\n  //           key: 'description',\r\n  //           width: '25%',\r\n  //           ...this.getColumnSearchProps('description'),\r\n  //         },   \r\n  //         {\r\n  //           title: 'Компания',\r\n  //           dataIndex: 'company.name',\r\n  //           key: 'company.name',\r\n  //           width: '25%',\r\n  //           //...this.getColumnSearchProps('company.name'),\r\n  //         },    \r\n  //         {\r\n  //           title: 'Действие',\r\n  //           key: '_id',\r\n  //           dataIndex: '_id',\r\n  //           render: (key) => (\r\n  //             <span>\r\n  //               <Button type=\"primary\" shape=\"circle\" icon=\"edit\" onClick={()=>this.openModal(key,'Сохранить')}/>\r\n  //                 <Divider type=\"vertical\" />\r\n  //                 <Popconfirm\r\n  //                   title=\"Вы уверены？\"\r\n  //                   cancelText=\"Нет\"\r\n  //                   okText=\"Да\"\r\n  //                   onConfirm={()=>{this.deleteDivision(key)}}\r\n  //                   icon={<Icon type=\"delete\" style={{ color: 'red' }} />}\r\n  //                 >\r\n  //                   <Button type=\"danger\" shape=\"circle\" icon=\"delete\" />\r\n  //                 </Popconfirm>\r\n                \r\n  //             </span>\r\n  //           ),\r\n  //         },\r\n  //       ];\r\n  //         return (\r\n  //             <div className=\"admin-table-container\">\r\n  //               <Button type=\"primary\" icon=\"user-add\" style={{marginBottom:'10px'}} onClick={()=>this.openModal(null,'Регистрация')}>\r\n  //               Добавить\r\n  //               </Button> \r\n  //               <div className=\"register-division-form-header\">\r\n  //                 <Title level={4} style={{color:'#fff',textAlign:'center'}}>Список отделов</Title>\r\n  //               </div>\r\n  //               <Table \r\n  //                 bordered={true} \r\n  //                 columns={columns} \r\n  //                 dataSource={this.props.admin.divisionTableData} \r\n  //                 size=\"medium\" \r\n  //                 pagination={{ pageSize: 5 }}\r\n  //                 loading={this.props.admin.divisionTableLoadingStatus}\r\n  //                 rowKey=\"_id\" \r\n  //               />;\r\n  //               <Modal\r\n  //                 visible={this.props.admin.DivisionmodalOpened}\r\n  //                 title={false}\r\n  //                 onOk={this.handleOk}\r\n  //                 onCancel={this.closeModal}\r\n  //                 style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\r\n  //                 width=\"40%\"\r\n  //                 destroyOnClose={true}\r\n  //                 footer={[\r\n                    \r\n  //                 ]}\r\n  //               >\r\n  //                 <NewDivisionForm />\r\n  //               </Modal>\r\n  //             </div>\r\n  //         )\r\n  //     }\r\n  // }\r\n  \r\n  // const mapStateToProps = state => ({\r\n  //     admin : state.admin\r\n  // });\r\n  \r\n  // export default connect(mapStateToProps,{\r\n  //     ChangeDivisionSearchText,\r\n  //     ChangeDivisionTableData,\r\n  //     ChangeDivisionModalState,\r\n  //     ChangeCompanyTableData,\r\n  //     ChangeSelectedCompany,\r\n  // })(AllDivision);"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,MAAvB,EAA+BC,UAA/B,EAA2CC,OAA3C,EAAoDC,IAApD,EAA0DC,KAA1D,EAAiEC,UAAjE,QAAmF,MAAnF;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AAEA,SACIC,wBADJ,EAEIC,uBAFJ,EAGIC,wBAHJ,QAIO,gCAJP;AAKA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,SAAQC,UAAR,QAAyB,6BAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAGA,MAAMC,IAAN,SAAmBrB,SAAnB,CAA6B;EACzBsB,WAAW,CAACC,KAAD,EAAO;IAChB,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAW;MACTC,oBAAoB,EAAG,IADd;MAETC,OAAO,EAAG,IAFD;MAGTC,MAAM,EAAG,IAHA;MAITC,gBAAgB,EAAC;IAJR,CAAX;EAMD;;EAEDC,iBAAiB,GAAE;IACjB,KAAKN,KAAL,CAAWT,uBAAX,CAAmC,KAAKS,KAAL,CAAWO,EAA9C;EAED;;EAGDC,MAAM,GAAG;IACH,oBAEQ,oBAAC,KAAD;MAAO,OAAO,EAAE,KAAKR,KAAL,CAAWS,OAAX,CAAmBC,iBAAnC;MAAA;QAAA;QAAA;MAAA;MAAA;IAAA,EAFR;EAMH;;AAxBsB;;AA2B3B,MAAMC,eAAe,GAAGV,KAAK,KAAK;EAC9BW,OAAO,EAAGX,KAAK,CAACW,OADc;EAE9BH,OAAO,EAAGR,KAAK,CAACQ;AAFc,CAAL,CAA7B;;AAKA,eAAe7B,OAAO,CAAC+B,eAAD,EAAiB;EACnCrB,wBADmC;EAEnCC,uBAFmC;EAGnCC;AAHmC,CAAjB,CAAP,CAIZM,IAJY,CAAf,C,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}