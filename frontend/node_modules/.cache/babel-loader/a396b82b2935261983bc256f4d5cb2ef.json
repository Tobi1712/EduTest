{"ast":null,"code":"import _slicedToArray from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\admin\\\\ForCustomers\\\\test.js\";\n// import React, { Component } from 'react';\n// import { Table, Input, Button, Icon, Typography,Popconfirm,Divider, Modal, Select, Row, Col  } from 'antd';\n// import Highlighter from 'react-highlight-words';\n// import { connect } from 'react-redux';\n// import { \n//   ChangeQuestionModalState,\n//   ChangeQuestionTableData,\n//   ChangeQuestionSearchText,\n// } from '../../../actions/trainerAction';\n// // import './allquestion.css'\n// import Alert from '../../../components/common/alert';\n// import {SecurePost} from '../../../services/axiosCall';\n// import apis from '../../../services/Apis';\n// class Test extends Component {\n//   constructor(props){\n//     super(props);\n//     this.state={\n//     }\n//   }\n// //   OpendetailsModal = (id)=>{\n// //     this.setState((previousState,previousProps)=>{\n// //       return{\n// //         questiondetailsId:id,\n// //         questiondetailsModelVisible:true\n// //       }\n// //     })\n// //   }\n// //   ClosedetailsModal = ()=>{\n// //     this.setState((previousState,previousProps)=>{\n// //       return{\n// //         questiondetailsId:null,\n// //         questiondetailsModelVisible:false\n// //       }\n// //     })\n// //   }\n//   componentDidMount(){\n//     this.props.ChangeQuestionTableData(this.props.id);\n//   }\n//     render() {\n//         return (\n//             <div className=\"admin-table-container\">\n//               <div className=\"register-trainer-form-header\">\n//                 <Title level={4} style={{color:'#fff',textAlign:'center'}}>Вопросы</Title>\n//               </div>\n//               <Table \n//                 bordered={true} \n//                 columns={columns} \n//                 dataSource={this.props.trainer.QuestionTableData} \n//                 size=\"medium\" \n//                 pagination={{ pageSize: 5 }}\n//                 loading={this.props.trainer.QuestionTableLoading}\n//                 rowKey=\"_id\" \n//               />\n//             </div>\n//         )\n//     }\n// }\n// const mapStateToProps = state => ({\n//     trainer : state.trainer,\n// });\n// export default connect(mapStateToProps,{\n//   ChangeQuestionModalState,\n//   ChangeQuestionTableData,\n//   ChangeQuestionSearchText,\n// })(Test);\nimport React, { useState } from \"react\";\nexport default function Test() {\n  const questions = [{\n    questionText: \"What is the capital of France?\",\n    answerOptions: [{\n      answerText: \"New York\",\n      isCorrect: false\n    }, {\n      answerText: \"London\",\n      isCorrect: false\n    }, {\n      answerText: \"Paris\",\n      isCorrect: true\n    }, {\n      answerText: \"Dublin\",\n      isCorrect: false\n    }]\n  }, {\n    questionText: \"Who is CEO of Tesla?\",\n    answerOptions: [{\n      answerText: \"Jeff Bezos\",\n      isCorrect: false\n    }, {\n      answerText: \"Elon Musk\",\n      isCorrect: true\n    }, {\n      answerText: \"Bill Gates\",\n      isCorrect: false\n    }, {\n      answerText: \"Tony Stark\",\n      isCorrect: false\n    }]\n  }, {\n    questionText: \"The iPhone was created by which company?\",\n    answerOptions: [{\n      answerText: \"Apple\",\n      isCorrect: true\n    }, {\n      answerText: \"Intel\",\n      isCorrect: false\n    }, {\n      answerText: \"Amazon\",\n      isCorrect: false\n    }, {\n      answerText: \"Microsoft\",\n      isCorrect: false\n    }]\n  }, {\n    questionText: \"How many Harry Potter books are there?\",\n    answerOptions: [{\n      answerText: \"1\",\n      isCorrect: false\n    }, {\n      answerText: \"4\",\n      isCorrect: false\n    }, {\n      answerText: \"6\",\n      isCorrect: false\n    }, {\n      answerText: \"7\",\n      isCorrect: true\n    }]\n  }];\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentQuestion = _useState2[0],\n        setCurrentQuestion = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showScore = _useState4[0],\n        setShowScore = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        score = _useState6[0],\n        setScore = _useState6[1];\n\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, showScore ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"score-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"You scored \", score, \" out of \", questions.length) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Question \", currentQuestion + 1), \"/\", questions.length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, questions[currentQuestion].questionText)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleAnswerOptionClick(answerOption.isCorrect),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, answerOption.answerText))))));\n}","map":{"version":3,"names":["React","useState","Test","questions","questionText","answerOptions","answerText","isCorrect","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","handleAnswerOptionClick","nextQuestion","length","map","answerOption"],"sources":["C:/React_project/EduTest/frontend/src/components/admin/ForCustomers/test.js"],"sourcesContent":["// import React, { Component } from 'react';\r\n// import { Table, Input, Button, Icon, Typography,Popconfirm,Divider, Modal, Select, Row, Col  } from 'antd';\r\n// import Highlighter from 'react-highlight-words';\r\n// import { connect } from 'react-redux';\r\n// import { \r\n//   ChangeQuestionModalState,\r\n//   ChangeQuestionTableData,\r\n//   ChangeQuestionSearchText,\r\n// } from '../../../actions/trainerAction';\r\n// // import './allquestion.css'\r\n// import Alert from '../../../components/common/alert';\r\n// import {SecurePost} from '../../../services/axiosCall';\r\n// import apis from '../../../services/Apis';\r\n\r\n\r\n\r\n\r\n// class Test extends Component {\r\n//   constructor(props){\r\n//     super(props);\r\n\r\n//     this.state={\r\n\r\n//     }\r\n//   }\r\n// //   OpendetailsModal = (id)=>{\r\n// //     this.setState((previousState,previousProps)=>{\r\n// //       return{\r\n// //         questiondetailsId:id,\r\n// //         questiondetailsModelVisible:true\r\n// //       }\r\n// //     })\r\n// //   }\r\n// //   ClosedetailsModal = ()=>{\r\n// //     this.setState((previousState,previousProps)=>{\r\n// //       return{\r\n// //         questiondetailsId:null,\r\n// //         questiondetailsModelVisible:false\r\n// //       }\r\n// //     })\r\n// //   }\r\n\r\n//   componentDidMount(){\r\n//     this.props.ChangeQuestionTableData(this.props.id);\r\n//   }\r\n\r\n//     render() {\r\n      \r\n//         return (\r\n//             <div className=\"admin-table-container\">\r\n//               <div className=\"register-trainer-form-header\">\r\n//                 <Title level={4} style={{color:'#fff',textAlign:'center'}}>Вопросы</Title>\r\n//               </div>\r\n//               <Table \r\n//                 bordered={true} \r\n//                 columns={columns} \r\n//                 dataSource={this.props.trainer.QuestionTableData} \r\n//                 size=\"medium\" \r\n//                 pagination={{ pageSize: 5 }}\r\n//                 loading={this.props.trainer.QuestionTableLoading}\r\n//                 rowKey=\"_id\" \r\n//               />\r\n\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// const mapStateToProps = state => ({\r\n//     trainer : state.trainer,\r\n// });\r\n\r\n// export default connect(mapStateToProps,{\r\n//   ChangeQuestionModalState,\r\n//   ChangeQuestionTableData,\r\n//   ChangeQuestionSearchText,\r\n// })(Test);\r\n\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function Test() {\r\n  const questions = [\r\n    {\r\n      questionText: \"What is the capital of France?\",\r\n      answerOptions: [\r\n        { answerText: \"New York\", isCorrect: false },\r\n        { answerText: \"London\", isCorrect: false },\r\n        { answerText: \"Paris\", isCorrect: true },\r\n        { answerText: \"Dublin\", isCorrect: false }\r\n      ]\r\n    },\r\n    {\r\n      questionText: \"Who is CEO of Tesla?\",\r\n      answerOptions: [\r\n        { answerText: \"Jeff Bezos\", isCorrect: false },\r\n        { answerText: \"Elon Musk\", isCorrect: true },\r\n        { answerText: \"Bill Gates\", isCorrect: false },\r\n        { answerText: \"Tony Stark\", isCorrect: false }\r\n      ]\r\n    },\r\n    {\r\n      questionText: \"The iPhone was created by which company?\",\r\n      answerOptions: [\r\n        { answerText: \"Apple\", isCorrect: true },\r\n        { answerText: \"Intel\", isCorrect: false },\r\n        { answerText: \"Amazon\", isCorrect: false },\r\n        { answerText: \"Microsoft\", isCorrect: false }\r\n      ]\r\n    },\r\n    {\r\n      questionText: \"How many Harry Potter books are there?\",\r\n      answerOptions: [\r\n        { answerText: \"1\", isCorrect: false },\r\n        { answerText: \"4\", isCorrect: false },\r\n        { answerText: \"6\", isCorrect: false },\r\n        { answerText: \"7\", isCorrect: true }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [showScore, setShowScore] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n\r\n  const handleAnswerOptionClick = (isCorrect) => {\r\n    if (isCorrect) {\r\n      setScore(score + 1);\r\n    }\r\n\r\n    const nextQuestion = currentQuestion + 1;\r\n    if (nextQuestion < questions.length) {\r\n      setCurrentQuestion(nextQuestion);\r\n    } else {\r\n      setShowScore(true);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div></div>\r\n      <div className=\"app\">\r\n        {showScore ? (\r\n          <div className=\"score-section\">\r\n            You scored {score} out of {questions.length}\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className=\"question-section\">\r\n              <div className=\"question-count\">\r\n                <span>Question {currentQuestion + 1}</span>/{questions.length}\r\n              </div>\r\n              <div className=\"question-text\">\r\n                {questions[currentQuestion].questionText}\r\n              </div>\r\n            </div>\r\n            <div className=\"answer-section\">\r\n              {questions[currentQuestion].answerOptions.map((answerOption) => (\r\n                <button\r\n                  onClick={() =>\r\n                    handleAnswerOptionClick(answerOption.isCorrect)\r\n                  }\r\n                >\r\n                  {answerOption.answerText}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}