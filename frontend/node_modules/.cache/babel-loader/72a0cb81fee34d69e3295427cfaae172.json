{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport { css as _css } from \"styled-components\";\nvar _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\customer\\\\Testing\\\\test.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n          left: 0.5rem;\\n        \"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n          right: 0.5rem;\\n        \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component, useEffect } from 'react';\nimport { connect } from 'react-redux'; // import { Table, Input,  Typography, Divider, Icon, Modal, Popconfirm } from 'antd';\n// import Highlighter from 'react-highlight-words';\n\nimport { ChangeQuestionSearchText, ChangeQuestionTableData, ChangeQuestionModalState } from '../../../actions/trainerAction';\nimport { ChangeHistorySearchText, ChangeHistoryTableData, ChangeHistoryModalState } from '../../../actions/chapterAction';\nimport Alert from '../../../components/common/alert';\nimport { SecureGet, SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis'; // import Test2 from './test2';\n// import Test3 from './test3';\n\nimport styled from \"styled-components\"; // import Carousel from \"react-multi-carousel\";\n\nimport \"react-multi-carousel/lib/styles.css\";\nimport classnames from 'classnames';\nimport Counter from './Counter';\nconst Container = styled.div.withConfig({\n  displayName: \"test__Container\",\n  componentId: \"sc-13myauf-0\"\n})([\"display:flex;justify-content:center;align-items:center;min-height:80vh;width:100%;\"]);\nconst ScreenQuiz = styled.div.withConfig({\n  displayName: \"test__ScreenQuiz\",\n  componentId: \"sc-13myauf-1\"\n})([\"display:flex;justify-content:\", \";align-items:center;flex-direction:column;max-width:1200px;padding:\", \";width:100%;height:80vh;background:#fff;border-radius:5px;box-shadow:0px 5px 40px -20px #000;\"], props => props.screen ? \"space-between\" : \"center\", props => props.screen ? \"5rem\" : \".5rem\");\nconst Title = styled.h1.withConfig({\n  displayName: \"test__Title\",\n  componentId: \"sc-13myauf-2\"\n})([\"font-size:2.5rem;margin-bottom:0.5rem;text-align:center;max-width:90%;\"]);\nconst Paragraph = styled.p.withConfig({\n  displayName: \"test__Paragraph\",\n  componentId: \"sc-13myauf-3\"\n})([\"font-size:1.5rem;\"]);\nconst Button = styled.button.withConfig({\n  displayName: \"test__Button\",\n  componentId: \"sc-13myauf-4\"\n})([\"font-size:1.2rem;font-weight:bold;width:40%;height:3rem;border:none;border-radius:5px;box-shadow:0px 3px 3px 0px #666;\"]);\nconst ButtonScr = styled.button.withConfig({\n  displayName: \"test__ButtonScr\",\n  componentId: \"sc-13myauf-5\"\n})([\"font-size:2rem;z-index:10;position:fixed;top:50%;\", \"\"], props => props.right ? _css(_templateObject()) : _css(_templateObject2()));\nconst ContainerLabel = styled.div.withConfig({\n  displayName: \"test__ContainerLabel\",\n  componentId: \"sc-13myauf-6\"\n})([\"display:flex;align-items:flex-start;flex-direction:column;margin:0 auto 0.5rem auto;\"]);\nconst Label = styled.label.withConfig({\n  displayName: \"test__Label\",\n  componentId: \"sc-13myauf-7\"\n})([\"display:flex;justify-content:center;align-items:center;\"]);\nconst Radio = styled.input.attrs({\n  type: 'checkbox'\n}).withConfig({\n  displayName: \"test__Radio\",\n  componentId: \"sc-13myauf-8\"\n})([\"display:flex;justify-content:center;align-items:center;width:15px;height:15px;border-radius:50%;border:7.5px solid black;margin:0 0.5rem 0 0;background:\", \";\"], props => props.clickedLabel ? \"#7159c1\" : \"#fff\"); // const IntoRadio = styled.div`\n//   width: 5px;\n//   height: 5px;\n//   border-radius: 3px;\n//   background: #fff;\n// `;\n\nconst Error = styled.div.withConfig({\n  displayName: \"test__Error\",\n  componentId: \"sc-13myauf-9\"\n})([\"top:22rem;color:red;position:absolute;font-weight:bold;\"]);\n\nclass Test extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNextClick = c => {\n      console.log(\"handleNextClick\", c);\n      const _this$state = this.state,\n            count = _this$state.count,\n            questions = _this$state.questions,\n            clickedLabel = _this$state.clickedLabel,\n            answer = _this$state.answer; // console.log(\"Ques\", questions);\n      // var var1 = questions[c].question;\n      // var1 = var1+'fg';\n      // console.log(var1);\n      // questions[c].question=var1;\n\n      this.setState({\n        // questions:questions,\n        count: count + 1,\n        checked: false\n      });\n    };\n\n    this.handlePrevClick = () => {\n      console.log(\"handlePrevClick\");\n      const _this$state2 = this.state,\n            count = _this$state2.count,\n            questions = _this$state2.questions,\n            clickedLabel = _this$state2.clickedLabel,\n            answer = _this$state2.answer;\n\n      if (questions.length >= count && count > 0) {\n        this.setState({\n          count: count - 1,\n          checked: false\n        });\n      }\n    };\n\n    this.handleClick = c => {\n      console.log(\"handleClick\", c);\n      const _this$state3 = this.state,\n            count = _this$state3.count,\n            questions = _this$state3.questions,\n            clickedLabel = _this$state3.clickedLabel,\n            answer = _this$state3.answer,\n            checked = _this$state3.checked,\n            quesid = _this$state3.quesid,\n            chans = _this$state3.chans;\n      console.log(\"Ques\", questions); // var var1 = questions[c].question;\n      // var1 = var1+'fg';\n      // console.log(var1);\n\n      questions[c].question = questions[c].question + 'fg';\n\n      if (questions.length >= count && clickedLabel.answerText) {\n        this.setState({\n          questions: questions,\n          count: c + 1,\n          clickedLabel: {},\n          answer: clickedLabel.correctAnswer ? answer + 1 : answer,\n          error: false,\n          checked: false\n        });\n      }\n    };\n\n    this.handleEndClick = c => {\n      console.log(\"handleEndClick\", c);\n      const _this$state4 = this.state,\n            count = _this$state4.count,\n            questions = _this$state4.questions,\n            clickedLabel = _this$state4.clickedLabel,\n            answer = _this$state4.answer,\n            checked = _this$state4.checked,\n            quesid = _this$state4.quesid,\n            chans = _this$state4.chans;\n\n      if (questions.length >= count && clickedLabel.answerText) {\n        this.setState({\n          count: count + 1\n        });\n      }\n\n      this.renderResult();\n    };\n\n    this.renderInitial = () => {\n      const _this$state5 = this.state,\n            second = _this$state5.second,\n            count = _this$state5.count,\n            questions = _this$state5.questions;\n      console.log(\"renderInitial\", questions);\n      this.setState({\n        screen: false,\n        count: 1\n      });\n      SecurePost({\n        url: \"\".concat(apis.CREATE_HISTORY),\n        data: {\n          chapterid: this.props.chid,\n          materialid: this.props.id,\n          startDate: Date().toLocaleString(),\n          complationDate: Date().toLocaleString() + 3,\n          startTest: true,\n          endTest: false,\n          result: count\n        }\n      }).then(response => {\n        if (response.data.success) {\n          this.props.ChangeHistoryModalState(false, null, 'Save');\n          Alert('success', 'Успешно', response.data.message);\n        } else {\n          this.props.ChangeHistoryModalState(false, null, 'Save');\n          return Alert('warning', 'Предупреждение!', response.data.message);\n        }\n      }).catch(error => {\n        this.props.ChangeHistoryModalState(false, null, 'Save');\n        return Alert('error', 'Ошибка!', 'Ошибка сервера');\n      });\n      SecurePost({\n        url: \"\".concat(apis.CREATE_ANSWERS),\n        data: {\n          materialId: this.props.id,\n          testid: this.props.chapter.historyTableData._id,\n          chosenOption: questions\n        }\n      });\n    };\n\n    this.renderScreenInitial = () => {\n      console.log(\"renderScreenInitial\");\n      return /*#__PURE__*/React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(ScreenQuiz, {\n        screen: this.state.screen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, \"\\u0422\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: this.renderInitial,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\")));\n    };\n\n    this.handleOptions = (answerOptions, c) => {\n      console.log(\"handleOptions:\", answerOptions, c);\n      const _this$state6 = this.state,\n            clickedLabel = _this$state6.clickedLabel,\n            questions = _this$state6.questions,\n            count = _this$state6.count,\n            checked = _this$state6.checked,\n            t = _this$state6.t;\n      console.log('click:', clickedLabel);\n      console.log('answer1:', answerOptions);\n      return answerOptions.map((a, i) => {\n        return /*#__PURE__*/React.createElement(Label, {\n          key: i,\n          onClick: () => {\n            // console.log('Onclick c:', c);\n            //  questions[c].answerOptions.answerText=questions[c].answerOptions[2].answerText; \n            this.setState({\n              questions: questions,\n              clickedLabel: a,\n              error: false\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324\n          },\n          __self: this\n        }, questions[c].isOneTrueAnswer == false ? /*#__PURE__*/React.createElement(Radio // clickedLabel={clickedLabel.answerText===a.UserAnswer} \n        , {\n          checked: a.UserAnswer // id={'r'c,'s', i}\n          ,\n          onChange: e => this.handleChange(e, answerOptions, c, i),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340\n          },\n          __self: this\n        }) : /*#__PURE__*/React.createElement(Radio, {\n          checked: a.UserAnswer,\n          onChange: e => this.handleChange2(e, answerOptions, c, i),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347\n          },\n          __self: this\n        }), /*#__PURE__*/React.createElement(Paragraph, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352\n          },\n          __self: this\n        }, a.answerText));\n      });\n    };\n\n    this.handleChange = (e, answerOptions, c, i) => {\n      console.log(\"handleChange:\", e.target, answerOptions, c, i);\n      const _this$state7 = this.state,\n            checked = _this$state7.checked,\n            questions = _this$state7.questions,\n            clickedLabel = _this$state7.clickedLabel; // return answerOptions.map((a, i) => {\n      // console.log(\"Onclick\", c);\n      // console.log(\"I\", i);\n\n      questions[c].answerOptions[i].UserAnswer = true;\n      this.setState({\n        checked: false,\n        questions: questions // clickedLabel: \n\n      }); // })\n      // console.log('check', e.target.checked);\n      // console.log('I',i)\n    };\n\n    this.handleChange2 = (e, answerOptions, c, i) => {\n      console.log(\"handleChange:\", e.target.checked, answerOptions, c, i);\n      const _this$state8 = this.state,\n            checked = _this$state8.checked,\n            questions = _this$state8.questions,\n            clickedLabel = _this$state8.clickedLabel;\n      questions[c].answerOptions[i].UserAnswer = true;\n\n      if (questions[c].answerOptions[i].UserAnswer == true) {\n        answerOptions.map((d, j) => {\n          if (i != j) {\n            questions[c].answerOptions[j].UserAnswer = false;\n          }\n        });\n      } // e.target.checked==true ? questions[c].answerOptions[i].UserAnswer=true : questions[c].answerOptions[i-1].UserAnswer=false;\n      // questions[c].answerOptions[i].UserAnswer=true;\n      // questions[c].answerOptions.UserAnswer=false;\n      // e.target.checked = false;\n      // questions[c].answerOptions[i].UserAnswer\n\n\n      this.setState({\n        questions: questions\n      });\n    };\n\n    this.renderQuestions = () => {\n      console.log(\"renderQuestions\");\n      const _this$state9 = this.state,\n            count = _this$state9.count,\n            questions = _this$state9.questions,\n            error = _this$state9.error,\n            second = _this$state9.second,\n            time = _this$state9.time;\n      const NewQuestions = Array.from(questions);\n      const removeQuestions = NewQuestions.slice(count - 1, count);\n      return removeQuestions.map((q, i) => /*#__PURE__*/React.createElement(Container, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(ScreenQuiz, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Counter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }), /*#__PURE__*/React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      }, count, \"/\", questions.length), /*#__PURE__*/React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      }, q.question), /*#__PURE__*/React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459\n        },\n        __self: this\n      }, count), /*#__PURE__*/React.createElement(ContainerLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }, this.handleOptions(q.answerOptions, count - 1)), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.handleClick(count - 1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), count === questions.length ? /*#__PURE__*/React.createElement(Button, {\n        onClick: this.handleEndClick,\n        style: {\n          marginTop: '30px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, \"\\u0417\\u0430\\u043A\\u043E\\u043D\\u0447\\u0438\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\") : null, /*#__PURE__*/React.createElement(ButtonScr, {\n        onClick: () => this.handleNextClick(count),\n        right: true,\n        disabled: count === questions.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }, \"\\u3009\"), /*#__PURE__*/React.createElement(ButtonScr, {\n        onClick: this.handlePrevClick,\n        left: true,\n        disabled: count === 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, \"\\u3008\"), console.log('Count:', count))));\n    };\n\n    this.renderResult = () => {\n      console.log(\"renderResult\");\n      const _this$state10 = this.state,\n            answer = _this$state10.answer,\n            questions = _this$state10.questions,\n            screenFinish = _this$state10.screenFinish;\n      return /*#__PURE__*/React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(ScreenQuiz, {\n        screen: screenFinish,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      }, \"\\u0412\\u044B \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u043E \\u043E\\u0442\\u0432\\u0435\\u0442\\u0438\\u043B\\u0438 \", answer, \" \\u0438\\u0437 \", questions.length, \" \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u043E\\u0432\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.setState({\n          count: 0,\n          screenFinish: false,\n          screen: true,\n          answer: 0\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      }, \"\\u0422\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E\")));\n    };\n\n    this.state = {\n      questions: [],\n      screen: true,\n      count: 0,\n      clickedLabel: {},\n      answerLabel: {},\n      answer: 0,\n      error: false,\n      screenFinish: false,\n      second: 60,\n      time: {},\n      checked: false,\n      temp: [],\n      details: [],\n      t: 0,\n      optionDetails: [{\n        quesid: null,\n        chans: null,\n        isAnswer: false\n      }]\n    };\n  }\n\n  componentDidMount() {\n    const details = this.state.details;\n    var ques = [];\n    var ID = this.props.id;\n    SecureGet({\n      url: \"\".concat(apis.GET_ALL_QUESTIONS, \"/\").concat(ID)\n    }).then(response => {\n      console.log('responsef', response.data.data);\n\n      if (response.data.success) {\n        this.setState({\n          details: response.data.data\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n    console.log('dddddddddddddd', details); // this.props.ChangeQuestionTableData(this.props.id);\n\n    this.props.ChangeHistoryTableData(this.props.id); // console.log('CHID',this.props.chid);\n\n    var questions = [];\n    details.map((d, i) => {\n      questions[i] = {\n        question: d.body,\n        isOneTrueAnswer: d.trueans1 + d.trueans2 + d.trueans3 + d.trueans4 + d.trueans5 == 1 ? true : false,\n        // questionImage : d.quesimg,\n        answerOptions: [{\n          answerText: d.answer1,\n          UserAnswer: d.userAnswer1,\n          correctAnswer: d.trueans1\n        }, {\n          answerText: d.answer2,\n          UserAnswer: d.userAnswer2,\n          correctAnswer: d.trueans2\n        }, {\n          answerText: d.answer3,\n          UserAnswer: d.userAnswer3,\n          correctAnswer: d.trueans3\n        }, {\n          answerText: d.answer4,\n          UserAnswer: d.userAnswer4,\n          correctAnswer: d.trueans4\n        }, {\n          answerText: d.answer5,\n          UserAnswer: d.userAnswer5,\n          correctAnswer: d.trueans5\n        }]\n      };\n    });\n    console.log('Ques', questions);\n    this.setState({\n      questions: questions\n    });\n  }\n\n  render() {\n    const _this$state11 = this.state,\n          screenFinish = _this$state11.screenFinish,\n          questions = _this$state11.questions,\n          screen = _this$state11.screen;\n    return !screenFinish && questions ? /*#__PURE__*/React.createElement(React.Fragment, null, screen ? this.renderScreenInitial() : this.renderQuestions()) : this.renderResult();\n  } // render() {\n  //   console.log('qas',this.props.trainer.QuestionTableData);\n  //   console.log('qaz',this.state);\n  //   return (\n  //     <div>\n  //       <h1>Тестирование номер 1</h1>\n  //       {this.state.isStarted ? null : (\n  //         <div id=\"button\">\n  //           <Button variant=\"contained\" color=\"secondary\" onClick={()=>this.handleClick}>\n  //             Начать тест\n  //           </Button>\n  //         </div>\n  //       )}\n  //     {this.state.isStarted ? (\n  //     // <Test2  details={this.props.trainer.QuestionTableData}/>\n  //     ) : null}\n  //     </div>\n  //   )\n  // }\n\n\n}\n\nconst mapStateToProps = state => ({\n  chapter: state.chapter,\n  trainer: state.trainer\n});\n\nexport default connect(mapStateToProps, {\n  ChangeQuestionSearchText,\n  ChangeQuestionTableData,\n  ChangeQuestionModalState,\n  ChangeHistorySearchText,\n  ChangeHistoryTableData,\n  ChangeHistoryModalState\n})(Test);","map":{"version":3,"names":["React","Component","useEffect","connect","ChangeQuestionSearchText","ChangeQuestionTableData","ChangeQuestionModalState","ChangeHistorySearchText","ChangeHistoryTableData","ChangeHistoryModalState","Alert","SecureGet","SecurePost","apis","styled","classnames","Counter","Container","div","ScreenQuiz","props","screen","Title","h1","Paragraph","p","Button","button","ButtonScr","right","css","ContainerLabel","Label","label","Radio","input","attrs","type","clickedLabel","Error","Test","constructor","handleNextClick","c","console","log","state","count","questions","answer","setState","checked","handlePrevClick","length","handleClick","quesid","chans","question","answerText","correctAnswer","error","handleEndClick","renderResult","renderInitial","second","url","CREATE_HISTORY","data","chapterid","chid","materialid","id","startDate","Date","toLocaleString","complationDate","startTest","endTest","result","then","response","success","message","catch","CREATE_ANSWERS","materialId","testid","chapter","historyTableData","_id","chosenOption","renderScreenInitial","handleOptions","answerOptions","t","map","a","i","isOneTrueAnswer","UserAnswer","e","handleChange","handleChange2","target","d","j","renderQuestions","time","NewQuestions","Array","from","removeQuestions","slice","q","marginTop","screenFinish","answerLabel","temp","details","optionDetails","isAnswer","componentDidMount","ques","ID","GET_ALL_QUESTIONS","body","trueans1","trueans2","trueans3","trueans4","trueans5","answer1","userAnswer1","answer2","userAnswer2","answer3","userAnswer3","answer4","userAnswer4","answer5","userAnswer5","render","mapStateToProps","trainer"],"sources":["C:/React_project/EduTest/frontend/src/components/customer/Testing/test.js"],"sourcesContent":["import React, { Component, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\n// import { Table, Input,  Typography, Divider, Icon, Modal, Popconfirm } from 'antd';\r\n// import Highlighter from 'react-highlight-words';\r\nimport  { css } from 'styled-components/macro'\r\nimport { \r\n    ChangeQuestionSearchText,\r\n    ChangeQuestionTableData,\r\n    ChangeQuestionModalState,\r\n} from '../../../actions/trainerAction';\r\nimport { \r\n  ChangeHistorySearchText,\r\n  ChangeHistoryTableData,\r\n  ChangeHistoryModalState,\r\n} from '../../../actions/chapterAction';\r\n\r\nimport Alert from '../../../components/common/alert';\r\nimport {SecureGet,SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\n// import Test2 from './test2';\r\n// import Test3 from './test3';\r\nimport styled from \"styled-components\";\r\n// import Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport classnames from 'classnames';\r\nimport Counter from './Counter';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 80vh;\r\n  width: 100%;\r\n  /*background: #7159c1;*/\r\n`;\r\n\r\nconst ScreenQuiz = styled.div`\r\n  display: flex;\r\n  justify-content: ${props => (props.screen ? \"space-between\" : \"center\")};\r\n  align-items: center;\r\n  flex-direction: column;\r\n  max-width: 1200px;\r\n  padding: ${props => (props.screen ? \"5rem\" : \".5rem\")};\r\n  width: 100%;\r\n  height: 80vh;\r\n  background: #fff;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 5px 40px -20px #000;\r\n\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 2.5rem;\r\n  // color: #7159c1;\r\n  margin-bottom: 0.5rem;\r\n  text-align: center;\r\n  max-width: 90%;\r\n`;\r\n\r\nconst Paragraph = styled.p`\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  width: 40%;\r\n  height: 3rem;\r\n  // color: #fff;\r\n  border: none;\r\n  // background: #7159c1;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 3px 3px 0px #666;\r\n`;\r\n\r\nconst ButtonScr = styled.button`\r\n  font-size: 2rem;\r\n  z-index: 10;\r\n  position: fixed;\r\n  top: 50%;\r\n  ${(props) =>\r\n    props.right\r\n      ? css`\r\n          right: 0.5rem;\r\n        `\r\n      : css`\r\n          left: 0.5rem;\r\n        `}\r\n`\r\n\r\nconst ContainerLabel = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  margin: 0 auto 0.5rem auto;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Radio = styled.input.attrs({ type: 'checkbox' })`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 15px;\r\n  height: 15px;\r\n  border-radius: 50%;\r\n  border: 7.5px solid black;\r\n  margin: 0 0.5rem 0 0;\r\n  background: ${props => (props.clickedLabel ? \"#7159c1\" : \"#fff\")};\r\n`;\r\n\r\n// const IntoRadio = styled.div`\r\n//   width: 5px;\r\n//   height: 5px;\r\n//   border-radius: 3px;\r\n//   background: #fff;\r\n// `;\r\n\r\nconst Error = styled.div`\r\n  top: 22rem;\r\n  color: red;\r\n  position: absolute;\r\n  font-weight: bold;\r\n`;\r\n\r\nclass Test extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state={\r\n        questions:[],\r\n        screen: true,\r\n        count: 0,\r\n        clickedLabel: {},\r\n        answerLabel:{},\r\n        answer: 0,\r\n        error:false,\r\n        screenFinish:false,\r\n        second:60,\r\n        time:{},\r\n        checked:false,\r\n        temp:[],\r\n        details:[],\r\n        t:0,\r\n        optionDetails:[{\r\n          quesid: null,\r\n          chans: null,\r\n          isAnswer :false\r\n        }]\r\n      }\r\n    }\r\n  \r\n    componentDidMount(){\r\n      const {details} = this.state;\r\n      var ques = [];\r\n      var ID = this.props.id;\r\n      SecureGet({\r\n            url: `${apis.GET_ALL_QUESTIONS}/${ID}`,\r\n        }).then((response)=>{\r\n          console.log('responsef',response.data.data);\r\n          if(response.data.success){\r\n            this.setState({\r\n                details:response.data.data\r\n            })\r\n              }\r\n            \r\n        }).catch((error)=>{\r\n            console.log(error);\r\n        })\r\n      console.log('dddddddddddddd',details);\r\n      // this.props.ChangeQuestionTableData(this.props.id);\r\n      this.props.ChangeHistoryTableData(this.props.id);\r\n      // console.log('CHID',this.props.chid);\r\n      var questions=[];\r\n      details.map((d,i)=>{\r\n        questions[i]=(\r\n          {\r\n            question : d.body,\r\n            isOneTrueAnswer : (d.trueans1+d.trueans2+d.trueans3+d.trueans4+d.trueans5)==1 ? true : false,\r\n            // questionImage : d.quesimg,\r\n            answerOptions: [\r\n              { answerText: d.answer1, UserAnswer: d.userAnswer1, correctAnswer: d.trueans1 },\r\n              { answerText: d.answer2, UserAnswer: d.userAnswer2, correctAnswer: d.trueans2 },\r\n              { answerText: d.answer3, UserAnswer: d.userAnswer3, correctAnswer: d.trueans3 },\r\n              { answerText: d.answer4, UserAnswer: d.userAnswer4, correctAnswer: d.trueans4 },\r\n              { answerText: d.answer5, UserAnswer: d.userAnswer5, correctAnswer: d.trueans5 }\r\n            ]\r\n          }\r\n        )\r\n      });\r\n      console.log('Ques',questions);\r\n      this.setState({\r\n        questions:questions\r\n      })\r\n      \r\n    }\r\n\r\n    handleNextClick=(c)=>{\r\n      console.log(\"handleNextClick\", c);\r\n      const { count, questions, clickedLabel, answer} = this.state;\r\n      // console.log(\"Ques\", questions);\r\n      // var var1 = questions[c].question;\r\n      // var1 = var1+'fg';\r\n      // console.log(var1);\r\n      // questions[c].question=var1;\r\n        this.setState({\r\n          // questions:questions,\r\n          count: count+1,\r\n          checked:false,\r\n        });\r\n    }\r\n\r\n    handlePrevClick=()=>{\r\n      console.log(\"handlePrevClick\");\r\n      const { count, questions, clickedLabel, answer} = this.state;\r\n      if (questions.length >= count && count>0) {\r\n        this.setState({\r\n          count: count - 1,\r\n          checked:false,\r\n        });\r\n      } \r\n    }\r\n\r\n    handleClick = (c)=> {\r\n      console.log(\"handleClick\", c);\r\n      const { count, questions, clickedLabel, answer, checked, quesid, chans} = this.state;\r\n      console.log(\"Ques\", questions);\r\n      // var var1 = questions[c].question;\r\n      // var1 = var1+'fg';\r\n      // console.log(var1);\r\n      questions[c].question=questions[c].question+'fg';\r\n      if (questions.length >= count && clickedLabel.answerText) {\r\n        this.setState({\r\n          questions:questions,\r\n          count: c+1,\r\n          clickedLabel: {},\r\n        answer: clickedLabel.correctAnswer ? answer + 1 : answer,\r\n        error: false,\r\n          checked:false,\r\n        });\r\n      }\r\n    }\r\n\r\n    handleEndClick = (c)=> {\r\n      console.log(\"handleEndClick\", c);\r\n      const { count, questions, clickedLabel, answer, checked, quesid, chans} = this.state;\r\n      if (questions.length >= count && clickedLabel.answerText) {\r\n        this.setState({\r\n          count: count + 1,\r\n        })\r\n      }\r\n      this.renderResult()\r\n    }\r\n\r\n    renderInitial = () => {\r\n      \r\n      const { second, count,questions } = this.state;\r\n      console.log(\"renderInitial\", questions);\r\n      this.setState({\r\n        screen: false,\r\n        count: 1\r\n      });\r\n\r\n      SecurePost({\r\n        url : `${apis.CREATE_HISTORY}`,\r\n        data : {\r\n            chapterid : this.props.chid,\r\n            materialid : this.props.id,\r\n            startDate : Date().toLocaleString(),\r\n            complationDate : Date().toLocaleString()+3,\r\n            startTest: true,\r\n            endTest: false,\r\n            result: count\r\n          }\r\n        })\r\n        .then((response)=>{\r\n          if(response.data.success){\r\n              this.props.ChangeHistoryModalState(false,null, 'Save'); \r\n              Alert('success','Успешно',response.data.message);\r\n          }\r\n          else{\r\n              this.props.ChangeHistoryModalState(false,null, 'Save');\r\n              return Alert('warning','Предупреждение!',response.data.message);\r\n          }\r\n        })\r\n        .catch((error)=>{\r\n            this.props.ChangeHistoryModalState(false,null, 'Save');\r\n            return Alert('error','Ошибка!','Ошибка сервера');\r\n        })\r\n      \r\n        SecurePost({\r\n          url : `${apis.CREATE_ANSWERS}`,\r\n          data : {\r\n            materialId : this.props.id,\r\n            testid : this.props.chapter.historyTableData._id,\r\n            chosenOption : questions\r\n          }\r\n      })\r\n    };\r\n\r\n    renderScreenInitial = () => {\r\n      console.log(\"renderScreenInitial\");\r\n      return (\r\n        <Container>\r\n          <ScreenQuiz screen={this.state.screen}>\r\n            <Title>Тестирование</Title>\r\n            <Button onClick={this.renderInitial}>Начать тест</Button>\r\n            \r\n          </ScreenQuiz>\r\n        </Container>\r\n      );\r\n    };\r\n  \r\n    handleOptions = (answerOptions,c) => {\r\n      console.log(\"handleOptions:\", answerOptions, c);\r\n      const { clickedLabel,questions, count, checked, t } = this.state;\r\n      console.log('click:',clickedLabel);\r\n      console.log('answer1:',answerOptions);\r\n      return answerOptions.map((a, i) => {\r\n        return (\r\n          <Label\r\n            key={i}\r\n            onClick={() =>{\r\n\r\n              // console.log('Onclick c:', c);\r\n              //  questions[c].answerOptions.answerText=questions[c].answerOptions[2].answerText; \r\n              \r\n              this.setState({\r\n                questions:questions,\r\n                clickedLabel: a,\r\n\r\n                error: false\r\n              })}\r\n            }\r\n          >\r\n            { questions[c].isOneTrueAnswer==false ?\r\n            <Radio \r\n              // clickedLabel={clickedLabel.answerText===a.UserAnswer} \r\n              checked={a.UserAnswer} \r\n              // id={'r'c,'s', i}\r\n              onChange={e => this.handleChange(e,answerOptions, c,i)}\r\n            />\r\n            :\r\n            <Radio  \r\n              checked={a.UserAnswer}\r\n              onChange={e => this.handleChange2(e,answerOptions, c,i)}\r\n            />\r\n            }\r\n            <Paragraph>{a.answerText}</Paragraph>\r\n          </Label>\r\n          \r\n        );\r\n      });\r\n    };\r\n\r\n    handleChange = (e,answerOptions, c, i) => {\r\n      console.log(\"handleChange:\", e.target ,answerOptions, c, i);\r\n      const {checked, questions, clickedLabel} = this.state\r\n      // return answerOptions.map((a, i) => {\r\n        // console.log(\"Onclick\", c);\r\n        // console.log(\"I\", i);\r\n        questions[c].answerOptions[i].UserAnswer=true;\r\n        \r\n        this.setState({\r\n          checked: false,\r\n          questions:questions,\r\n          // clickedLabel: \r\n        });\r\n      // })\r\n\r\n      // console.log('check', e.target.checked);\r\n      // console.log('I',i)\r\n    };\r\n\r\n    handleChange2 = (e,answerOptions, c, i) => {\r\n      console.log(\"handleChange:\", e.target.checked ,answerOptions, c, i);\r\n      const {checked, questions, clickedLabel} = this.state\r\n      questions[c].answerOptions[i].UserAnswer=true;\r\n\r\n      if(questions[c].answerOptions[i].UserAnswer==true){\r\n        answerOptions.map((d,j) =>{\r\n          if(i!=j){\r\n            questions[c].answerOptions[j].UserAnswer=false;\r\n          }\r\n        })\r\n      }\r\n        // e.target.checked==true ? questions[c].answerOptions[i].UserAnswer=true : questions[c].answerOptions[i-1].UserAnswer=false;\r\n        // questions[c].answerOptions[i].UserAnswer=true;\r\n        // questions[c].answerOptions.UserAnswer=false;\r\n        // e.target.checked = false;\r\n        // questions[c].answerOptions[i].UserAnswer\r\n        this.setState({\r\n          questions:questions,\r\n        });\r\n    };\r\n\r\n\r\n  //   startTimer = () => {\r\n  //     const countDownTime = Date.now() + 180000;\r\n  //     this.interval = setInterval(() => {\r\n  //         const now = new Date();\r\n  //         const distance = countDownTime - now;\r\n\r\n  //         const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n  //         const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n  //         if (distance < 0) {\r\n  //             clearInterval(this.interval);\r\n  //             this.setState({\r\n  //                 time: {\r\n  //                     minutes: 0,\r\n  //                     seconds: 0\r\n  //                 }\r\n  //             }, () => {\r\n  //                 this.endGame();\r\n  //             });\r\n  //         } else {\r\n  //             this.setState({\r\n  //                 time: {\r\n  //                     minutes,\r\n  //                     seconds,\r\n  //                     distance\r\n  //                 }\r\n  //             });\r\n  //         }\r\n  //     }, 1000);\r\n  // }\r\n\r\n  \r\n  \r\n    renderQuestions = () => {\r\n      console.log(\"renderQuestions\");\r\n      const { count,questions, error, second, time } = this.state;\r\n      const NewQuestions = Array.from(questions);\r\n      const removeQuestions = NewQuestions.slice(count - 1, count);\r\n    \r\n      return removeQuestions.map((q, i) => (\r\n\r\n        <Container key={i}>\r\n          <ScreenQuiz>\r\n            \r\n            {/* <div className=\"timer-container\">\r\n              <p>\r\n                <span className={classnames('right valid', {\r\n                  'warning': time.distance <= 120000,\r\n                  'invalid': time.distance < 30000\r\n                  })} style={{paddingLeft:'10px'}}>\r\n                  {time.minutes}:{time.seconds}\r\n                  <span  className=\"mdi mdi-clock-outline mdi-24px\"></span></span>\r\n              </p>\r\n            </div> */}\r\n            <Counter/>\r\n\r\n            <h3>{count}/{questions.length}</h3>\r\n            <Title>{q.question}</Title>\r\n            <label>{count}</label>\r\n            <ContainerLabel>\r\n              {this.handleOptions(q.answerOptions, count-1)}\r\n            </ContainerLabel>\r\n            <Button onClick={()=>this.handleClick(count-1)}>Сохранить</Button>\r\n            { count===questions.length ?\r\n            <Button onClick={this.handleEndClick} style={{marginTop: '30px'}}>Закончить тест</Button>\r\n              : null\r\n          }\r\n            {/* {error && <Error>Пожалуйста, проверьте варианты.</Error>} */}\r\n            <ButtonScr onClick={()=>this.handleNextClick(count)} right disabled={count === questions.length}>〉</ButtonScr>\r\n            <ButtonScr onClick={this.handlePrevClick} left disabled={count===1}>〈</ButtonScr>\r\n            {console.log('Count:',count)}\r\n          </ScreenQuiz>\r\n        </Container>\r\n\r\n      ));\r\n    };\r\n  \r\n    renderResult = () => {\r\n      console.log(\"renderResult\");\r\n      const { answer,questions, screenFinish } = this.state;\r\n  \r\n      return (\r\n        <Container>\r\n          <ScreenQuiz screen={screenFinish}>\r\n            <Title>Вы правильно ответили {answer} из {questions.length} вопросов</Title>\r\n            <Button\r\n              onClick={() =>\r\n                this.setState({\r\n                  count: 0,\r\n                  screenFinish: false,\r\n                  screen: true,\r\n                  answer: 0\r\n                })\r\n              }\r\n            >\r\n              Тестировать заново\r\n            </Button>\r\n          </ScreenQuiz>\r\n        </Container>\r\n      );\r\n    };\r\n\r\n\r\n    render() {\r\n      const { screenFinish, questions, screen } = this.state;\r\n\r\n\r\n      return !screenFinish && questions ? (\r\n        <>{screen ? this.renderScreenInitial() : this.renderQuestions()}</>\r\n      ) : (\r\n        this.renderResult()\r\n      );\r\n    }\r\n\r\n    // render() {\r\n    //   console.log('qas',this.props.trainer.QuestionTableData);\r\n    //   console.log('qaz',this.state);\r\n    //   return (\r\n    //     <div>\r\n    //       <h1>Тестирование номер 1</h1>\r\n    //       {this.state.isStarted ? null : (\r\n    //         <div id=\"button\">\r\n    //           <Button variant=\"contained\" color=\"secondary\" onClick={()=>this.handleClick}>\r\n    //             Начать тест\r\n    //           </Button>\r\n    //         </div>\r\n    //       )}\r\n        \r\n    //     {this.state.isStarted ? (\r\n    //     // <Test2  details={this.props.trainer.QuestionTableData}/>\r\n    //     ) : null}\r\n    //     </div>\r\n    //   )\r\n    // }\r\n  }\r\n  \r\n  const mapStateToProps = state => ({\r\n      chapter : state.chapter,\r\n      trainer : state.trainer\r\n  });\r\n  \r\n  export default connect(mapStateToProps,{\r\n      ChangeQuestionSearchText,\r\n      ChangeQuestionTableData,\r\n      ChangeQuestionModalState,\r\n      ChangeHistorySearchText,\r\n  ChangeHistoryTableData,\r\n  ChangeHistoryModalState,\r\n  })(Test);\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}