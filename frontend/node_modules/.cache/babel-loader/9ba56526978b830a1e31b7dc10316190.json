{"ast":null,"code":"import _slicedToArray from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport { css as _css } from \"styled-components\";\nvar _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\customer\\\\Testing\\\\test.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n          left: 25rem;\\n        \"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n          right: 25rem;\\n        \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'antd'; // import Highlighter from 'react-highlight-words';\n\nimport { //LoginInfo,\nChangeTestSearchText, ChangeTestTableData, ChangeTestModalState, ChangeAnswersSearchText, ChangeAnswersTableData // ChangeAnswersModalState,\n} from '../../../actions/chapterAction';\nimport Alert from '../../../components/common/alert';\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport TestPage from './testpage';\nimport styled from \"styled-components\";\nimport \"react-multi-carousel/lib/styles.css\"; //import Counter from './Counter';\n\nimport LocalizedStrings from 'react-localization';\nlet strings = new LocalizedStrings({\n  ru: {\n    Succes: \"Успешно\",\n    Warning: \"Предупреждение!\",\n    Err: \"Ошибка!\",\n    ErrorServer: \"Ошибка сервера\",\n    Testing: \"Тестирование\",\n    GoTest: \"Начать тест\",\n    ContTest: \"Продолжить тест\"\n  },\n  kz: {\n    Succes: \"Сәтті\",\n    Warning: \"Ескерту!\",\n    Err: \"Қате!\",\n    ErrorServer: \"Сервердің қатесі\",\n    Testing: \"Тестілеу\",\n    GoTest: \"Тесттi бастау\",\n    ContTest: \"Тесттi жалғастыру\"\n  }\n});\nconst Container = styled.div.withConfig({\n  displayName: \"test__Container\",\n  componentId: \"sc-13myauf-0\"\n})([\"display:flex;justify-content:center;align-items:center;min-height:80vh;width:100%;\"]);\nconst ScreenQuiz = styled.div.withConfig({\n  displayName: \"test__ScreenQuiz\",\n  componentId: \"sc-13myauf-1\"\n})([\"display:flex;justify-content:\", \";align-items:center;flex-direction:column;max-width:1200px;padding:\", \";width:100%;height:80vh;background:#fff;border-radius:5px;box-shadow:0px 5px 40px -20px #000;\"], props => props.screen ? \"space-between\" : \"center\", props => props.screen ? \"5rem\" : \".5rem\");\nconst Title = styled.h1.withConfig({\n  displayName: \"test__Title\",\n  componentId: \"sc-13myauf-2\"\n})([\"font-size:2.5rem;margin-bottom:0.5rem;text-align:center;max-width:90%;\"]); // const Paragraph = styled.p`\n//   font-size: 1.5rem;\n// `;\n// const Button = styled.button`\n//   font-size: 1.2rem;\n//   font-weight: bold;\n//   width: 40%;\n//   height: 3rem;\n//   // color: #fff;\n//   border: none;\n//   // background: #7159c1;\n//   border-radius: 5px;\n//   box-shadow: 0px 3px 3px 0px #666;\n//   @-webkit-keyframes pulsate {\n//     0% {transform: scale(0.1, 0.1); opacity: 0.0;}\n//     50% {opacity: 1.0;}\n//     100% {transform: scale(7, 7); opacity: 0.0;}\n// }\n// `;\n\nconst ButtonScr = styled.button.withConfig({\n  displayName: \"test__ButtonScr\",\n  componentId: \"sc-13myauf-3\"\n})([\"font-size:1.4rem;z-index:10;position:fixed;top:15%;\", \"\"], props => props.right ? _css(_templateObject()) : _css(_templateObject2()));\nconst ContainerLabel = styled.div.withConfig({\n  displayName: \"test__ContainerLabel\",\n  componentId: \"sc-13myauf-4\"\n})([\"display:flex;align-items:flex-start;flex-direction:column;margin:0 auto 0.5rem auto;\"]);\nconst Label = styled.label.withConfig({\n  displayName: \"test__Label\",\n  componentId: \"sc-13myauf-5\"\n})([\"display:flex;justify-content:center;align-items:center;\"]);\nconst Radio = styled.input.attrs({\n  type: 'checkbox'\n}).withConfig({\n  displayName: \"test__Radio\",\n  componentId: \"sc-13myauf-6\"\n})([\"display:flex;justify-content:center;align-items:center;width:15px;height:15px;border-radius:50%;border:7.5px solid black;margin:0 0.5rem 0 0;background:\", \";\"], props => props.clickedLabel ? \"#7159c1\" : \"#fff\"); // const IntoRadio = styled.div`\n//   width: 5px;\n//   height: 5px;\n//   border-radius: 3px;\n//   background: #fff;\n// `;\n// const Error = styled.div`\n//   top: 22rem;\n//   color: red;\n//   position: absolute;\n//   font-weight: bold;\n// `;\n\nfunction Test(props) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        screen = _useState4[0],\n        setScreen = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        count = _useState6[0],\n        setCount = _useState6[1];\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        answer = _useState8[0],\n        setAnswer = _useState8[1];\n\n  const _useState9 = useState(this.props.id),\n        _useState10 = _slicedToArray(_useState9, 2),\n        matId = _useState10[0],\n        setMatId = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        disableButton = _useState12[0],\n        setDisableButton = _useState12[1];\n\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        testStarted = _useState14[0],\n        setTestStarted = _useState14[1];\n\n  const _useState15 = useState(false),\n        _useState16 = _slicedToArray(_useState15, 2),\n        testEnded = _useState16[0],\n        setTestEnded = _useState16[1];\n\n  const _useState17 = useState(true),\n        _useState18 = _slicedToArray(_useState17, 2),\n        testDidNotStart = _useState18[0],\n        setTestDidNotStart = _useState18[1];\n\n  useEffect(() => {\n    console.log(\"matId\", this.state.matId);\n    this.props.ChangeTestTableData(this.props.id);\n    this.props.ChangeAnswersTableData(this.props.id);\n  }, []);\n\n  const renderInitial = () => {\n    // console.log(\"renderInitial\")\n    // const { count } = this.state;\n    setScreen(false);\n    setLoading(false);\n    setCount(1);\n    setTestStarted(true);\n    setTestEnded(false);\n    setTestDidNotStart(false); // this.setState({\n    //   screen: false,\n    //   loading: false,\n    //   count: 1,\n    //   testStarted: true,\n    //   testEnded: false,\n    //   testDidNotStart: false,\n    // });\n  };\n\n  const renderScreenInitial = () => {\n    // console.log('THIS:',this.props.chapter)\n    if (this.props.chapter.testTableData === undefined) {\n      console.log(\"1 CREATE_TEST\", this.props.chapter.testId);\n      SecurePost({\n        url: \"\".concat(apis.CREATE_TEST),\n        data: {\n          _id: this.props.chapter.testId,\n          chapterid: this.props.chid,\n          materialid: this.props.id,\n          startDate: Date().toLocaleString(),\n          complationDate: Date(),\n          startTest: false,\n          endTest: false,\n          result: 0\n        }\n      }).then(response => {\n        if (response.data.success) {\n          this.props.ChangeTestModalState(false, null, 'Save');\n          Alert('success', 'Успешно', response.data.message);\n        } else {\n          this.props.ChangeTestModalState(false, null, 'Save');\n          return Alert('warning', 'Предупреждение!', response.data.message);\n        }\n      }).catch(error => {\n        this.props.ChangeTestModalState(false, null, 'Save');\n        return Alert('error', 'Ошибка!', 'Ошибка сервера');\n      });\n    }\n\n    console.log(\"CREATE_ANSWERS\", this.props.chapter.testid);\n    console.log(\"this.props.chapter.testTableData:\", this.props.chapter.testTableData);\n\n    if (this.props.chapter.testTableData !== null || this.props.chapter.testTableData !== undefined || this.props.chapter.testTableData !== 'null' || this.props.chapter.testTableData !== 'undefined') {\n      console.log(\"this.props.chapter.testTableData222:\", this.props.chapter.testTableData);\n      SecurePost({\n        url: \"\".concat(apis.CREATE_ANSWERS),\n        data: {\n          materialId: this.props.id // testid : this.props.chapter.testTableData._id,\n\n        }\n      });\n    }\n\n    if (testStarted == false) {\n      return /*#__PURE__*/React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(ScreenQuiz, {\n        screen: screen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"\\u0422\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: this.renderInitial,\n        style: {\n          fontSize: \"1.2rem\",\n          fontWeight: \"bold\",\n          width: \"40%\",\n          height: \"3rem\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          boxShadow: \"0px 3px 3px 0px #666\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\")));\n    } else if (testStarted == true && endTest == false) {\n      return /*#__PURE__*/React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(ScreenQuiz, {\n        screen: screen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \"\\u0422\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: this.renderInitial,\n        style: {\n          fontSize: \"1.2rem\",\n          fontWeight: \"bold\",\n          width: \"40%\",\n          height: \"3rem\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          boxShadow: \"0px 3px 3px 0px #666\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, \"\\u041F\\u0440\\u043E\\u0434\\u043E\\u043B\\u0436\\u0438\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\")));\n    }\n  }; // var date1= this.props.chapter.testTableData ? this.props.chapter.testTableData.complationDate : null;\n\n\n  return screen ? this.renderScreenInitial() :\n  /*#__PURE__*/\n  // (new Date(date1).getTime() < new Date().getTime() || date1 !== null) ?\n  //   Alert('warning','Тест закончен!', 'fdsfdgf')\n  // :\n  React.createElement(TestPage, {\n    q: this.props.chapter.AnswerTableData,\n    id: this.props.id,\n    count: count,\n    screen: screen,\n    answer: answer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  });\n}\n\nexport default Test;\n/* class Test extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state={\r\n        //questions:[],\r\n        loading:false,\r\n        screen: true,\r\n        count: 0,\r\n        //clickedLabel: [],\r\n        answer: 0,\r\n        //error:false,\r\n        // screenFinish:false,\r\n        //second:60,\r\n       // time:{},\r\n        //checked:false,\r\n        disableButton: false,\r\n        testStarted:false,\r\n        testEnded:false,\r\n        testDidNotStart:true,\r\n        matId : this.props.id,\r\n       // details:[],\r\n      }\r\n    }\r\n  \r\n    componentDidMount(){\r\n      console.log(\"1 - componentDidMount\", this.state.matId)\r\n      this.props.ChangeTestTableData(this.props.id);\r\n      this.props.ChangeAnswersTableData(this.props.id);\r\n    }\r\n\r\n\r\n    renderInitial = () => {\r\n      console.log(\"renderInitial\")\r\n      const { count } = this.state;\r\n\r\n      this.setState({\r\n        screen: false,\r\n        loading: false,\r\n        count: 1,\r\n        testStarted: true,\r\n        testEnded: false,\r\n        testDidNotStart: false,\r\n      });\r\n\r\n      \r\n    };\r\n\r\n    renderScreenInitial = () => {\r\n      // console.log('THIS:',this.props.chapter)\r\n      if((this.props.chapter.testTableData === undefined)){\r\n        console.log(\"1 CREATE_TEST\", this.props.chapter.testId)\r\n        SecurePost({\r\n          url : `${apis.CREATE_TEST}`,\r\n          data : {\r\n            _id: this.props.chapter.testId,\r\n              chapterid : this.props.chid,\r\n              materialid : this.props.id,\r\n              startDate : Date().toLocaleString(),\r\n              complationDate : Date(),\r\n              startTest: false,\r\n              endTest: false,\r\n              result: 0\r\n            }\r\n          })\r\n          .then((response)=>{\r\n            if(response.data.success){\r\n                this.props.ChangeTestModalState(false,null, 'Save'); \r\n                Alert('success','Успешно',response.data.message);\r\n            }\r\n            else{\r\n                this.props.ChangeTestModalState(false,null, 'Save');\r\n                return Alert('warning','Предупреждение!',response.data.message);\r\n            }\r\n          })\r\n          .catch((error)=>{\r\n              this.props.ChangeTestModalState(false,null, 'Save');\r\n              return Alert('error','Ошибка!','Ошибка сервера');\r\n          })\r\n      }\r\n        console.log(\"CREATE_ANSWERS\", this.props.chapter.testid) \r\n        console.log(\"this.props.chapter.testTableData:\", this.props.chapter.testTableData)\r\n      if(this.props.chapter.testTableData!==null || this.props.chapter.testTableData!==undefined || this.props.chapter.testTableData!=='null' || this.props.chapter.testTableData!=='undefined'){ \r\n        console.log(\"this.props.chapter.testTableData222:\", this.props.chapter.testTableData)\r\n        SecurePost({\r\n          url : `${apis.CREATE_ANSWERS}`,\r\n          data : {\r\n            materialId : this.props.id,\r\n            // testid : this.props.chapter.testTableData._id,\r\n          }\r\n        });\r\n      }\r\n      if (this.state.testStarted==false){\r\n        return (\r\n          <Container>\r\n            <ScreenQuiz screen={this.state.screen}>\r\n              <Title>Тестирование</Title>\r\n              <Button \r\n                onClick={\r\n                  this.renderInitial\r\n                } \r\n                style={{\r\n                  fontSize: \"1.2rem\", \r\n                  fontWeight: \"bold\",\r\n                  width: \"40%\",\r\n                  height: \"3rem\",\r\n                  border: \"none\",\r\n                  borderRadius: \"5px\",\r\n                  boxShadow: \"0px 3px 3px 0px #666\"\r\n                }}\r\n                >\r\n                  Начать тест\r\n              </Button>\r\n              \r\n            </ScreenQuiz>\r\n          </Container>\r\n        );\r\n      } \r\n      else if (this.state.testStarted==true && this.state.endTest==false){\r\n        return (\r\n          <Container>\r\n            <ScreenQuiz screen={this.state.screen}>\r\n              <Title>Тестирование</Title>\r\n              <Button \r\n                onClick={this.renderInitial} \r\n                style={{\r\n                  fontSize: \"1.2rem\", \r\n                  fontWeight: \"bold\",\r\n                  width: \"40%\",\r\n                  height: \"3rem\",\r\n                  border: \"none\",\r\n                  borderRadius: \"5px\",\r\n                  boxShadow: \"0px 3px 3px 0px #666\"\r\n                }}\r\n                >\r\n                  Продолжить тест\r\n              </Button>\r\n            </ScreenQuiz>\r\n          </Container>\r\n        );\r\n      }\r\n    };\r\n\r\n\r\n\r\n\r\n    render() {\r\n      const { questions, screen, count, answer, disableButton } = this.state;\r\n\r\n      console.log(\"SCREEN: \", screen);\r\n      // var date1= this.props.chapter.testTableData ? this.props.chapter.testTableData.complationDate : null;\r\n      return screen ? this.renderScreenInitial() : \r\n        // (new Date(date1).getTime() < new Date().getTime() || date1 !== null) ?\r\n        //   Alert('warning','Тест закончен!', 'fdsfdgf')\r\n        // :\r\n          <TestPage q={this.props.chapter.AnswerTableData} id={this.props.id} count={count} screen={screen} answer={answer}/>\r\n    }\r\n  }\r\n  \r\n  const mapStateToProps = state => ({\r\n      chapter : state.chapter,\r\n      trainer : state.trainer\r\n  });\r\n  \r\n  export default connect(mapStateToProps,{\r\n      ChangeTestSearchText,\r\n      ChangeTestTableData,\r\n      ChangeTestModalState,\r\n      ChangeAnswersSearchText,\r\n      ChangeAnswersTableData,\r\n      // ChangeAnswersModalState\r\n  })(Test);*/","map":{"version":3,"names":["React","Component","connect","Button","ChangeTestSearchText","ChangeTestTableData","ChangeTestModalState","ChangeAnswersSearchText","ChangeAnswersTableData","Alert","SecurePost","apis","TestPage","styled","LocalizedStrings","strings","ru","Succes","Warning","Err","ErrorServer","Testing","GoTest","ContTest","kz","Container","div","ScreenQuiz","props","screen","Title","h1","ButtonScr","button","right","css","ContainerLabel","Label","label","Radio","input","attrs","type","clickedLabel","Test","useState","loading","setLoading","setScreen","count","setCount","answer","setAnswer","id","matId","setMatId","disableButton","setDisableButton","testStarted","setTestStarted","testEnded","setTestEnded","testDidNotStart","setTestDidNotStart","useEffect","console","log","state","renderInitial","renderScreenInitial","chapter","testTableData","undefined","testId","url","CREATE_TEST","data","_id","chapterid","chid","materialid","startDate","Date","toLocaleString","complationDate","startTest","endTest","result","then","response","success","message","catch","error","testid","CREATE_ANSWERS","materialId","fontSize","fontWeight","width","height","border","borderRadius","boxShadow","AnswerTableData"],"sources":["C:/React_project/EduTest/frontend/src/components/customer/Testing/test.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Button } from 'antd';\r\n// import Highlighter from 'react-highlight-words';\r\nimport  { css } from 'styled-components/macro'\r\nimport { \r\n  //LoginInfo,\r\n  ChangeTestSearchText,\r\n  ChangeTestTableData,\r\n  ChangeTestModalState,\r\n  ChangeAnswersSearchText,\r\n  ChangeAnswersTableData,\r\n  // ChangeAnswersModalState,\r\n} from '../../../actions/chapterAction';\r\n\r\nimport Alert from '../../../components/common/alert';\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport TestPage from './testpage';\r\nimport styled from \"styled-components\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\n//import Counter from './Counter';\r\n\r\nimport  LocalizedStrings  from  'react-localization' ;\r\nlet strings = new LocalizedStrings({\r\n  ru:{\r\n    Succes:\"Успешно\",\r\n    Warning:\"Предупреждение!\",\r\n    Err:\"Ошибка!\",\r\n    ErrorServer:\"Ошибка сервера\",\r\n    Testing:\"Тестирование\",\r\n    GoTest:\"Начать тест\",\r\n    ContTest:\"Продолжить тест\",\r\n  },\r\n  kz: {\r\n    Succes:\"Сәтті\",\r\n    Warning:\"Ескерту!\",\r\n    Err:\"Қате!\",\r\n    ErrorServer:\"Сервердің қатесі\",\r\n    Testing:\"Тестілеу\",\r\n    GoTest:\"Тесттi бастау\",\r\n    ContTest:\"Тесттi жалғастыру\",\r\n  }\r\n });\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 80vh;\r\n  width: 100%;\r\n  /*background: #7159c1;*/\r\n`;\r\n\r\nconst ScreenQuiz = styled.div`\r\n  display: flex;\r\n  justify-content: ${props => (props.screen ? \"space-between\" : \"center\")};\r\n  align-items: center;\r\n  flex-direction: column;\r\n  max-width: 1200px;\r\n  padding: ${props => (props.screen ? \"5rem\" : \".5rem\")};\r\n  width: 100%;\r\n  height: 80vh;\r\n  background: #fff;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 5px 40px -20px #000;\r\n\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 2.5rem;\r\n  // color: #7159c1;\r\n  margin-bottom: 0.5rem;\r\n  text-align: center;\r\n  max-width: 90%;\r\n`;\r\n\r\n// const Paragraph = styled.p`\r\n//   font-size: 1.5rem;\r\n// `;\r\n\r\n// const Button = styled.button`\r\n//   font-size: 1.2rem;\r\n//   font-weight: bold;\r\n//   width: 40%;\r\n//   height: 3rem;\r\n//   // color: #fff;\r\n//   border: none;\r\n//   // background: #7159c1;\r\n//   border-radius: 5px;\r\n//   box-shadow: 0px 3px 3px 0px #666;\r\n\r\n//   @-webkit-keyframes pulsate {\r\n//     0% {transform: scale(0.1, 0.1); opacity: 0.0;}\r\n//     50% {opacity: 1.0;}\r\n//     100% {transform: scale(7, 7); opacity: 0.0;}\r\n// }\r\n// `;\r\n\r\nconst ButtonScr = styled.button`\r\n  font-size: 1.4rem;\r\n  z-index: 10;\r\n  position: fixed;\r\n  top: 15%;\r\n  ${(props) =>\r\n    props.right\r\n      ? css`\r\n          right: 25rem;\r\n        `\r\n      : css`\r\n          left: 25rem;\r\n        `}\r\n`\r\n\r\nconst ContainerLabel = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  margin: 0 auto 0.5rem auto;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Radio = styled.input.attrs({ type: 'checkbox' })`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 15px;\r\n  height: 15px;\r\n  border-radius: 50%;\r\n  border: 7.5px solid black;\r\n  margin: 0 0.5rem 0 0;\r\n  background: ${props => (props.clickedLabel ? \"#7159c1\" : \"#fff\")};\r\n`;\r\n\r\n// const IntoRadio = styled.div`\r\n//   width: 5px;\r\n//   height: 5px;\r\n//   border-radius: 3px;\r\n//   background: #fff;\r\n// `;\r\n\r\n// const Error = styled.div`\r\n//   top: 22rem;\r\n//   color: red;\r\n//   position: absolute;\r\n//   font-weight: bold;\r\n// `;\r\n\r\n\r\nfunction Test(props){\r\n  const [loading, setLoading] = useState(false)\r\n  const [screen, setScreen] = useState(true);\r\n  const [count, setCount] = useState(0)\r\n  const [answer, setAnswer] = useState(0);\r\n  const [matId, setMatId] = useState(this.props.id);\r\n  const [disableButton, setDisableButton] = useState(false);\r\n  const [testStarted, setTestStarted] = useState(false);\r\n  const [testEnded, setTestEnded] = useState(false);\r\n  const [testDidNotStart, setTestDidNotStart] = useState(true);\r\n\r\n  useEffect(()=>{\r\n    console.log(\"matId\", this.state.matId)\r\n    this.props.ChangeTestTableData(this.props.id);\r\n    this.props.ChangeAnswersTableData(this.props.id);\r\n  }, [])\r\n\r\n  const renderInitial = () => {\r\n    // console.log(\"renderInitial\")\r\n    // const { count } = this.state;\r\n\r\n    setScreen(false);\r\n    setLoading(false);\r\n    setCount(1);\r\n    setTestStarted(true);\r\n    setTestEnded(false);\r\n    setTestDidNotStart(false);\r\n    // this.setState({\r\n    //   screen: false,\r\n    //   loading: false,\r\n    //   count: 1,\r\n    //   testStarted: true,\r\n    //   testEnded: false,\r\n    //   testDidNotStart: false,\r\n    // });\r\n  };\r\n\r\n  const renderScreenInitial = () => {\r\n    // console.log('THIS:',this.props.chapter)\r\n    if((this.props.chapter.testTableData === undefined)){\r\n      console.log(\"1 CREATE_TEST\", this.props.chapter.testId)\r\n      SecurePost({\r\n        url : `${apis.CREATE_TEST}`,\r\n        data : {\r\n          _id: this.props.chapter.testId,\r\n            chapterid : this.props.chid,\r\n            materialid : this.props.id,\r\n            startDate : Date().toLocaleString(),\r\n            complationDate : Date(),\r\n            startTest: false,\r\n            endTest: false,\r\n            result: 0\r\n          }\r\n        })\r\n        .then((response)=>{\r\n          if(response.data.success){\r\n              this.props.ChangeTestModalState(false,null, 'Save'); \r\n              Alert('success','Успешно',response.data.message);\r\n          }\r\n          else{\r\n              this.props.ChangeTestModalState(false,null, 'Save');\r\n              return Alert('warning','Предупреждение!',response.data.message);\r\n          }\r\n        })\r\n        .catch((error)=>{\r\n            this.props.ChangeTestModalState(false,null, 'Save');\r\n            return Alert('error','Ошибка!','Ошибка сервера');\r\n        })\r\n    }\r\n      console.log(\"CREATE_ANSWERS\", this.props.chapter.testid) \r\n      console.log(\"this.props.chapter.testTableData:\", this.props.chapter.testTableData)\r\n    if(this.props.chapter.testTableData!==null || this.props.chapter.testTableData!==undefined || this.props.chapter.testTableData!=='null' || this.props.chapter.testTableData!=='undefined'){ \r\n      console.log(\"this.props.chapter.testTableData222:\", this.props.chapter.testTableData)\r\n      SecurePost({\r\n        url : `${apis.CREATE_ANSWERS}`,\r\n        data : {\r\n          materialId : this.props.id,\r\n          // testid : this.props.chapter.testTableData._id,\r\n        }\r\n      });\r\n    }\r\n    if (testStarted==false){\r\n      return (\r\n        <Container>\r\n          <ScreenQuiz screen={screen}>\r\n            <Title>Тестирование</Title>\r\n            {/* {console.log('ASDFGH:', new Date(this.props.chapter.testTableData.complationDate).getTime())}\r\n            {console.log('ZXCVBN:', new Date().getTime())} */}\r\n            <Button \r\n              onClick={\r\n                this.renderInitial\r\n              } \r\n              style={{\r\n                fontSize: \"1.2rem\", \r\n                fontWeight: \"bold\",\r\n                width: \"40%\",\r\n                height: \"3rem\",\r\n                border: \"none\",\r\n                borderRadius: \"5px\",\r\n                boxShadow: \"0px 3px 3px 0px #666\"\r\n              }}\r\n              >\r\n                Начать тест\r\n            </Button>\r\n            \r\n          </ScreenQuiz>\r\n        </Container>\r\n      );\r\n    } \r\n    else if (testStarted==true && endTest==false){\r\n      return (\r\n        <Container>\r\n          <ScreenQuiz screen={screen}>\r\n            <Title>Тестирование</Title>\r\n            <Button \r\n              onClick={this.renderInitial} \r\n              style={{\r\n                fontSize: \"1.2rem\", \r\n                fontWeight: \"bold\",\r\n                width: \"40%\",\r\n                height: \"3rem\",\r\n                border: \"none\",\r\n                borderRadius: \"5px\",\r\n                boxShadow: \"0px 3px 3px 0px #666\"\r\n              }}\r\n              >\r\n                Продолжить тест\r\n            </Button>\r\n          </ScreenQuiz>\r\n        </Container>\r\n      );\r\n    }\r\n  };\r\n\r\n    // var date1= this.props.chapter.testTableData ? this.props.chapter.testTableData.complationDate : null;\r\n    return screen ? this.renderScreenInitial() : \r\n      // (new Date(date1).getTime() < new Date().getTime() || date1 !== null) ?\r\n      //   Alert('warning','Тест закончен!', 'fdsfdgf')\r\n      // :\r\n        <TestPage q={this.props.chapter.AnswerTableData} id={this.props.id} count={count} screen={screen} answer={answer}/>\r\n  }\r\n\r\n\r\nexport default Test;\r\n\r\n/* class Test extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state={\r\n        //questions:[],\r\n        loading:false,\r\n        screen: true,\r\n        count: 0,\r\n        //clickedLabel: [],\r\n        answer: 0,\r\n        //error:false,\r\n        // screenFinish:false,\r\n        //second:60,\r\n       // time:{},\r\n        //checked:false,\r\n        disableButton: false,\r\n        testStarted:false,\r\n        testEnded:false,\r\n        testDidNotStart:true,\r\n        matId : this.props.id,\r\n       // details:[],\r\n      }\r\n    }\r\n  \r\n    componentDidMount(){\r\n      console.log(\"1 - componentDidMount\", this.state.matId)\r\n      this.props.ChangeTestTableData(this.props.id);\r\n      this.props.ChangeAnswersTableData(this.props.id);\r\n    }\r\n\r\n\r\n    renderInitial = () => {\r\n      console.log(\"renderInitial\")\r\n      const { count } = this.state;\r\n\r\n      this.setState({\r\n        screen: false,\r\n        loading: false,\r\n        count: 1,\r\n        testStarted: true,\r\n        testEnded: false,\r\n        testDidNotStart: false,\r\n      });\r\n\r\n      \r\n    };\r\n\r\n    renderScreenInitial = () => {\r\n      // console.log('THIS:',this.props.chapter)\r\n      if((this.props.chapter.testTableData === undefined)){\r\n        console.log(\"1 CREATE_TEST\", this.props.chapter.testId)\r\n        SecurePost({\r\n          url : `${apis.CREATE_TEST}`,\r\n          data : {\r\n            _id: this.props.chapter.testId,\r\n              chapterid : this.props.chid,\r\n              materialid : this.props.id,\r\n              startDate : Date().toLocaleString(),\r\n              complationDate : Date(),\r\n              startTest: false,\r\n              endTest: false,\r\n              result: 0\r\n            }\r\n          })\r\n          .then((response)=>{\r\n            if(response.data.success){\r\n                this.props.ChangeTestModalState(false,null, 'Save'); \r\n                Alert('success','Успешно',response.data.message);\r\n            }\r\n            else{\r\n                this.props.ChangeTestModalState(false,null, 'Save');\r\n                return Alert('warning','Предупреждение!',response.data.message);\r\n            }\r\n          })\r\n          .catch((error)=>{\r\n              this.props.ChangeTestModalState(false,null, 'Save');\r\n              return Alert('error','Ошибка!','Ошибка сервера');\r\n          })\r\n      }\r\n        console.log(\"CREATE_ANSWERS\", this.props.chapter.testid) \r\n        console.log(\"this.props.chapter.testTableData:\", this.props.chapter.testTableData)\r\n      if(this.props.chapter.testTableData!==null || this.props.chapter.testTableData!==undefined || this.props.chapter.testTableData!=='null' || this.props.chapter.testTableData!=='undefined'){ \r\n        console.log(\"this.props.chapter.testTableData222:\", this.props.chapter.testTableData)\r\n        SecurePost({\r\n          url : `${apis.CREATE_ANSWERS}`,\r\n          data : {\r\n            materialId : this.props.id,\r\n            // testid : this.props.chapter.testTableData._id,\r\n          }\r\n        });\r\n      }\r\n      if (this.state.testStarted==false){\r\n        return (\r\n          <Container>\r\n            <ScreenQuiz screen={this.state.screen}>\r\n              <Title>Тестирование</Title>\r\n              <Button \r\n                onClick={\r\n                  this.renderInitial\r\n                } \r\n                style={{\r\n                  fontSize: \"1.2rem\", \r\n                  fontWeight: \"bold\",\r\n                  width: \"40%\",\r\n                  height: \"3rem\",\r\n                  border: \"none\",\r\n                  borderRadius: \"5px\",\r\n                  boxShadow: \"0px 3px 3px 0px #666\"\r\n                }}\r\n                >\r\n                  Начать тест\r\n              </Button>\r\n              \r\n            </ScreenQuiz>\r\n          </Container>\r\n        );\r\n      } \r\n      else if (this.state.testStarted==true && this.state.endTest==false){\r\n        return (\r\n          <Container>\r\n            <ScreenQuiz screen={this.state.screen}>\r\n              <Title>Тестирование</Title>\r\n              <Button \r\n                onClick={this.renderInitial} \r\n                style={{\r\n                  fontSize: \"1.2rem\", \r\n                  fontWeight: \"bold\",\r\n                  width: \"40%\",\r\n                  height: \"3rem\",\r\n                  border: \"none\",\r\n                  borderRadius: \"5px\",\r\n                  boxShadow: \"0px 3px 3px 0px #666\"\r\n                }}\r\n                >\r\n                  Продолжить тест\r\n              </Button>\r\n            </ScreenQuiz>\r\n          </Container>\r\n        );\r\n      }\r\n    };\r\n\r\n\r\n\r\n\r\n    render() {\r\n      const { questions, screen, count, answer, disableButton } = this.state;\r\n\r\n      console.log(\"SCREEN: \", screen);\r\n      // var date1= this.props.chapter.testTableData ? this.props.chapter.testTableData.complationDate : null;\r\n      return screen ? this.renderScreenInitial() : \r\n        // (new Date(date1).getTime() < new Date().getTime() || date1 !== null) ?\r\n        //   Alert('warning','Тест закончен!', 'fdsfdgf')\r\n        // :\r\n          <TestPage q={this.props.chapter.AnswerTableData} id={this.props.id} count={count} screen={screen} answer={answer}/>\r\n    }\r\n  }\r\n  \r\n  const mapStateToProps = state => ({\r\n      chapter : state.chapter,\r\n      trainer : state.trainer\r\n  });\r\n  \r\n  export default connect(mapStateToProps,{\r\n      ChangeTestSearchText,\r\n      ChangeTestTableData,\r\n      ChangeTestModalState,\r\n      ChangeAnswersSearchText,\r\n      ChangeAnswersTableData,\r\n      // ChangeAnswersModalState\r\n  })(Test);*/\r\n\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,MAAvB,C,CACA;;AAEA,SACE;AACAC,oBAFF,EAGEC,mBAHF,EAIEC,oBAJF,EAKEC,uBALF,EAMEC,sBANF,CAOE;AAPF,OAQO,gCARP;AAUA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,qCAAP,C,CACA;;AAEA,OAAQC,gBAAR,MAAgC,oBAAhC;AACA,IAAIC,OAAO,GAAG,IAAID,gBAAJ,CAAqB;EACjCE,EAAE,EAAC;IACDC,MAAM,EAAC,SADN;IAEDC,OAAO,EAAC,iBAFP;IAGDC,GAAG,EAAC,SAHH;IAIDC,WAAW,EAAC,gBAJX;IAKDC,OAAO,EAAC,cALP;IAMDC,MAAM,EAAC,aANN;IAODC,QAAQ,EAAC;EAPR,CAD8B;EAUjCC,EAAE,EAAE;IACFP,MAAM,EAAC,OADL;IAEFC,OAAO,EAAC,UAFN;IAGFC,GAAG,EAAC,OAHF;IAIFC,WAAW,EAAC,kBAJV;IAKFC,OAAO,EAAC,UALN;IAMFC,MAAM,EAAC,eANL;IAOFC,QAAQ,EAAC;EAPP;AAV6B,CAArB,CAAd;AAoBA,MAAME,SAAS,GAAGZ,MAAM,CAACa,GAAV;EAAA;EAAA;AAAA,0FAAf;AASA,MAAMC,UAAU,GAAGd,MAAM,CAACa,GAAV;EAAA;EAAA;AAAA,8MAEKE,KAAK,IAAKA,KAAK,CAACC,MAAN,GAAe,eAAf,GAAiC,QAFhD,EAMHD,KAAK,IAAKA,KAAK,CAACC,MAAN,GAAe,MAAf,GAAwB,OAN/B,CAAhB;AAeA,MAAMC,KAAK,GAAGjB,MAAM,CAACkB,EAAV;EAAA;EAAA;AAAA,8EAAX,C,CAQA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAGnB,MAAM,CAACoB,MAAV;EAAA;EAAA;AAAA,gEAKVL,KAAD,IACAA,KAAK,CAACM,KAAN,GACIC,IADJ,sBAIIA,IAJJ,oBANW,CAAf;AAeA,MAAMC,cAAc,GAAGvB,MAAM,CAACa,GAAV;EAAA;EAAA;AAAA,4FAApB;AAOA,MAAMW,KAAK,GAAGxB,MAAM,CAACyB,KAAV;EAAA;EAAA;AAAA,+DAAX;AAMA,MAAMC,KAAK,GAAG1B,MAAM,CAAC2B,KAAP,CAAaC,KAAb,CAAmB;EAAEC,IAAI,EAAE;AAAR,CAAnB,CAAH;EAAA;EAAA;AAAA,sKASKd,KAAK,IAAKA,KAAK,CAACe,YAAN,GAAqB,SAArB,GAAiC,MAThD,CAAX,C,CAYA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASC,IAAT,CAAchB,KAAd,EAAoB;EAAA,kBACYiB,QAAQ,CAAC,KAAD,CADpB;EAAA;EAAA,MACXC,OADW;EAAA,MACFC,UADE;;EAAA,mBAEUF,QAAQ,CAAC,IAAD,CAFlB;EAAA;EAAA,MAEXhB,MAFW;EAAA,MAEHmB,SAFG;;EAAA,mBAGQH,QAAQ,CAAC,CAAD,CAHhB;EAAA;EAAA,MAGXI,KAHW;EAAA,MAGJC,QAHI;;EAAA,mBAIUL,QAAQ,CAAC,CAAD,CAJlB;EAAA;EAAA,MAIXM,MAJW;EAAA,MAIHC,SAJG;;EAAA,mBAKQP,QAAQ,CAAC,KAAKjB,KAAL,CAAWyB,EAAZ,CALhB;EAAA;EAAA,MAKXC,KALW;EAAA,MAKJC,QALI;;EAAA,oBAMwBV,QAAQ,CAAC,KAAD,CANhC;EAAA;EAAA,MAMXW,aANW;EAAA,MAMIC,gBANJ;;EAAA,oBAOoBZ,QAAQ,CAAC,KAAD,CAP5B;EAAA;EAAA,MAOXa,WAPW;EAAA,MAOEC,cAPF;;EAAA,oBAQgBd,QAAQ,CAAC,KAAD,CARxB;EAAA;EAAA,MAQXe,SARW;EAAA,MAQAC,YARA;;EAAA,oBAS4BhB,QAAQ,CAAC,IAAD,CATpC;EAAA;EAAA,MASXiB,eATW;EAAA,MASMC,kBATN;;EAWlBC,SAAS,CAAC,MAAI;IACZC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKC,KAAL,CAAWb,KAAhC;IACA,KAAK1B,KAAL,CAAWvB,mBAAX,CAA+B,KAAKuB,KAAL,CAAWyB,EAA1C;IACA,KAAKzB,KAAL,CAAWpB,sBAAX,CAAkC,KAAKoB,KAAL,CAAWyB,EAA7C;EACD,CAJQ,EAIN,EAJM,CAAT;;EAMA,MAAMe,aAAa,GAAG,MAAM;IAC1B;IACA;IAEApB,SAAS,CAAC,KAAD,CAAT;IACAD,UAAU,CAAC,KAAD,CAAV;IACAG,QAAQ,CAAC,CAAD,CAAR;IACAS,cAAc,CAAC,IAAD,CAAd;IACAE,YAAY,CAAC,KAAD,CAAZ;IACAE,kBAAkB,CAAC,KAAD,CAAlB,CAT0B,CAU1B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACD,CAlBD;;EAoBA,MAAMM,mBAAmB,GAAG,MAAM;IAChC;IACA,IAAI,KAAKzC,KAAL,CAAW0C,OAAX,CAAmBC,aAAnB,KAAqCC,SAAzC,EAAoD;MAClDP,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,KAAKtC,KAAL,CAAW0C,OAAX,CAAmBG,MAAhD;MACA/D,UAAU,CAAC;QACTgE,GAAG,YAAM/D,IAAI,CAACgE,WAAX,CADM;QAETC,IAAI,EAAG;UACLC,GAAG,EAAE,KAAKjD,KAAL,CAAW0C,OAAX,CAAmBG,MADnB;UAEHK,SAAS,EAAG,KAAKlD,KAAL,CAAWmD,IAFpB;UAGHC,UAAU,EAAG,KAAKpD,KAAL,CAAWyB,EAHrB;UAIH4B,SAAS,EAAGC,IAAI,GAAGC,cAAP,EAJT;UAKHC,cAAc,EAAGF,IAAI,EALlB;UAMHG,SAAS,EAAE,KANR;UAOHC,OAAO,EAAE,KAPN;UAQHC,MAAM,EAAE;QARL;MAFE,CAAD,CAAV,CAaGC,IAbH,CAaSC,QAAD,IAAY;QAChB,IAAGA,QAAQ,CAACb,IAAT,CAAcc,OAAjB,EAAyB;UACrB,KAAK9D,KAAL,CAAWtB,oBAAX,CAAgC,KAAhC,EAAsC,IAAtC,EAA4C,MAA5C;UACAG,KAAK,CAAC,SAAD,EAAW,SAAX,EAAqBgF,QAAQ,CAACb,IAAT,CAAce,OAAnC,CAAL;QACH,CAHD,MAII;UACA,KAAK/D,KAAL,CAAWtB,oBAAX,CAAgC,KAAhC,EAAsC,IAAtC,EAA4C,MAA5C;UACA,OAAOG,KAAK,CAAC,SAAD,EAAW,iBAAX,EAA6BgF,QAAQ,CAACb,IAAT,CAAce,OAA3C,CAAZ;QACH;MACF,CAtBH,EAuBGC,KAvBH,CAuBUC,KAAD,IAAS;QACZ,KAAKjE,KAAL,CAAWtB,oBAAX,CAAgC,KAAhC,EAAsC,IAAtC,EAA4C,MAA5C;QACA,OAAOG,KAAK,CAAC,OAAD,EAAS,SAAT,EAAmB,gBAAnB,CAAZ;MACH,CA1BH;IA2BD;;IACCwD,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,KAAKtC,KAAL,CAAW0C,OAAX,CAAmBwB,MAAjD;IACA7B,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiD,KAAKtC,KAAL,CAAW0C,OAAX,CAAmBC,aAApE;;IACF,IAAG,KAAK3C,KAAL,CAAW0C,OAAX,CAAmBC,aAAnB,KAAmC,IAAnC,IAA2C,KAAK3C,KAAL,CAAW0C,OAAX,CAAmBC,aAAnB,KAAmCC,SAA9E,IAA2F,KAAK5C,KAAL,CAAW0C,OAAX,CAAmBC,aAAnB,KAAmC,MAA9H,IAAwI,KAAK3C,KAAL,CAAW0C,OAAX,CAAmBC,aAAnB,KAAmC,WAA9K,EAA0L;MACxLN,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoD,KAAKtC,KAAL,CAAW0C,OAAX,CAAmBC,aAAvE;MACA7D,UAAU,CAAC;QACTgE,GAAG,YAAM/D,IAAI,CAACoF,cAAX,CADM;QAETnB,IAAI,EAAG;UACLoB,UAAU,EAAG,KAAKpE,KAAL,CAAWyB,EADnB,CAEL;;QAFK;MAFE,CAAD,CAAV;IAOD;;IACD,IAAIK,WAAW,IAAE,KAAjB,EAAuB;MACrB,oBACE,oBAAC,SAAD;QAAA;UAAA;UAAA;QAAA;QAAA;MAAA,gBACE,oBAAC,UAAD;QAAY,MAAM,EAAE7B,MAApB;QAAA;UAAA;UAAA;QAAA;QAAA;MAAA,gBACE,oBAAC,KAAD;QAAA;UAAA;UAAA;QAAA;QAAA;MAAA,8EADF,eAIE,oBAAC,MAAD;QACE,OAAO,EACL,KAAKuC,aAFT;QAIE,KAAK,EAAE;UACL6B,QAAQ,EAAE,QADL;UAELC,UAAU,EAAE,MAFP;UAGLC,KAAK,EAAE,KAHF;UAILC,MAAM,EAAE,MAJH;UAKLC,MAAM,EAAE,MALH;UAMLC,YAAY,EAAE,KANT;UAOLC,SAAS,EAAE;QAPN,CAJT;QAAA;UAAA;UAAA;QAAA;QAAA;MAAA,mEAJF,CADF,CADF;IA0BD,CA3BD,MA4BK,IAAI7C,WAAW,IAAE,IAAb,IAAqB4B,OAAO,IAAE,KAAlC,EAAwC;MAC3C,oBACE,oBAAC,SAAD;QAAA;UAAA;UAAA;QAAA;QAAA;MAAA,gBACE,oBAAC,UAAD;QAAY,MAAM,EAAEzD,MAApB;QAAA;UAAA;UAAA;QAAA;QAAA;MAAA,gBACE,oBAAC,KAAD;QAAA;UAAA;UAAA;QAAA;QAAA;MAAA,8EADF,eAEE,oBAAC,MAAD;QACE,OAAO,EAAE,KAAKuC,aADhB;QAEE,KAAK,EAAE;UACL6B,QAAQ,EAAE,QADL;UAELC,UAAU,EAAE,MAFP;UAGLC,KAAK,EAAE,KAHF;UAILC,MAAM,EAAE,MAJH;UAKLC,MAAM,EAAE,MALH;UAMLC,YAAY,EAAE,KANT;UAOLC,SAAS,EAAE;QAPN,CAFT;QAAA;UAAA;UAAA;QAAA;QAAA;MAAA,2FAFF,CADF,CADF;IAqBD;EACF,CA/FD,CArCkB,CAsIhB;;;EACA,OAAO1E,MAAM,GAAG,KAAKwC,mBAAL,EAAH;EAAA;EACX;EACA;EACA;EACE,oBAAC,QAAD;IAAU,CAAC,EAAE,KAAKzC,KAAL,CAAW0C,OAAX,CAAmBkC,eAAhC;IAAiD,EAAE,EAAE,KAAK5E,KAAL,CAAWyB,EAAhE;IAAoE,KAAK,EAAEJ,KAA3E;IAAkF,MAAM,EAAEpB,MAA1F;IAAkG,MAAM,EAAEsB,MAA1G;IAAA;MAAA;MAAA;IAAA;IAAA;EAAA,EAJJ;AAKD;;AAGH,eAAeP,IAAf},"metadata":{},"sourceType":"module"}