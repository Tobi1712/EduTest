{"ast":null,"code":"import _objectSpread from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\admin\\\\Slides\\\\allslides.js\";\nimport React, { Component } from 'react';\nimport { Table, Input, Button, Typography, Divider, Icon, Modal, Popconfirm } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { connect } from 'react-redux';\nimport { ChangeSlideSearchText, ChangeSlideTableData, ChangeSlideModalState } from '../../../actions/chapterAction';\nimport '../Division/alldivision.css';\nimport Alert from '../../../components/common/alert';\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport NewSlidesForm from './newslide';\n\nclass AllSlides extends Component {\n  constructor(props) {\n    super(props);\n\n    this.openModal = (id, mode) => {\n      this.props.ChangeSlideModalState(true, id, mode);\n    };\n\n    this.closeModal = () => {\n      this.props.ChangeSlideModalState(false, null, 'Регистрация');\n    };\n\n    this.deleteSlide = id => {\n      SecurePost({\n        url: \"\".concat(apis.DELETE_SLIDE),\n        data: {\n          _id: id\n        }\n      }).then(response => {\n        if (response.data.success) {\n          Alert('success', 'Успешно', response.data.message);\n          this.props.ChangeSlideTableData();\n        } else {\n          return Alert('warning', 'Предупреждение!', response.data.message);\n        }\n      }).catch(error => {\n        return Alert('error', 'Ошибка!', 'Ошибка сервера');\n      });\n    };\n\n    this.getColumnSearchProps = dataIndex => ({\n      filterDropdown: ({\n        setSelectedKeys,\n        selectedKeys,\n        confirm,\n        clearFilters\n      }) => React.createElement(\"div\", {\n        style: {\n          padding: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Input, {\n        ref: node => {\n          this.searchInput = node;\n        },\n        placeholder: \"Search \".concat(dataIndex),\n        value: selectedKeys[0],\n        onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n        onPressEnter: () => this.handleSearch(selectedKeys, confirm),\n        style: {\n          width: 188,\n          marginBottom: 8,\n          display: 'block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"primary\",\n        onClick: () => this.handleSearch(selectedKeys, confirm),\n        icon: \"search\",\n        size: \"small\",\n        style: {\n          width: 90,\n          marginRight: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Search\"), React.createElement(Button, {\n        onClick: () => this.handleReset(clearFilters),\n        size: \"small\",\n        style: {\n          width: 90\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Reset\")),\n      filterIcon: filtered => React.createElement(Icon, {\n        type: \"search\",\n        style: {\n          color: filtered ? '#1890ff' : undefined\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }),\n      onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          setTimeout(() => this.searchInput.select());\n        }\n      },\n      render: text => React.createElement(Highlighter, {\n        highlightStyle: {\n          backgroundColor: '#ffc069',\n          padding: 0\n        },\n        searchWords: [this.props.chapter.SlidesearchText],\n        autoEscape: true,\n        textToHighlight: text.toString(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })\n    });\n\n    this.handleSearch = (selectedKeys, confirm) => {\n      confirm();\n      this.props.ChangeSlideSearchText(selectedKeys[0]);\n    };\n\n    this.handleReset = clearFilters => {\n      clearFilters();\n      this.props.ChangeSlideSearchText('');\n    };\n\n    this.state = {\n      SlidetableLoading: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.ChangeSlideTableData();\n  }\n\n  render() {\n    const Title = Typography.Title;\n    const columns = [_objectSpread({\n      title: 'Тело',\n      dataIndex: 'slbody',\n      key: 'slbody',\n      width: '25%'\n    }, this.getColumnSearchProps('slbody')), _objectSpread({\n      title: 'Описание',\n      dataIndex: 'description',\n      key: 'description',\n      width: '25%'\n    }, this.getColumnSearchProps('description')), {\n      title: 'Действие',\n      key: '_id',\n      dataIndex: '_id',\n      render: key => React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        shape: \"circle\",\n        icon: \"edit\",\n        onClick: () => this.openModal(key, 'Сохранить'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(Divider, {\n        type: \"vertical\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(Popconfirm, {\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B\\uFF1F\",\n        cancelText: \"\\u041D\\u0435\\u0442\",\n        okText: \"\\u0414\\u0430\",\n        onConfirm: () => {\n          this.deleteSlide(key);\n        },\n        icon: React.createElement(Icon, {\n          type: \"delete\",\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"danger\",\n        shape: \"circle\",\n        icon: \"delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      })))\n    }];\n    return React.createElement(\"div\", {\n      className: \"admin-table-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      icon: \"user-add\",\n      style: {\n        marginBottom: '10px'\n      },\n      onClick: () => this.openModal(null, 'Регистрация'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"), React.createElement(\"div\", {\n      className: \"register-division-form-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Title, {\n      level: 4,\n      style: {\n        color: '#fff',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043E\\u0442\\u0434\\u0435\\u043B\\u043E\\u0432\")), React.createElement(Table, {\n      bordered: true,\n      columns: columns,\n      dataSource: this.props.chapter.slideTableData,\n      size: \"medium\",\n      pagination: {\n        pageSize: 5\n      },\n      loading: this.props.chapter.slideTableLoadingStatus,\n      rowKey: \"_id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), \";\", React.createElement(Modal, {\n      visible: this.props.chapter.SlidemodalOpened,\n      title: false,\n      onOk: this.handleOk,\n      onCancel: this.closeModal,\n      style: {\n        top: '20px',\n        padding: '0px',\n        backgroundColor: 'rgb(155,175,190)'\n      },\n      width: \"40%\",\n      destroyOnClose: true,\n      footer: [],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(NewSlidesForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  admin: state.admin,\n  chapter: state.chapter\n});\n\nexport default connect(mapStateToProps, {\n  ChangeSlideSearchText,\n  ChangeSlideTableData,\n  ChangeSlideModalState\n})(AllSlides);","map":{"version":3,"sources":["C:\\React_project\\EduTest\\frontend\\src\\components\\admin\\Slides\\allslides.js"],"names":["React","Component","Table","Input","Button","Typography","Divider","Icon","Modal","Popconfirm","Highlighter","connect","ChangeSlideSearchText","ChangeSlideTableData","ChangeSlideModalState","Alert","SecurePost","apis","NewSlidesForm","AllSlides","constructor","props","openModal","id","mode","closeModal","deleteSlide","url","DELETE_SLIDE","data","_id","then","response","success","message","catch","error","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","value","handleSearch","width","marginBottom","display","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","backgroundColor","chapter","SlidesearchText","state","SlidetableLoading","componentDidMount","Title","columns","title","key","textAlign","slideTableData","pageSize","slideTableLoadingStatus","SlidemodalOpened","handleOk","top","mapStateToProps","admin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Table, Input, Button, Typography, Divider, Icon, Modal, Popconfirm } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    ChangeSlideSearchText,\r\n    ChangeSlideTableData,\r\n    ChangeSlideModalState\r\n} from '../../../actions/chapterAction';\r\nimport '../Division/alldivision.css'\r\nimport Alert from '../../../components/common/alert';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport NewSlidesForm from './newslide';\r\n\r\n\r\nclass AllSlides extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      SlidetableLoading : false\r\n    }\r\n  }\r\n\r\n  openModal = (id,mode)=>{\r\n    this.props.ChangeSlideModalState(true,id,mode);\r\n  }\r\n\r\n  closeModal = ()=>{\r\n    this.props.ChangeSlideModalState(false,null,'Регистрация');\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.ChangeSlideTableData();\r\n  }\r\n\r\n  deleteSlide = (id)=>{\r\n    SecurePost({\r\n      url : `${apis.DELETE_SLIDE}`,\r\n      data : {\r\n          _id : id\r\n      }\r\n    }).then((response)=>{\r\n      if(response.data.success){\r\n        Alert('success','Успешно',response.data.message);\r\n        this.props.ChangeSlideTableData();\r\n      }\r\n      else{\r\n        return Alert('warning','Предупреждение!',response.data.message);\r\n      }\r\n    }).catch((error)=>{\r\n      return Alert('error','Ошибка!','Ошибка сервера');\r\n    })\r\n  }\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => {\r\n                this.searchInput = node;\r\n              }}\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n              icon=\"search\"\r\n              size=\"small\"\r\n              style={{ width: 90, marginRight: 8 }}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n          <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n          record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: visible => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n          }\r\n        },\r\n        render: text => (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[this.props.chapter.SlidesearchText]}\r\n            autoEscape\r\n            textToHighlight={text.toString()}\r\n          />\r\n        ),\r\n      });\r\n    \r\n      handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.props.ChangeSlideSearchText(selectedKeys[0])\r\n      };\r\n    \r\n      handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.props.ChangeSlideSearchText('')\r\n      };\r\n\r\n    render() {\r\n      const { Title } = Typography;\r\n      const columns = [\r\n        {\r\n          title: 'Тело',\r\n          dataIndex: 'slbody',\r\n          key: 'slbody',\r\n          width: '25%',\r\n          ...this.getColumnSearchProps('slbody'),\r\n        },\r\n        {\r\n          title: 'Описание',\r\n          dataIndex: 'description',\r\n          key: 'description',\r\n          width: '25%',\r\n          ...this.getColumnSearchProps('description'),\r\n        },      \r\n        {\r\n          title: 'Действие',\r\n          key: '_id',\r\n          dataIndex: '_id',\r\n          render: (key) => (\r\n            <span>\r\n              <Button type=\"primary\" shape=\"circle\" icon=\"edit\" onClick={()=>this.openModal(key,'Сохранить')}/>\r\n                <Divider type=\"vertical\" />\r\n                <Popconfirm\r\n                  title=\"Вы уверены？\"\r\n                  cancelText=\"Нет\"\r\n                  okText=\"Да\"\r\n                  onConfirm={()=>{this.deleteSlide(key)}}\r\n                  icon={<Icon type=\"delete\" style={{ color: 'red' }} />}\r\n                >\r\n                  <Button type=\"danger\" shape=\"circle\" icon=\"delete\" />\r\n                </Popconfirm>\r\n              \r\n            </span>\r\n          ),\r\n        },\r\n      ];\r\n        return (\r\n            <div className=\"admin-table-container\">\r\n              <Button type=\"primary\" icon=\"user-add\" style={{marginBottom:'10px'}} onClick={()=>this.openModal(null,'Регистрация')}>\r\n              Добавить\r\n              </Button> \r\n              <div className=\"register-division-form-header\">\r\n                <Title level={4} style={{color:'#fff',textAlign:'center'}}>Список отделов</Title>\r\n              </div>\r\n              <Table \r\n                bordered={true} \r\n                columns={columns} \r\n                dataSource={this.props.chapter.slideTableData} \r\n                size=\"medium\" \r\n                pagination={{ pageSize: 5 }}\r\n                loading={this.props.chapter.slideTableLoadingStatus}\r\n                rowKey=\"_id\" \r\n              />;\r\n              <Modal\r\n                visible={this.props.chapter.SlidemodalOpened}\r\n                title={false}\r\n                onOk={this.handleOk}\r\n                onCancel={this.closeModal}\r\n                style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\r\n                width=\"40%\"\r\n                destroyOnClose={true}\r\n                footer={[\r\n                  \r\n                ]}\r\n              >\r\n                <NewSlidesForm />\r\n              </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin : state.admin,\r\n    chapter : state.chapter\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeSlideSearchText,\r\n    ChangeSlideTableData,\r\n    ChangeSlideModalState\r\n})(AllSlides);"]},"metadata":{},"sourceType":"module"}