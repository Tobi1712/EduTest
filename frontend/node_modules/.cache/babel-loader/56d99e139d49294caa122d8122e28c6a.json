{"ast":null,"code":"import _slicedToArray from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\customer\\\\Testing\\\\testpage2.js\";\nexport default function TestPage2(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        questions = _useState2[0],\n        setQuestions = _useState2[1];\n\n  const _useState3 = useState(props.count),\n        _useState4 = _slicedToArray(_useState3, 2),\n        count = _useState4[0],\n        setCount = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        checked = _useState6[0],\n        setChecked = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        clickedLabel = _useState8[0],\n        setClickedLabel = _useState8[1];\n\n  const _useState9 = useState(props.answer),\n        _useState10 = _slicedToArray(_useState9, 2),\n        answer = _useState10[0],\n        setAnswer = _useState10[1];\n\n  const _useState11 = useState(props.screenFinish),\n        _useState12 = _slicedToArray(_useState11, 2),\n        screenFinish = _useState12[0],\n        setScreenFinish = _useState12[1];\n\n  const _useState13 = useState(props.screen),\n        _useState14 = _slicedToArray(_useState13, 2),\n        screen = _useState14[0],\n        setScreen = _useState14[1];\n\n  const materialId = props.id;\n\n  const renderResult = () => {\n    //   const { answer,questions, screenFinish } = this.state;\n    return /*#__PURE__*/React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(ScreenQuiz, {\n      screen: screenFinish,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"\\u0412\\u044B \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u043E \\u043E\\u0442\\u0432\\u0435\\u0442\\u0438\\u043B\\u0438 \", answer, \" \\u0438\\u0437 \", questions.length, \" \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u043E\\u0432\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: (() => setCount(0), setScreenFinish(false), setScreen(true), setAnswer(0)),\n      style: {\n        fontSize: \"1.2rem\",\n        fontWeight: \"bold\",\n        width: \"40%\",\n        height: \"3rem\",\n        border: \"none\",\n        borderRadius: \"5px\",\n        boxShadow: \"0px 3px 3px 0px #666\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"\\u0422\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E\")));\n  };\n}","map":{"version":3,"names":["TestPage2","props","useState","questions","setQuestions","count","setCount","checked","setChecked","clickedLabel","setClickedLabel","answer","setAnswer","screenFinish","setScreenFinish","screen","setScreen","materialId","id","renderResult","length","fontSize","fontWeight","width","height","border","borderRadius","boxShadow"],"sources":["C:/React_project/EduTest/frontend/src/components/customer/Testing/testpage2.js"],"sourcesContent":["\r\nexport default function TestPage2(props) {\r\n    const [questions, setQuestions] = useState([])\r\n    const [count, setCount] = useState(props.count);\r\n    const [checked, setChecked] = useState(false)\r\n    const [clickedLabel, setClickedLabel] = useState([]);\r\n    const [answer, setAnswer] = useState(props.answer);\r\n    const [screenFinish, setScreenFinish] = useState(props.screenFinish);\r\n    const [screen, setScreen] = useState(props.screen);\r\n    const materialId = props.id;\r\n    const renderResult = () => {\r\n        //   const { answer,questions, screenFinish } = this.state;\r\n      \r\n          return (\r\n            <Container>\r\n              <ScreenQuiz screen={screenFinish}>\r\n                <Title>Вы правильно ответили {answer} из {questions.length} вопросов</Title>\r\n                <Button\r\n                  onClick={() =>\r\n                    setCount(0),\r\n                    setScreenFinish(false),\r\n                    setScreen(true),\r\n                    setAnswer(0)\r\n                  }\r\n    \r\n                  style={{\r\n                    fontSize: \"1.2rem\", \r\n                    fontWeight: \"bold\",\r\n                    width: \"40%\",\r\n                    height: \"3rem\",\r\n                    border: \"none\",\r\n                    borderRadius: \"5px\",\r\n                    boxShadow: \"0px 3px 3px 0px #666\"\r\n                  }}\r\n                >\r\n                  Тестировать заново\r\n                </Button>\r\n              </ScreenQuiz>\r\n            </Container>\r\n          );\r\n        };\r\n}"],"mappings":";;AACA,eAAe,SAASA,SAAT,CAAmBC,KAAnB,EAA0B;EAAA,kBACHC,QAAQ,CAAC,EAAD,CADL;EAAA;EAAA,MAC9BC,SAD8B;EAAA,MACnBC,YADmB;;EAAA,mBAEXF,QAAQ,CAACD,KAAK,CAACI,KAAP,CAFG;EAAA;EAAA,MAE9BA,KAF8B;EAAA,MAEvBC,QAFuB;;EAAA,mBAGPJ,QAAQ,CAAC,KAAD,CAHD;EAAA;EAAA,MAG9BK,OAH8B;EAAA,MAGrBC,UAHqB;;EAAA,mBAIGN,QAAQ,CAAC,EAAD,CAJX;EAAA;EAAA,MAI9BO,YAJ8B;EAAA,MAIhBC,eAJgB;;EAAA,mBAKTR,QAAQ,CAACD,KAAK,CAACU,MAAP,CALC;EAAA;EAAA,MAK9BA,MAL8B;EAAA,MAKtBC,SALsB;;EAAA,oBAMGV,QAAQ,CAACD,KAAK,CAACY,YAAP,CANX;EAAA;EAAA,MAM9BA,YAN8B;EAAA,MAMhBC,eANgB;;EAAA,oBAOTZ,QAAQ,CAACD,KAAK,CAACc,MAAP,CAPC;EAAA;EAAA,MAO9BA,MAP8B;EAAA,MAOtBC,SAPsB;;EAQrC,MAAMC,UAAU,GAAGhB,KAAK,CAACiB,EAAzB;;EACA,MAAMC,YAAY,GAAG,MAAM;IACvB;IAEE,oBACE,oBAAC,SAAD;MAAA;QAAA;QAAA;MAAA;MAAA;IAAA,gBACE,oBAAC,UAAD;MAAY,MAAM,EAAEN,YAApB;MAAA;QAAA;QAAA;MAAA;MAAA;IAAA,gBACE,oBAAC,KAAD;MAAA;QAAA;QAAA;MAAA;MAAA;IAAA,4HAA8BF,MAA9B,oBAA0CR,SAAS,CAACiB,MAApD,sDADF,eAEE,oBAAC,MAAD;MACE,OAAO,GAAE,MACPd,QAAQ,CAAC,CAAD,CADD,EAEPQ,eAAe,CAAC,KAAD,CAFR,EAGPE,SAAS,CAAC,IAAD,CAHF,EAIPJ,SAAS,CAAC,CAAD,CAJJ,CADT;MAQE,KAAK,EAAE;QACLS,QAAQ,EAAE,QADL;QAELC,UAAU,EAAE,MAFP;QAGLC,KAAK,EAAE,KAHF;QAILC,MAAM,EAAE,MAJH;QAKLC,MAAM,EAAE,MALH;QAMLC,YAAY,EAAE,KANT;QAOLC,SAAS,EAAE;MAPN,CART;MAAA;QAAA;QAAA;MAAA;MAAA;IAAA,6GAFF,CADF,CADF;EA2BD,CA9BL;AA+BH"},"metadata":{},"sourceType":"module"}