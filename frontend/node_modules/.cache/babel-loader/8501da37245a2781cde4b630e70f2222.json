{"ast":null,"code":"var _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\admin\\\\Materials\\\\allmaterials.js\";\nimport React, { Component } from 'react';\nimport { Table, Input, Button, Typography, Icon, Divider, Modal, Popconfirm, Select, Row, Col, Skeleton, Tabs } from 'antd';\nimport { MasterDetailsViewItem, MasterDetailsViewItemMaster, MasterDetailsView, MasterDetailsViewItemDetails, Text } from 'react-desktop/windows';\nimport Highlighter from 'react-highlight-words';\nimport { connect } from 'react-redux';\nimport { ChangeMaterialSearchText, ChangeMaterialTableData, ChangeMaterialModalState } from '../../../actions/chapterAction';\nimport '../Chapter/allchapter.css';\nimport Alert from '../../../components/common/alert';\nimport { SecurePost, SecureGet } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport NewMaterialForm from './newmaterials';\nimport { updateQuestiosnActiveTest } from '../../../actions/trainerAction'; //import SingleQuestion from '../../trainee/examPortal/singleQuestion';\n\nimport AllQuestions from '../../trainer/allquestions/allquestion';\nimport AllSlides from '../Slides/allslides';\nimport Test from '../Test/test';\nconst TabPane = Tabs.TabPane;\n\nclass AllMaterial extends Component {\n  constructor(props) {\n    super(props);\n\n    this.tabChange = key => {\n      console.log(key);\n    };\n\n    this.OpenTestModal = id => {\n      this.setState((previousState, previousProps) => {\n        return {\n          testId: id,\n          testModelVisible: true\n        };\n      });\n    };\n\n    this.CloseTestModal = () => {\n      this.setState((previousState, previousProps) => {\n        return {\n          testId: null,\n          testModelVisible: false\n        };\n      });\n    };\n\n    this.openModal = (id, mode) => {\n      this.props.ChangeMaterialModalState(true, id, mode);\n    };\n\n    this.closeModal = () => {\n      this.props.ChangeMaterialModalState(false, null, 'Регистрация');\n    };\n\n    this.deleteMaterial = id => {\n      SecurePost({\n        url: \"\".concat(apis.DELETE_MATERIAL),\n        data: {\n          _id: id\n        }\n      }).then(response => {\n        if (response.data.success) {\n          Alert('success', 'Успешно', response.data.message);\n          this.props.ChangeMaterialTableData();\n        } else {\n          return Alert('warning', 'Предупреждение!', response.data.message);\n        }\n      }).catch(error => {\n        return Alert('error', 'Ошибка!', 'Ошибка сервера');\n      });\n    };\n\n    this.state = {\n      testId: null,\n      testModelVisible: false,\n      MaterialtableLoading: false,\n      details: null,\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.props.ChangeMaterialTableData();\n    var ID = this.props.id;\n    SecureGet({\n      url: \"\".concat(apis.GET_SINGLE_CHAPTER_DETAILS, \"/\").concat(ID)\n    }).then(response => {\n      console.log(response.data.data[0]);\n      this.setState({\n        details: response.data.data[0],\n        loading: false\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  // getColumnSearchProps = dataIndex => ({\n  //     filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n  //       <div style={{ padding: 8 }}>\n  //         <Input\n  //           ref={node => {\n  //             this.searchInput = node;\n  //           }}\n  //           placeholder={`Search ${dataIndex}`}\n  //           value={selectedKeys[0]}\n  //           onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n  //           onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\n  //           style={{ width: 188, marginBottom: 8, display: 'block' }}\n  //         />\n  //         <Button\n  //           type=\"primary\"\n  //           onClick={() => this.handleSearch(selectedKeys, confirm)}\n  //           icon=\"search\"\n  //           size=\"small\"\n  //           style={{ width: 90, marginRight: 8 }}\n  //         >\n  //           Поиск\n  //         </Button>\n  //         <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n  //           Сброс\n  //         </Button>\n  //       </div>\n  //     ),\n  //     filterIcon: filtered => (\n  //       <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\n  //     ),\n  //     onFilter: (value, record) =>\n  //       record[dataIndex]\n  //         .toString()\n  //         .toLowerCase()\n  //         .includes(value.toLowerCase()),\n  //     onFilterDropdownVisibleChange: visible => {\n  //       if (visible) {\n  //         setTimeout(() => this.searchInput.select());\n  //       }\n  //     },\n  //     render: text => (\n  //       <Highlighter\n  //         highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n  //         searchWords={[this.props.chapter.MaterialsearchText]}\n  //         autoEscape\n  //         textToHighlight={text.toString()}\n  //       />\n  //     ),\n  //   });\n  // handleSearch = (selectedKeys, confirm) => {\n  //   confirm();\n  //   this.props.ChangeMaterialSearchText(selectedKeys[0])\n  // };\n  // handleReset = clearFilters => {\n  //   clearFilters();\n  //   this.props.ChangeMaterialSearchText('')\n  // };\n  render() {\n    const Title = Typography.Title;\n    const columns = [{\n      title: '№',\n      dataIndex: 'num',\n      key: 'num',\n      width: '5%'\n    }, {\n      title: 'Наименование',\n      dataIndex: 'topic',\n      key: 'topic',\n      width: '5%'\n    }, {\n      dataIndex: '_id',\n      key: '_id',\n      render: key => React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        shape: \"circle\",\n        style: {\n          float: 'right'\n        },\n        icon: \"edit\",\n        onClick: () => this.openModal(key, 'Сохранить'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      })) // {\n      //     title: 'Материалы',\n      //     dataIndex: 'slides',\n      //     key: 'slides',\n      //     width: '25%',\n      //     render: (key) => (\n      //       <div>\n      //         <img src={key} style={{width: \"50%\"}}/>   \n      //       </div>\n      //     )\n      //   },\n      // {\n      //   title: 'Действие',\n      //   key: '_id',\n      //   dataIndex: '_id',\n      //   width: '25%',\n      //   render: (key) => (\n      //     <span>\n      //       <Button type=\"primary\" shape=\"circle\" icon=\"edit\" onClick={()=>this.openModal(key,'Сохранить')}/>\n      //         <Divider type=\"vertical\" />\n      //         <Popconfirm\n      //           title=\"Вы уверены？\"\n      //           cancelText=\"Нет\"\n      //           okText=\"Да\"\n      //           onConfirm={()=>{this.deleteMaterial(key)}}\n      //           icon={<Icon type=\"delete\" style={{ color: 'red' }} />}\n      //         >\n      //           <Button type=\"danger\" shape=\"circle\" icon=\"delete\" />\n      //         </Popconfirm>\n      //         <Divider type=\"vertical\" />\n      //     </span>\n      //   ),\n      // },\n\n    }];\n    return React.createElement(\"div\", {\n      className: \"admin-table-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      icon: \"user-add\",\n      style: {\n        marginBottom: '10px'\n      },\n      onClick: () => this.openModal(null, 'Регистрация'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(Skeleton, {\n      loading: this.state.loading,\n      active: true,\n      avatar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(MasterDetailsView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, this.props.chapter.materialTableData.map((d, i) => React.createElement(MasterDetailsViewItem, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(MasterDetailsViewItemMaster, {\n      push: true,\n      width: \"300px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(Table //bordered={true} \n    , {\n      columns: columns,\n      dataSource: this.props.chapter.materialTableData.filter(el => d.topic === el.topic),\n      size: \"medium\" //pagination={{ pageSize: 5 }}\n      ,\n      loading: this.props.chapter.materialTableLoadingStatus,\n      rowKey: \"_id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    })), React.createElement(MasterDetailsViewItemDetails, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      defaultActiveKey: \"1\",\n      onChange: e => this.tabChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(TabPane, {\n      tab: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }), \"\\u0421\\u043B\\u0430\\u0439\\u0434\\u044B\"),\n      key: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(AllSlides, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    })), React.createElement(TabPane, {\n      tab: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"question-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }), \"\\u0412\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B\"),\n      key: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(AllQuestions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }))))))))), React.createElement(Modal, {\n      visible: this.props.chapter.MaterialmodalOpened,\n      title: false,\n      onOk: this.handleOk,\n      onCancel: this.closeModal,\n      style: {\n        top: '20px',\n        padding: '0px',\n        backgroundColor: 'rgb(155,175,190)'\n      },\n      width: \"40%\",\n      destroyOnClose: true,\n      footer: [],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(NewMaterialForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  chapter: state.chapter,\n  trainer: state.trainer\n});\n\nexport default connect(mapStateToProps, {\n  ChangeMaterialSearchText,\n  ChangeMaterialTableData,\n  ChangeMaterialModalState\n})(AllMaterial);","map":{"version":3,"sources":["C:\\React_project\\EduTest\\frontend\\src\\components\\admin\\Materials\\allmaterials.js"],"names":["React","Component","Table","Input","Button","Typography","Icon","Divider","Modal","Popconfirm","Select","Row","Col","Skeleton","Tabs","MasterDetailsViewItem","MasterDetailsViewItemMaster","MasterDetailsView","MasterDetailsViewItemDetails","Text","Highlighter","connect","ChangeMaterialSearchText","ChangeMaterialTableData","ChangeMaterialModalState","Alert","SecurePost","SecureGet","apis","NewMaterialForm","updateQuestiosnActiveTest","AllQuestions","AllSlides","Test","TabPane","AllMaterial","constructor","props","tabChange","key","console","log","OpenTestModal","id","setState","previousState","previousProps","testId","testModelVisible","CloseTestModal","openModal","mode","closeModal","deleteMaterial","url","DELETE_MATERIAL","data","_id","then","response","success","message","catch","error","state","MaterialtableLoading","details","loading","componentDidMount","ID","GET_SINGLE_CHAPTER_DETAILS","render","Title","columns","title","dataIndex","width","float","marginBottom","chapter","materialTableData","map","d","i","filter","el","topic","materialTableLoadingStatus","e","MaterialmodalOpened","handleOk","top","padding","backgroundColor","mapStateToProps","trainer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Table, Input, Button, Typography, Icon, Divider, Modal, Popconfirm, Select, Row, Col, Skeleton, Tabs, } from 'antd';\r\nimport {\r\n  MasterDetailsViewItem,\r\n  MasterDetailsViewItemMaster,\r\n  MasterDetailsView,\r\n  MasterDetailsViewItemDetails,\r\n  Text\r\n} from 'react-desktop/windows';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    ChangeMaterialSearchText,\r\n    ChangeMaterialTableData,\r\n    ChangeMaterialModalState\r\n} from '../../../actions/chapterAction';\r\nimport '../Chapter/allchapter.css';\r\nimport Alert from '../../../components/common/alert';\r\nimport {SecurePost, SecureGet} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport NewMaterialForm from './newmaterials';\r\nimport {updateQuestiosnActiveTest } from '../../../actions/trainerAction';\r\n//import SingleQuestion from '../../trainee/examPortal/singleQuestion';\r\nimport AllQuestions from '../../trainer/allquestions/allquestion';\r\nimport AllSlides from '../Slides/allslides';\r\nimport Test from '../Test/test';\r\n\r\nconst {TabPane} = Tabs;\r\n\r\nclass AllMaterial extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      testId : null,\r\n      testModelVisible:false,\r\n      MaterialtableLoading : false,\r\n      details: null,\r\n      loading:true\r\n    }\r\n  }\r\n  tabChange = (key)=>{\r\n    console.log(key)\r\n  }\r\n\r\n  OpenTestModal = (id)=>{\r\n    this.setState((previousState,previousProps)=>{\r\n      return{\r\n        testId:id,\r\n        testModelVisible:true\r\n      }\r\n    })\r\n  }\r\n\r\n  CloseTestModal = ()=>{\r\n    this.setState((previousState,previousProps)=>{\r\n      return{\r\n        testId:null,\r\n        testModelVisible:false\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.ChangeMaterialTableData();\r\n    var ID = this.props.id;\r\n        SecureGet({\r\n            url: `${apis.GET_SINGLE_CHAPTER_DETAILS}/${ID}`,\r\n        }).then((response)=>{\r\n            console.log(response.data.data[0]);\r\n            this.setState({\r\n                details : response.data.data[0],\r\n                loading : false\r\n            })\r\n        }).catch((error)=>{\r\n            console.log(error);\r\n        })\r\n  }\r\n\r\n\r\n  openModal = (id,mode)=>{\r\n    this.props.ChangeMaterialModalState(true, id, mode);\r\n  }\r\n\r\n  closeModal = ()=>{\r\n    this.props.ChangeMaterialModalState(false, null, 'Регистрация');\r\n  }\r\n\r\n\r\n  deleteMaterial = (id)=>{\r\n    SecurePost({\r\n      url : `${apis.DELETE_MATERIAL}`,\r\n      data : {\r\n          _id : id\r\n      }\r\n    }).then((response)=>{\r\n      if(response.data.success){\r\n        Alert('success','Успешно',response.data.message);\r\n        this.props.ChangeMaterialTableData();\r\n      }\r\n      else{\r\n        return Alert('warning','Предупреждение!',response.data.message);\r\n      }\r\n    }).catch((error)=>{\r\n      return Alert('error','Ошибка!','Ошибка сервера');\r\n    })\r\n  }\r\n\r\n    // getColumnSearchProps = dataIndex => ({\r\n    //     filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n    //       <div style={{ padding: 8 }}>\r\n    //         <Input\r\n    //           ref={node => {\r\n    //             this.searchInput = node;\r\n    //           }}\r\n    //           placeholder={`Search ${dataIndex}`}\r\n    //           value={selectedKeys[0]}\r\n    //           onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n    //           onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n    //           style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n    //         />\r\n    //         <Button\r\n    //           type=\"primary\"\r\n    //           onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n    //           icon=\"search\"\r\n    //           size=\"small\"\r\n    //           style={{ width: 90, marginRight: 8 }}\r\n    //         >\r\n    //           Поиск\r\n    //         </Button>\r\n    //         <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n    //           Сброс\r\n    //         </Button>\r\n    //       </div>\r\n    //     ),\r\n    //     filterIcon: filtered => (\r\n    //       <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n    //     ),\r\n    //     onFilter: (value, record) =>\r\n    //       record[dataIndex]\r\n    //         .toString()\r\n    //         .toLowerCase()\r\n    //         .includes(value.toLowerCase()),\r\n    //     onFilterDropdownVisibleChange: visible => {\r\n    //       if (visible) {\r\n    //         setTimeout(() => this.searchInput.select());\r\n    //       }\r\n    //     },\r\n    //     render: text => (\r\n    //       <Highlighter\r\n    //         highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n    //         searchWords={[this.props.chapter.MaterialsearchText]}\r\n    //         autoEscape\r\n    //         textToHighlight={text.toString()}\r\n    //       />\r\n    //     ),\r\n    //   });\r\n    \r\n      // handleSearch = (selectedKeys, confirm) => {\r\n      //   confirm();\r\n      //   this.props.ChangeMaterialSearchText(selectedKeys[0])\r\n      // };\r\n    \r\n      // handleReset = clearFilters => {\r\n      //   clearFilters();\r\n      //   this.props.ChangeMaterialSearchText('')\r\n      // };\r\n\r\n    render() {\r\n      const { Title } = Typography;\r\n      const columns = [\r\n        {\r\n          title: '№',\r\n          dataIndex: 'num',\r\n          key: 'num',\r\n          width: '5%',\r\n        },   \r\n        {\r\n          title: 'Наименование',\r\n          dataIndex: 'topic',\r\n          key: 'topic',\r\n          width: '5%',\r\n        },   \r\n        {\r\n          dataIndex: '_id',\r\n          key: '_id',\r\n          render: (key) => (\r\n            <span>\r\n              <Button type=\"primary\" shape=\"circle\" style={{float: 'right'}} icon=\"edit\" onClick={()=>this.openModal(key,'Сохранить')}/> \r\n              {/* <Button type=\"primary\" shape=\"circle\" icon=\"edit\" onClick={()=>this.openModal(key,'Сохранить')}/> */}\r\n          </span>\r\n          ),\r\n        }\r\n        // {\r\n        //     title: 'Материалы',\r\n        //     dataIndex: 'slides',\r\n        //     key: 'slides',\r\n        //     width: '25%',\r\n        //     render: (key) => (\r\n  \r\n        //       <div>\r\n        //         <img src={key} style={{width: \"50%\"}}/>   \r\n        //       </div>\r\n        //     )\r\n        //   },\r\n        \r\n        // {\r\n        //   title: 'Действие',\r\n        //   key: '_id',\r\n        //   dataIndex: '_id',\r\n        //   width: '25%',\r\n        //   render: (key) => (\r\n        //     <span>\r\n        //       <Button type=\"primary\" shape=\"circle\" icon=\"edit\" onClick={()=>this.openModal(key,'Сохранить')}/>\r\n        //         <Divider type=\"vertical\" />\r\n        //         <Popconfirm\r\n        //           title=\"Вы уверены？\"\r\n        //           cancelText=\"Нет\"\r\n        //           okText=\"Да\"\r\n        //           onConfirm={()=>{this.deleteMaterial(key)}}\r\n        //           icon={<Icon type=\"delete\" style={{ color: 'red' }} />}\r\n        //         >\r\n        //           <Button type=\"danger\" shape=\"circle\" icon=\"delete\" />\r\n        //         </Popconfirm>\r\n        //         <Divider type=\"vertical\" />\r\n                \r\n        //     </span>\r\n        //   ),\r\n        // },\r\n      ];\r\n      return(\r\n        <div className=\"admin-table-container\">\r\n          {/* <Skeleton loading={this.state.loading} active avatar>\r\n            <Tabs defaultActiveKey=\"1\" onChange={ (e)=>this.tabChange(e)}>\r\n              <TabPane tab={ <span><Icon type=\"home\" />Материалы</span> } key=\"1\"> */}\r\n              \r\n                <Button type=\"primary\" icon=\"user-add\" style={{marginBottom:'10px'}} onClick={()=>this.openModal(null,'Регистрация')}>\r\n                  Добавить\r\n                </Button>\r\n                <div>\r\n                <Skeleton loading={this.state.loading} active avatar>\r\n                  <MasterDetailsView >\r\n                    { this.props.chapter.materialTableData.map((d,i)=>\r\n                    <MasterDetailsViewItem key={i}>\r\n                      <MasterDetailsViewItemMaster push width='300px'>\r\n                        <Table \r\n                            //bordered={true} \r\n                            columns={columns} \r\n                            dataSource={this.props.chapter.materialTableData.filter((el)=>d.topic === el.topic)} \r\n                            size=\"medium\" \r\n                            //pagination={{ pageSize: 5 }}\r\n                            loading={this.props.chapter.materialTableLoadingStatus}\r\n                            rowKey=\"_id\" \r\n                          />\r\n                        {/* {d.topic} */}\r\n                        {/* <Button type=\"primary\" icon=\"edit\" style={{float: 'right'}} onClick={()=>this.OpenTestModal(d._id)}>Тест</Button> */}\r\n                        {/* <Button type=\"primary\" shape=\"circle\" style={{float: 'right'}} icon=\"edit\" onClick={()=>this.openModal(d._id,'Сохранить')}/> */}\r\n                      </MasterDetailsViewItemMaster>\r\n                      \r\n                      <MasterDetailsViewItemDetails>                  \r\n                          {/* <Table \r\n                            bordered={true} \r\n                            columns={columns} \r\n                            dataSource={this.props.chapter.materialTableData.filter((el)=>d.topic === el.topic)} \r\n                            size=\"medium\" \r\n                            pagination={{ pageSize: 5 }}\r\n                            loading={this.props.chapter.materialTableLoadingStatus}\r\n                            rowKey=\"_id\" \r\n                          /> */}\r\n                        {/* <Skeleton loading={this.state.loading} active avatar> */}\r\n                          <Tabs defaultActiveKey=\"1\" onChange={ (e)=>this.tabChange(e)}>\r\n                            <TabPane tab={ <span><Icon type=\"home\" />Слайды</span> } key=\"1\">\r\n                              <AllSlides></AllSlides>\r\n                            </TabPane>\r\n                            <TabPane tab={ <span><Icon type=\"question-circle\" />Вопросы</span> } key=\"2\">\r\n                              <AllQuestions></AllQuestions>\r\n                            </TabPane>\r\n                          </Tabs>   \r\n                        {/* </Skeleton> */}\r\n\r\n                        </MasterDetailsViewItemDetails>\r\n                      </MasterDetailsViewItem>\r\n                    )}\r\n                      </MasterDetailsView >\r\n                  \r\n                \r\n                </Skeleton>\r\n                </div>\r\n                <Modal\r\n                      visible={this.props.chapter.MaterialmodalOpened}\r\n                      title={false}\r\n                      onOk={this.handleOk}\r\n                      onCancel={this.closeModal}\r\n                      style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\r\n                      width=\"40%\"\r\n                      destroyOnClose={true}\r\n                      footer={[]}\r\n                  >\r\n                   \r\n                  <NewMaterialForm />\r\n                </Modal> \r\n                {/* <Modal\r\n                      visible={this.props.MaterialmodalOpened}\r\n                      title={false}\r\n                      onCancel={this.CloseModal}\r\n                      style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\r\n                      width=\"70%\"\r\n                      destroyOnClose={true}\r\n                      footer={[]}\r\n                  >\r\n                  <Test id={this.state.testId} />\r\n                </Modal>           */}\r\n              {/* </TabPane>\r\n              <TabPane tab={ <span><Icon type=\"question-circle\" />Вопросы</span> } key=\"2\">\r\n                <AllQuestions></AllQuestions>\r\n            \r\n              </TabPane>\r\n            </Tabs>   \r\n                    \r\n          </Skeleton> */}\r\n\r\n        </div>\r\n      )}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  chapter : state.chapter,\r\n  trainer : state.trainer\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeMaterialSearchText,\r\n    ChangeMaterialTableData,\r\n    ChangeMaterialModalState,\r\n})(AllMaterial);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}