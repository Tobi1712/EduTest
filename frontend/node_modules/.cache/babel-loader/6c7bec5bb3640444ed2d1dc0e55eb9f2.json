{"ast":null,"code":"import _slicedToArray from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport { css as _css } from \"styled-components\";\nvar _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\customer\\\\Testing\\\\testpage.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n          left: 25rem;\\n        \"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n          right: 25rem;\\n        \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'antd'; // import Highlighter from 'react-highlight-words';\n\nimport { ChangeAnswersSearchText, ChangeAnswersTableData } from '../../../actions/chapterAction';\nimport Alert from '../../../components/common/alert';\nimport { SecurePost, SecureGet } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport styled from \"styled-components\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport Counter from './Counter';\nconst Container = styled.div.withConfig({\n  displayName: \"testpage__Container\",\n  componentId: \"sc-1thigeq-0\"\n})([\"display:flex;justify-content:center;align-items:center;min-height:80vh;width:100%;\"]);\nconst ScreenQuiz = styled.div.withConfig({\n  displayName: \"testpage__ScreenQuiz\",\n  componentId: \"sc-1thigeq-1\"\n})([\"display:flex;justify-content:\", \";align-items:center;flex-direction:column;max-width:1200px;padding:\", \";width:100%;height:80vh;background:#fff;border-radius:5px;box-shadow:0px 5px 40px -20px #000;\"], props => props.screen ? \"space-between\" : \"center\", props => props.screen ? \"5rem\" : \".5rem\");\nconst Title = styled.h1.withConfig({\n  displayName: \"testpage__Title\",\n  componentId: \"sc-1thigeq-2\"\n})([\"font-size:2.5rem;margin-bottom:0.5rem;text-align:center;max-width:90%;\"]);\nconst Paragraph = styled.p.withConfig({\n  displayName: \"testpage__Paragraph\",\n  componentId: \"sc-1thigeq-3\"\n})([\"font-size:1.5rem;\"]); // const Button = styled.button`\n//   font-size: 1.2rem;\n//   font-weight: bold;\n//   width: 40%;\n//   height: 3rem;\n//   // color: #fff;\n//   border: none;\n//   // background: #7159c1;\n//   border-radius: 5px;\n//   box-shadow: 0px 3px 3px 0px #666;\n//   @-webkit-keyframes pulsate {\n//     0% {transform: scale(0.1, 0.1); opacity: 0.0;}\n//     50% {opacity: 1.0;}\n//     100% {transform: scale(7, 7); opacity: 0.0;}\n// }\n// `;\n\nconst ButtonScr = styled.button.withConfig({\n  displayName: \"testpage__ButtonScr\",\n  componentId: \"sc-1thigeq-4\"\n})([\"font-size:1.4rem;z-index:10;position:fixed;top:15%;\", \"\"], props => props.right ? _css(_templateObject()) : _css(_templateObject2()));\nconst ContainerLabel = styled.div.withConfig({\n  displayName: \"testpage__ContainerLabel\",\n  componentId: \"sc-1thigeq-5\"\n})([\"display:flex;align-items:flex-start;flex-direction:column;margin:0 auto 0.5rem auto;\"]);\nconst Label = styled.label.withConfig({\n  displayName: \"testpage__Label\",\n  componentId: \"sc-1thigeq-6\"\n})([\"display:flex;justify-content:center;align-items:center;\"]);\nconst Radio = styled.input.attrs({\n  type: 'checkbox'\n}).withConfig({\n  displayName: \"testpage__Radio\",\n  componentId: \"sc-1thigeq-7\"\n})([\"display:flex;justify-content:center;align-items:center;width:15px;height:15px;border-radius:50%;border:7.5px solid black;margin:0 0.5rem 0 0;background:\", \";\"], props => props.clickedLabel ? \"#7159c1\" : \"#fff\"); // const IntoRadio = styled.div`\n//   width: 5px;\n//   height: 5px;\n//   border-radius: 3px;\n//   background: #fff;\n// `;\n// const Error = styled.div`\n//   top: 22rem;\n//   color: red;\n//   position: absolute;\n//   font-weight: bold;\n// `;\n\nexport default function TestPage(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        questions = _useState2[0],\n        setQuestions = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        count = _useState4[0],\n        setCount = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        checked = _useState6[0],\n        setChecked = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        clickedLabel = _useState8[0],\n        setClickedLabel = _useState8[1];\n\n  const _useState9 = useState(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        answer = _useState10[0],\n        setAnswer = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        screenFinish = _useState12[0],\n        setScreenFinish = _useState12[1]; // constructor(props){\n  //   super(props);\n  //   this.state={\n  //     questions:[],\n  //     loading:false,\n  //     screen: true,\n  //     count: 0,\n  //     clickedLabel: [],\n  //     answer: 0,\n  //     error:false,\n  //     screenFinish:false,\n  //     second:60,\n  //     time:{},\n  //     checked:false,\n  //     testStarted:false,\n  //     testEnded:false,\n  //     testDidNotStart:true,\n  //     details:[],\n  //   }\n  // }\n  // componentDidMount(){\n  //   console.log(\"1 - componentDidMount\")\n  //   this.props.ChangeAnswersTableData(this.props.id);\n  //   console.log(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\", this.props.chapter.AnswerTableData[0])\n  //   var questions=[];\n  //   if(this.props.chapter.AnswerTableData.length === 0){\n  //     return Alert('warning',\"Сперва пройдите материалы\")\n  //   }\n  //   else{\n  //     this.props.chapter.AnswerTableData[0].chosenOption.map((d,i)=>{\n  //       questions[i]=(\n  //             {\n  //               question : d.questionText,\n  //               isOneTrueAnswer : (d.options[0].isAnswer + d.options[1].isAnswer + d.options[2].isAnswer + d.options[3].isAnswer \n  //                 + d.options[4].isAnswer)===1 ? true : false,\n  //               // questionImage : d.quesimg,\n  //               answerOptions: [\n  //                 { answerText: d.options[0].answers, UserAnswer: d.options[0].userAnswer, correctAnswer: d.options[0].isAnswer },\n  //                 { answerText: d.options[1].answers, UserAnswer: d.options[1].userAnswer, correctAnswer: d.options[1].isAnswer },\n  //                 { answerText: d.options[2].answers, UserAnswer: d.options[2].userAnswer, correctAnswer: d.options[2].isAnswer },\n  //                 { answerText: d.options[3].answers, UserAnswer: d.options[3].userAnswer, correctAnswer: d.options[3].isAnswer },\n  //                 { answerText: d.options[4].answers, UserAnswer: d.options[4].userAnswer, correctAnswer: d.options[4].isAnswer }\n  //               ]\n  //             }\n  //           )\n  //     })\n  //   }\n  //   console.log(\"1 - End cDM\")\n  //   this.setState({\n  //     questions:questions,\n  //     loading:true\n  //   })\n  // }\n\n\n  const handleNextClick = c => {\n    setCount(count + 1);\n    setChecked(false);\n  };\n\n  const handlePrevClick = () => {\n    if (questions.length >= count && count > 0) {\n      setCount(count - 1);\n      setChecked(false);\n    }\n  };\n\n  const handleClick = c => {\n    if (questions.length >= count && clickedLabel.answerText) {\n      setQuestions(questions);\n      setCount(c + 1);\n      setClickedLabel(clickedLabel.correctAnswer ? answer + 1 : answer);\n    }\n  };\n\n  const handleEndClick = c => {\n    if (questions.length === count) {\n      setScreenFinish(true);\n    }\n  };\n\n  const handleOptions = (answerOptions, c) => {\n    //   const { clickedLabel,questions } = this.state;\n    return answerOptions.map((a, i) => {\n      return /*#__PURE__*/React.createElement(Label, {\n        key: i,\n        onClick: () => {\n          setQuestions(questions);\n          setClickedLabel(a);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, questions[c].isOneTrueAnswer === false ? /*#__PURE__*/React.createElement(Radio, {\n        checked: a.UserAnswer,\n        onChange: e => this.handleChange(e, answerOptions, c, i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }) : /*#__PURE__*/React.createElement(Radio, {\n        checked: a.UserAnswer,\n        onChange: e => this.handleChange2(e, answerOptions, c, i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }), /*#__PURE__*/React.createElement(Paragraph, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, a.answerText));\n    });\n  };\n\n  const handleChange = (e, answerOptions, c, i) => {\n    const questions = this.state.questions;\n    questions[c].answerOptions[i].UserAnswer = true;\n    this.setState({\n      questions: questions\n    });\n  };\n\n  const handleChange2 = (e, answerOptions, c, i) => {\n    const questions = this.state.questions;\n    questions[c].answerOptions[i].UserAnswer = true;\n\n    if (questions[c].answerOptions[i].UserAnswer === true) {\n      answerOptions.map((d, j) => {\n        if (i !== j) {\n          questions[c].answerOptions[j].UserAnswer = false;\n        }\n      });\n    }\n\n    this.setState({\n      questions: questions\n    });\n  };\n\n  const renderQuestions = () => {\n    //   const { count,questions } = this.state;\n    const NewQuestions = Array.from(questions);\n    console.log(\"5 - removeQuestions\", NewQuestions);\n    const removeQuestions = NewQuestions.slice(count, count + 1);\n    console.log(\"4 - removeQuestions\", removeQuestions);\n    return removeQuestions.map((q, i) => /*#__PURE__*/React.createElement(Container, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(ScreenQuiz, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(Counter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, count, \"/\", questions.length), /*#__PURE__*/React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, q.question), /*#__PURE__*/React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, count), /*#__PURE__*/React.createElement(ContainerLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, handleOptions(q.answerOptions, count)), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => handleClick(count),\n      style: {\n        fontSize: \"1.2rem\",\n        fontWeight: \"bold\",\n        width: \"40%\",\n        height: \"3rem\",\n        border: \"none\",\n        borderRadius: \"5px\",\n        boxShadow: \"0px 3px 3px 0px #666\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), count === questions.length ? /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleEndClick,\n      style: {\n        marginTop: '30px',\n        fontSize: \"1.2rem\",\n        fontWeight: \"bold\",\n        width: \"40%\",\n        height: \"3rem\",\n        border: \"none\",\n        borderRadius: \"5px\",\n        boxShadow: \"0px 3px 3px 0px #666\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\") : null, /*#__PURE__*/React.createElement(ButtonScr, {\n      onClick: () => handleNextClick(count),\n      right: true,\n      disabled: count === questions.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, \"\\u0421\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u0438\\u0439\"), /*#__PURE__*/React.createElement(ButtonScr, {\n      onClick: handlePrevClick,\n      left: true,\n      disabled: count === 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, \"\\u041F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u0438\\u0439\"))));\n  };\n\n  const renderResult = () => {\n    //   const { answer,questions, screenFinish } = this.state;\n    return /*#__PURE__*/React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(ScreenQuiz, {\n      screen: screenFinish,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"\\u0412\\u044B \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u043E \\u043E\\u0442\\u0432\\u0435\\u0442\\u0438\\u043B\\u0438 \", answer, \" \\u0438\\u0437 \", questions.length, \" \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u043E\\u0432\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.setState({\n        count: 0,\n        screenFinish: false,\n        screen: true,\n        answer: 0\n      }),\n      style: {\n        fontSize: \"1.2rem\",\n        fontWeight: \"bold\",\n        width: \"40%\",\n        height: \"3rem\",\n        border: \"none\",\n        borderRadius: \"5px\",\n        boxShadow: \"0px 3px 3px 0px #666\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, \"\\u0422\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E\")));\n  };\n\n  useEffect(() => {\n    console.log(\"1 - props\", props.q[0]);\n    var questions1 = [];\n    props.q[0].chosenOption.map((d, i) => {\n      questions1[i] = {\n        question: d.questionText,\n        isOneTrueAnswer: d.options[0].isAnswer + d.options[1].isAnswer + d.options[2].isAnswer + d.options[3].isAnswer + d.options[4].isAnswer === 1 ? true : false,\n        // questionImage : d.quesimg,\n        answerOptions: [{\n          answerText: d.options[0].answers,\n          UserAnswer: d.options[0].userAnswer,\n          correctAnswer: d.options[0].isAnswer\n        }, {\n          answerText: d.options[1].answers,\n          UserAnswer: d.options[1].userAnswer,\n          correctAnswer: d.options[1].isAnswer\n        }, {\n          answerText: d.options[2].answers,\n          UserAnswer: d.options[2].userAnswer,\n          correctAnswer: d.options[2].isAnswer\n        }, {\n          answerText: d.options[3].answers,\n          UserAnswer: d.options[3].userAnswer,\n          correctAnswer: d.options[3].isAnswer\n        }, {\n          answerText: d.options[4].answers,\n          UserAnswer: d.options[4].userAnswer,\n          correctAnswer: d.options[4].isAnswer\n        }]\n      };\n    });\n    console.log(\"2 - questions\", questions1);\n    setQuestions(questions1);\n  }, []);\n  console.log(questions);\n  return renderQuestions(); // render() {\n  //   const { screenFinish, questions, screen } = this.state;\n  //   return !screenFinish && questions ? (\n  //     <>{screen ? this.renderScreenInitial() : this.renderQuestions()}</>\n  //   ) : (\n  //     this.renderResult()\n  //   );\n  // }\n} //   const mapStateToProps = state => ({\n//       chapter : state.chapter,\n//       trainer : state.trainer\n//   });\n//   export default connect(mapStateToProps,{\n//       ChangeAnswersSearchText,\n//       ChangeAnswersTableData\n//   })(TestPage);","map":{"version":3,"names":["React","Component","useState","useEffect","connect","Button","ChangeAnswersSearchText","ChangeAnswersTableData","Alert","SecurePost","SecureGet","apis","styled","Counter","Container","div","ScreenQuiz","props","screen","Title","h1","Paragraph","p","ButtonScr","button","right","css","ContainerLabel","Label","label","Radio","input","attrs","type","clickedLabel","TestPage","questions","setQuestions","count","setCount","checked","setChecked","setClickedLabel","answer","setAnswer","screenFinish","setScreenFinish","handleNextClick","c","handlePrevClick","length","handleClick","answerText","correctAnswer","handleEndClick","handleOptions","answerOptions","map","a","i","isOneTrueAnswer","UserAnswer","e","handleChange","handleChange2","state","setState","d","j","renderQuestions","NewQuestions","Array","from","console","log","removeQuestions","slice","q","question","fontSize","fontWeight","width","height","border","borderRadius","boxShadow","marginTop","renderResult","questions1","chosenOption","questionText","options","isAnswer","answers","userAnswer"],"sources":["C:/React_project/EduTest/frontend/src/components/customer/Testing/testpage.js"],"sourcesContent":["import React, { Component, useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Button } from 'antd';\r\n// import Highlighter from 'react-highlight-words';\r\nimport  { css } from 'styled-components/macro'\r\nimport { \r\n  ChangeAnswersSearchText,\r\n  ChangeAnswersTableData,\r\n} from '../../../actions/chapterAction';\r\nimport Alert from '../../../components/common/alert';\r\nimport { SecurePost, SecureGet } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport styled from \"styled-components\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport Counter from './Counter';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 80vh;\r\n  width: 100%;\r\n  /*background: #7159c1;*/\r\n`;\r\n\r\nconst ScreenQuiz = styled.div`\r\n  display: flex;\r\n  justify-content: ${props => (props.screen ? \"space-between\" : \"center\")};\r\n  align-items: center;\r\n  flex-direction: column;\r\n  max-width: 1200px;\r\n  padding: ${props => (props.screen ? \"5rem\" : \".5rem\")};\r\n  width: 100%;\r\n  height: 80vh;\r\n  background: #fff;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 5px 40px -20px #000;\r\n\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 2.5rem;\r\n  // color: #7159c1;\r\n  margin-bottom: 0.5rem;\r\n  text-align: center;\r\n  max-width: 90%;\r\n`;\r\n\r\nconst Paragraph = styled.p`\r\n  font-size: 1.5rem;\r\n`;\r\n\r\n// const Button = styled.button`\r\n//   font-size: 1.2rem;\r\n//   font-weight: bold;\r\n//   width: 40%;\r\n//   height: 3rem;\r\n//   // color: #fff;\r\n//   border: none;\r\n//   // background: #7159c1;\r\n//   border-radius: 5px;\r\n//   box-shadow: 0px 3px 3px 0px #666;\r\n\r\n//   @-webkit-keyframes pulsate {\r\n//     0% {transform: scale(0.1, 0.1); opacity: 0.0;}\r\n//     50% {opacity: 1.0;}\r\n//     100% {transform: scale(7, 7); opacity: 0.0;}\r\n// }\r\n// `;\r\n\r\nconst ButtonScr = styled.button`\r\n  font-size: 1.4rem;\r\n  z-index: 10;\r\n  position: fixed;\r\n  top: 15%;\r\n  ${(props) =>\r\n    props.right\r\n      ? css`\r\n          right: 25rem;\r\n        `\r\n      : css`\r\n          left: 25rem;\r\n        `}\r\n`\r\n\r\nconst ContainerLabel = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  margin: 0 auto 0.5rem auto;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Radio = styled.input.attrs({ type: 'checkbox' })`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 15px;\r\n  height: 15px;\r\n  border-radius: 50%;\r\n  border: 7.5px solid black;\r\n  margin: 0 0.5rem 0 0;\r\n  background: ${props => (props.clickedLabel ? \"#7159c1\" : \"#fff\")};\r\n`;\r\n\r\n// const IntoRadio = styled.div`\r\n//   width: 5px;\r\n//   height: 5px;\r\n//   border-radius: 3px;\r\n//   background: #fff;\r\n// `;\r\n\r\n// const Error = styled.div`\r\n//   top: 22rem;\r\n//   color: red;\r\n//   position: absolute;\r\n//   font-weight: bold;\r\n// `;\r\n\r\n\r\nexport default function TestPage(props) {\r\n    const [questions, setQuestions] = useState([])\r\n    const [count, setCount] = useState(0);\r\n    const [checked, setChecked] = useState(false)\r\n    const [clickedLabel, setClickedLabel] = useState([]);\r\n    const [answer, setAnswer] = useState(0);\r\n    const [screenFinish, setScreenFinish] = useState(false);\r\n\r\n    // constructor(props){\r\n    //   super(props);\r\n    //   this.state={\r\n    //     questions:[],\r\n    //     loading:false,\r\n    //     screen: true,\r\n    //     count: 0,\r\n    //     clickedLabel: [],\r\n    //     answer: 0,\r\n    //     error:false,\r\n    //     screenFinish:false,\r\n    //     second:60,\r\n    //     time:{},\r\n    //     checked:false,\r\n    //     testStarted:false,\r\n    //     testEnded:false,\r\n    //     testDidNotStart:true,\r\n    //     details:[],\r\n    //   }\r\n    // }\r\n  \r\n    // componentDidMount(){\r\n    //   console.log(\"1 - componentDidMount\")\r\n    //   this.props.ChangeAnswersTableData(this.props.id);\r\n    \r\n    //   console.log(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\", this.props.chapter.AnswerTableData[0])\r\n    //   var questions=[];\r\n    //   if(this.props.chapter.AnswerTableData.length === 0){\r\n    //     return Alert('warning',\"Сперва пройдите материалы\")\r\n    //   }\r\n    //   else{\r\n    //     this.props.chapter.AnswerTableData[0].chosenOption.map((d,i)=>{\r\n    //       questions[i]=(\r\n    //             {\r\n    //               question : d.questionText,\r\n    //               isOneTrueAnswer : (d.options[0].isAnswer + d.options[1].isAnswer + d.options[2].isAnswer + d.options[3].isAnswer \r\n    //                 + d.options[4].isAnswer)===1 ? true : false,\r\n    //               // questionImage : d.quesimg,\r\n    //               answerOptions: [\r\n    //                 { answerText: d.options[0].answers, UserAnswer: d.options[0].userAnswer, correctAnswer: d.options[0].isAnswer },\r\n    //                 { answerText: d.options[1].answers, UserAnswer: d.options[1].userAnswer, correctAnswer: d.options[1].isAnswer },\r\n    //                 { answerText: d.options[2].answers, UserAnswer: d.options[2].userAnswer, correctAnswer: d.options[2].isAnswer },\r\n    //                 { answerText: d.options[3].answers, UserAnswer: d.options[3].userAnswer, correctAnswer: d.options[3].isAnswer },\r\n    //                 { answerText: d.options[4].answers, UserAnswer: d.options[4].userAnswer, correctAnswer: d.options[4].isAnswer }\r\n    //               ]\r\n    //             }\r\n    //           )\r\n    //     })\r\n    //   }\r\n    //   console.log(\"1 - End cDM\")\r\n    //   this.setState({\r\n    //     questions:questions,\r\n    //     loading:true\r\n    //   })\r\n    // }\r\n\r\n    const handleNextClick=(c)=>{\r\n        setCount(count+1);\r\n        setChecked(false);\r\n    }\r\n\r\n    const handlePrevClick=()=>{\r\n      if (questions.length >= count && count>0) {\r\n        setCount(count-1);\r\n        setChecked(false);\r\n      } \r\n    }\r\n\r\n    const handleClick = (c)=> {\r\n      if (questions.length >= count && clickedLabel.answerText) {\r\n          setQuestions(questions);\r\n          setCount(c+1);\r\n          setClickedLabel(clickedLabel.correctAnswer ? answer + 1 : answer)\r\n      }\r\n    }\r\n\r\n    const handleEndClick = (c)=> {\r\n      if (questions.length === count) {\r\n          setScreenFinish(true);\r\n      }\r\n    }\r\n\r\n    const handleOptions = (answerOptions,c) => {\r\n    //   const { clickedLabel,questions } = this.state;\r\n      return answerOptions.map((a, i) => {\r\n        return (\r\n          <Label\r\n            key={i}\r\n            onClick={() =>{\r\n                setQuestions(questions);\r\n                setClickedLabel(a);\r\n            }\r\n            }\r\n          >\r\n            { questions[c].isOneTrueAnswer===false ?\r\n            <Radio \r\n              checked={a.UserAnswer} \r\n              onChange={e => this.handleChange(e,answerOptions, c,i)}\r\n            />\r\n            :\r\n            <Radio  \r\n              checked={a.UserAnswer}\r\n              onChange={e => this.handleChange2(e,answerOptions, c,i)}\r\n            />\r\n            }\r\n            <Paragraph>{a.answerText}</Paragraph>\r\n          </Label>\r\n          \r\n        );\r\n      });\r\n    };\r\n\r\n    const handleChange = (e,answerOptions, c, i) => {\r\n      const { questions } = this.state\r\n        questions[c].answerOptions[i].UserAnswer=true;\r\n        \r\n        this.setState({\r\n          questions:questions,\r\n        });\r\n    };\r\n\r\n    const handleChange2 = (e,answerOptions, c, i) => {\r\n      const { questions } = this.state\r\n      questions[c].answerOptions[i].UserAnswer=true;\r\n\r\n      if(questions[c].answerOptions[i].UserAnswer===true){\r\n        answerOptions.map((d,j) =>{\r\n          if(i!==j){\r\n            questions[c].answerOptions[j].UserAnswer=false;\r\n          }\r\n        })\r\n      }\r\n        this.setState({\r\n          questions:questions,\r\n        });\r\n    };\r\n\r\n    const renderQuestions = () => {\r\n    //   const { count,questions } = this.state;\r\n      const NewQuestions = Array.from(questions);\r\n      console.log(\"5 - removeQuestions\", NewQuestions)\r\n      const removeQuestions = NewQuestions.slice(count, count+1);\r\n      console.log(\"4 - removeQuestions\", removeQuestions)\r\n      return removeQuestions.map((q, i) => (\r\n\r\n        <Container key={i}>\r\n          <ScreenQuiz>\r\n            <Counter/>\r\n\r\n            <h3>{count}/{questions.length}</h3>\r\n            <Title>{q.question}</Title>         \r\n            <label>{count}</label>\r\n            <ContainerLabel>\r\n              {handleOptions(q.answerOptions, count)}\r\n            </ContainerLabel>\r\n            <Button onClick={()=>handleClick(count)}\r\n                          style={{\r\n                            fontSize: \"1.2rem\", \r\n                            fontWeight: \"bold\",\r\n                            width: \"40%\",\r\n                            height: \"3rem\",\r\n                            border: \"none\",\r\n                            borderRadius: \"5px\",\r\n                            boxShadow: \"0px 3px 3px 0px #666\"\r\n                          }}\r\n            >\r\n                Сохранить\r\n            </Button>\r\n            { count===questions.length ?\r\n            <Button onClick={this.handleEndClick}\r\n              style={{\r\n                marginTop: '30px',\r\n                fontSize: \"1.2rem\", \r\n                fontWeight: \"bold\",\r\n                width: \"40%\",\r\n                height: \"3rem\",\r\n                border: \"none\",\r\n                borderRadius: \"5px\",\r\n                boxShadow: \"0px 3px 3px 0px #666\"\r\n              }}\r\n            >\r\n                Завершить тест\r\n            </Button>\r\n              : null\r\n          }\r\n            <ButtonScr onClick={()=>handleNextClick(count)} right disabled={count === questions.length}>Следующий</ButtonScr>\r\n            <ButtonScr onClick={handlePrevClick} left disabled={count===1}>Предыдущий</ButtonScr>\r\n          </ScreenQuiz>\r\n        </Container>\r\n\r\n      ));\r\n    };\r\n  \r\n    const renderResult = () => {\r\n    //   const { answer,questions, screenFinish } = this.state;\r\n  \r\n      return (\r\n        <Container>\r\n          <ScreenQuiz screen={screenFinish}>\r\n            <Title>Вы правильно ответили {answer} из {questions.length} вопросов</Title>\r\n            <Button\r\n              onClick={() =>\r\n                this.setState({\r\n                  count: 0,\r\n                  screenFinish: false,\r\n                  screen: true,\r\n                  answer: 0\r\n                })\r\n              }\r\n\r\n              style={{\r\n                fontSize: \"1.2rem\", \r\n                fontWeight: \"bold\",\r\n                width: \"40%\",\r\n                height: \"3rem\",\r\n                border: \"none\",\r\n                borderRadius: \"5px\",\r\n                boxShadow: \"0px 3px 3px 0px #666\"\r\n              }}\r\n            >\r\n              Тестировать заново\r\n            </Button>\r\n          </ScreenQuiz>\r\n        </Container>\r\n      );\r\n    };\r\n\r\n    useEffect(()=>{\r\n        console.log(\"1 - props\",props.q[0]);\r\n        var questions1=[];\r\n        props.q[0].chosenOption.map((d,i)=>{\r\n            questions1[i]=(\r\n                {\r\n                    question : d.questionText,\r\n                    isOneTrueAnswer : (d.options[0].isAnswer + d.options[1].isAnswer + d.options[2].isAnswer + d.options[3].isAnswer \r\n                        + d.options[4].isAnswer)===1 ? true : false,\r\n                    // questionImage : d.quesimg,\r\n                    answerOptions: [\r\n                        { answerText: d.options[0].answers, UserAnswer: d.options[0].userAnswer, correctAnswer: d.options[0].isAnswer },\r\n                        { answerText: d.options[1].answers, UserAnswer: d.options[1].userAnswer, correctAnswer: d.options[1].isAnswer },\r\n                        { answerText: d.options[2].answers, UserAnswer: d.options[2].userAnswer, correctAnswer: d.options[2].isAnswer },\r\n                        { answerText: d.options[3].answers, UserAnswer: d.options[3].userAnswer, correctAnswer: d.options[3].isAnswer },\r\n                        { answerText: d.options[4].answers, UserAnswer: d.options[4].userAnswer, correctAnswer: d.options[4].isAnswer }\r\n                    ]\r\n                }\r\n            )\r\n        })\r\n        console.log(\"2 - questions\",questions1);\r\n        setQuestions(questions1)\r\n    }, [])\r\n    console.log(questions);\r\n    return(\r\n        renderQuestions()\r\n    )\r\n    // render() {\r\n    //   const { screenFinish, questions, screen } = this.state;\r\n\r\n    //   return !screenFinish && questions ? (\r\n    //     <>{screen ? this.renderScreenInitial() : this.renderQuestions()}</>\r\n    //   ) : (\r\n    //     this.renderResult()\r\n    //   );\r\n    // }\r\n  }\r\n  \r\n//   const mapStateToProps = state => ({\r\n//       chapter : state.chapter,\r\n//       trainer : state.trainer\r\n//   });\r\n  \r\n//   export default connect(mapStateToProps,{\r\n//       ChangeAnswersSearchText,\r\n//       ChangeAnswersTableData\r\n//   })(TestPage);\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}