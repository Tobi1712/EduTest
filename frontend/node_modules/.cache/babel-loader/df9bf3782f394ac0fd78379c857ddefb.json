{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport { css as _css } from \"styled-components\";\nvar _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\customer\\\\Testing\\\\test.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n          left: 25rem;\\n        \"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n          right: 25rem;\\n        \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'antd'; // import Highlighter from 'react-highlight-words';\n\nimport { ChangeQuestionSearchText, ChangeQuestionTableData, ChangeQuestionModalState } from '../../../actions/trainerAction';\nimport { ChangeTestSearchText, ChangeTestTableData, ChangeTestModalState, ChangeAnswersSearchText, ChangeAnswersTableData // ChangeAnswersModalState,\n} from '../../../actions/chapterAction';\nimport Alert from '../../../components/common/alert';\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis'; // import Test2 from './test2';\n// import Test3 from './test3';\n\nimport styled from \"styled-components\"; // import Carousel from \"react-multi-carousel\";\n\nimport \"react-multi-carousel/lib/styles.css\";\nimport Counter from './Counter';\nconst Container = styled.div.withConfig({\n  displayName: \"test__Container\",\n  componentId: \"sc-13myauf-0\"\n})([\"display:flex;justify-content:center;align-items:center;min-height:80vh;width:100%;\"]);\nconst ScreenQuiz = styled.div.withConfig({\n  displayName: \"test__ScreenQuiz\",\n  componentId: \"sc-13myauf-1\"\n})([\"display:flex;justify-content:\", \";align-items:center;flex-direction:column;max-width:1200px;padding:\", \";width:100%;height:80vh;background:#fff;border-radius:5px;box-shadow:0px 5px 40px -20px #000;\"], props => props.screen ? \"space-between\" : \"center\", props => props.screen ? \"5rem\" : \".5rem\");\nconst Title = styled.h1.withConfig({\n  displayName: \"test__Title\",\n  componentId: \"sc-13myauf-2\"\n})([\"font-size:2.5rem;margin-bottom:0.5rem;text-align:center;max-width:90%;\"]);\nconst Paragraph = styled.p.withConfig({\n  displayName: \"test__Paragraph\",\n  componentId: \"sc-13myauf-3\"\n})([\"font-size:1.5rem;\"]); // const Button = styled.button`\n//   font-size: 1.2rem;\n//   font-weight: bold;\n//   width: 40%;\n//   height: 3rem;\n//   // color: #fff;\n//   border: none;\n//   // background: #7159c1;\n//   border-radius: 5px;\n//   box-shadow: 0px 3px 3px 0px #666;\n//   @-webkit-keyframes pulsate {\n//     0% {transform: scale(0.1, 0.1); opacity: 0.0;}\n//     50% {opacity: 1.0;}\n//     100% {transform: scale(7, 7); opacity: 0.0;}\n// }\n// `;\n\nconst ButtonScr = styled.button.withConfig({\n  displayName: \"test__ButtonScr\",\n  componentId: \"sc-13myauf-4\"\n})([\"font-size:1.4rem;z-index:10;position:fixed;top:15%;\", \"\"], props => props.right ? _css(_templateObject()) : _css(_templateObject2()));\nconst ContainerLabel = styled.div.withConfig({\n  displayName: \"test__ContainerLabel\",\n  componentId: \"sc-13myauf-5\"\n})([\"display:flex;align-items:flex-start;flex-direction:column;margin:0 auto 0.5rem auto;\"]);\nconst Label = styled.label.withConfig({\n  displayName: \"test__Label\",\n  componentId: \"sc-13myauf-6\"\n})([\"display:flex;justify-content:center;align-items:center;\"]);\nconst Radio = styled.input.attrs({\n  type: 'checkbox'\n}).withConfig({\n  displayName: \"test__Radio\",\n  componentId: \"sc-13myauf-7\"\n})([\"display:flex;justify-content:center;align-items:center;width:15px;height:15px;border-radius:50%;border:7.5px solid black;margin:0 0.5rem 0 0;background:\", \";\"], props => props.clickedLabel ? \"#7159c1\" : \"#fff\"); // const IntoRadio = styled.div`\n//   width: 5px;\n//   height: 5px;\n//   border-radius: 3px;\n//   background: #fff;\n// `;\n// const Error = styled.div`\n//   top: 22rem;\n//   color: red;\n//   position: absolute;\n//   font-weight: bold;\n// `;\n\nclass Test extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNextClick = c => {\n      console.log(\"handleNextClick\", c);\n      const count = this.state.count;\n      this.setState({\n        count: count + 1,\n        checked: false\n      });\n    };\n\n    this.handlePrevClick = () => {\n      console.log(\"handlePrevClick\");\n      const _this$state = this.state,\n            count = _this$state.count,\n            questions = _this$state.questions;\n\n      if (questions.length >= count && count > 0) {\n        this.setState({\n          count: count - 1,\n          checked: false\n        });\n      }\n    };\n\n    this.handleClick = c => {\n      console.log(\"handleClick\", c);\n      const _this$state2 = this.state,\n            count = _this$state2.count,\n            questions = _this$state2.questions,\n            clickedLabel = _this$state2.clickedLabel,\n            answer = _this$state2.answer; // questions[c].question=questions[c].question+'fg';\n\n      console.log(\"QIERRRRRRRRR\", questions);\n\n      if (questions.length >= count && clickedLabel.answerText) {\n        this.setState({\n          questions: questions,\n          count: c + 1,\n          clickedLabel: {},\n          answer: clickedLabel.correctAnswer ? answer + 1 : answer,\n          error: false,\n          checked: false\n        });\n      }\n    };\n\n    this.handleEndClick = c => {\n      console.log(\"handleEndClick\", c);\n      const _this$state3 = this.state,\n            count = _this$state3.count,\n            questions = _this$state3.questions,\n            clickedLabel = _this$state3.clickedLabel;\n\n      if (questions.length === count) {\n        this.setState({\n          screenFinish: true,\n          testEnded: true,\n          testStarted: false\n        });\n      }\n    };\n\n    this.renderInitial = () => {\n      const count = this.state.count;\n      console.log(\"renderInitial\");\n      this.setState({\n        screen: false,\n        loading: false,\n        count: 1,\n        testStarted: true,\n        testEnded: false,\n        testDidNotStart: false\n      });\n      SecurePost({\n        url: \"\".concat(apis.CREATE_TEST),\n        data: {\n          _id: this.props.chapter.testid,\n          chapterid: this.props.chid,\n          materialid: this.props.id,\n          startDate: Date().toLocaleString(),\n          complationDate: Date().toLocaleString(),\n          startTest: true,\n          endTest: false,\n          result: count\n        }\n      }).then(response => {\n        if (response.data.success) {\n          this.props.ChangeTestModalState(false, null, 'Save');\n          Alert('success', 'Успешно', response.data.message);\n        } else {\n          this.props.ChangeTestModalState(false, null, 'Save');\n          return Alert('warning', 'Предупреждение!', response.data.message);\n        }\n      }).catch(error => {\n        this.props.ChangeTestModalState(false, null, 'Save');\n        return Alert('error', 'Ошибка!', 'Ошибка сервера');\n      }); //   console.log('ZZZZZZZZZZZZZZZZZZZ',questions);\n      //   console.log('XXXXXXXXXXXXXXXXX',this.props.details1);\n      //   var opts= [];\n      // var vOptions;\n      // // var varOptions=[...this.state.questionDetails];\n      // this.props.details1.map((el, i) => {\n      //   // vOptions=[...this.state.questionDetails.options];\n      //   questions[i].answerOptions.map((d,i)=>{\n      //     this.setState((ps,pp)=>{\n      //       return({\n      //           questionDetails:{\n      //               ...ps.questionDetails,\n      //               questionid:el.id,\n      //               options:[\n      //                   ...ps.questionDetails.options,\n      //                   {\n      //                       answer :d.answerText,\n      //                       isAnswer : d.correctAnswer,\n      //                       userAnswer :d.UserAnswer\n      //                   }\n      //               ]\n      //           }\n      //       })\n      //   })\n      //   console.log('DDDDDDDDDDDDDDDDD',questionDetails);\n      //     // vOptions[i]={\n      //     //   ...this.state.questionDetails.options[i],\n      //     //   answer: d.answerText,\n      //     //   isAnswer: d.correctAnswer,\n      //     //   userAnswer: d.UserAnswer\n      //     // }\n      //   })\n      // })\n      //   var arr = [];\n      //   // arr[0] = [];\n      //   // console.log('DDDDDDDDDDDDDDDDD',questionDetails);\n      //   questions.map((k, i) => {\n      //     arr[i]=({\n      //       questionid:k.qid\n      //     })\n      //     questions[i].answerOptions.map((d, j)=>{\n      //       arr[i][j]=({\n      //         answers:d.answerText,\n      //         isAnswer:d.correctAnswer,\n      //         userAnswer:d.UserAnswer,\n      //       })\n      //     })\n      //     // arr.push(opts)\n      // })\n      // console.log('dddddddefgerf', arr);\n      // // console.log('ddddddddddfvd', opts);\n\n      console.log('testid', this.props.chapter.testTableData);\n      SecurePost({\n        url: \"\".concat(apis.CREATE_TST),\n        data: {\n          materialId: this.props.id,\n          testid: this.props.chapter.testid\n        }\n      });\n    };\n\n    this.renderScreenInitial = () => {\n      console.log(\"renderScreenInitial\");\n      return /*#__PURE__*/React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(ScreenQuiz, {\n        screen: this.state.screen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, \"\\u0422\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: this.renderInitial,\n        style: {\n          fontSize: \"1.2rem\",\n          fontWeight: \"bold\",\n          width: \"40%\",\n          height: \"3rem\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          boxShadow: \"0px 3px 3px 0px #666\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\")));\n    };\n\n    this.handleOptions = (answerOptions, c) => {\n      console.log(\"handleOptions:\", answerOptions, c);\n      const _this$state4 = this.state,\n            clickedLabel = _this$state4.clickedLabel,\n            questions = _this$state4.questions,\n            checked = _this$state4.checked;\n      console.log('click:', clickedLabel); // console.log('answer1:',answerOptions);\n\n      return answerOptions.map((a, i) => {\n        return /*#__PURE__*/React.createElement(Label, {\n          key: i,\n          onClick: () => {\n            // console.log('Onclick c:', c);\n            //  questions[c].answerOptions.answerText=questions[c].answerOptions[2].answerText; \n            this.setState({\n              questions: questions,\n              clickedLabel: a,\n              error: false\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 415\n          },\n          __self: this\n        }, questions[c].isOneTrueAnswer === false ? /*#__PURE__*/React.createElement(Radio // clickedLabel={} \n        , {\n          checked: a.UserAnswer // id={'r'c,'s', i}\n          ,\n          onChange: e => this.handleChange(e, answerOptions, c, i),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 431\n          },\n          __self: this\n        }) : /*#__PURE__*/React.createElement(Radio // clickedLabel={clickedLabel.answerText} \n        , {\n          checked: checked,\n          onChange: e => this.handleChange2(e, answerOptions, c, i),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 438\n          },\n          __self: this\n        }), /*#__PURE__*/React.createElement(Paragraph, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 444\n          },\n          __self: this\n        }, a.answerText));\n      });\n    };\n\n    this.handleChange = (e, answerOptions, c, i) => {\n      // console.log(\"handleChange:\", e.target ,answerOptions, c, i);\n      const questions = this.state.questions; // return answerOptions.map((a, i) => {\n      // console.log(\"Onclick\", c);\n      // console.log(\"I\", i);\n\n      questions[c].answerOptions[i].UserAnswer = true;\n      this.setState({\n        // checked: false,\n        questions: questions // clickedLabel: \n\n      }); // })\n      // console.log('check', e.target.checked);\n      // console.log('I',i)\n    };\n\n    this.handleChange2 = (e, answerOptions, c, i) => {\n      // console.log(\"handleChange:\", e.target.checked ,answerOptions, c, i);\n      const questions = this.state.questions;\n      questions[c].answerOptions[i].UserAnswer = true;\n\n      if (questions[c].answerOptions[i].UserAnswer === true) {\n        answerOptions.map((d, j) => {\n          if (i !== j) {\n            questions[c].answerOptions[j].UserAnswer = false;\n          }\n        });\n      } // e.target.checked==true ? questions[c].answerOptions[i].UserAnswer=true : questions[c].answerOptions[i-1].UserAnswer=false;\n      // questions[c].answerOptions[i].UserAnswer=true;\n      // questions[c].answerOptions.UserAnswer=false;\n      // e.target.checked = false;\n      // questions[c].answerOptions[i].UserAnswer\n\n\n      this.setState({\n        questions: questions\n      });\n    };\n\n    this.renderQuestions = () => {\n      console.log(\"renderQuestions\");\n      const _this$state5 = this.state,\n            count = _this$state5.count,\n            questions = _this$state5.questions;\n      const NewQuestions = Array.from(questions);\n      const removeQuestions = NewQuestions.slice(count - 1, count);\n      return removeQuestions.map((q, i) => /*#__PURE__*/React.createElement(Container, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(ScreenQuiz, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }, count, \"/\", questions.length), /*#__PURE__*/React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      }, q.question), /*#__PURE__*/React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520\n        },\n        __self: this\n      }, count), /*#__PURE__*/React.createElement(ContainerLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521\n        },\n        __self: this\n      }, this.handleOptions(q.answerOptions, count - 1)), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.handleClick(count - 1),\n        style: {\n          fontSize: \"1.2rem\",\n          fontWeight: \"bold\",\n          width: \"40%\",\n          height: \"3rem\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          boxShadow: \"0px 3px 3px 0px #666\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524\n        },\n        __self: this\n      }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), count === questions.length ? /*#__PURE__*/React.createElement(Button, {\n        onClick: this.handleEndClick,\n        style: {\n          marginTop: '30px',\n          fontSize: \"1.2rem\",\n          fontWeight: \"bold\",\n          width: \"40%\",\n          height: \"3rem\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          boxShadow: \"0px 3px 3px 0px #666\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538\n        },\n        __self: this\n      }, \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\") : null, /*#__PURE__*/React.createElement(ButtonScr, {\n        onClick: () => this.handleNextClick(count),\n        right: true,\n        disabled: count === questions.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555\n        },\n        __self: this\n      }, \"\\u0421\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u0438\\u0439\"), /*#__PURE__*/React.createElement(ButtonScr, {\n        onClick: this.handlePrevClick,\n        left: true,\n        disabled: count === 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556\n        },\n        __self: this\n      }, \"\\u041F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u0438\\u0439\"))));\n    };\n\n    this.renderResult = () => {\n      console.log(\"renderResult\");\n      const _this$state6 = this.state,\n            answer = _this$state6.answer,\n            questions = _this$state6.questions,\n            screenFinish = _this$state6.screenFinish;\n      return /*#__PURE__*/React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(ScreenQuiz, {\n        screen: screenFinish,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571\n        },\n        __self: this\n      }, \"\\u0412\\u044B \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u043E \\u043E\\u0442\\u0432\\u0435\\u0442\\u0438\\u043B\\u0438 \", answer, \" \\u0438\\u0437 \", questions.length, \" \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u043E\\u0432\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.setState({\n          count: 0,\n          screenFinish: false,\n          screen: true,\n          answer: 0\n        }),\n        style: {\n          fontSize: \"1.2rem\",\n          fontWeight: \"bold\",\n          width: \"40%\",\n          height: \"3rem\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          boxShadow: \"0px 3px 3px 0px #666\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572\n        },\n        __self: this\n      }, \"\\u0422\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E\")));\n    };\n\n    this.state = {\n      questions: [],\n      loading: false,\n      screen: true,\n      count: 0,\n      clickedLabel: [],\n      answer: 0,\n      error: false,\n      screenFinish: false,\n      second: 60,\n      time: {},\n      checked: false,\n      testStarted: false,\n      testEnded: false,\n      testDidNotStart: true\n    };\n  }\n\n  componentDidMount() {\n    // this.props.ChangeQuestionTableData(this.props.id);\n    this.props.ChangeAnswersTableData(this.props.id);\n    this.props.ChangeTestTableData(this.props.id); // console.log('CHID',this.props.chid);\n\n    console.log('ASN', this.props.asn);\n    var questions = [];\n\n    if (this.props.asn.length === 0) {\n      return Alert('warning', \"Сперва пройдите материалы\");\n    } else {\n      this.props.asn[0].chosenOption.map((d, i) => {\n        questions[i] = {\n          question: d.questionText,\n          isOneTrueAnswer: d.options[0].isAnswer + d.options[1].isAnswer + d.options[2].isAnswer + d.options[3].isAnswer + d.options[4].isAnswer === 1 ? true : false,\n          // questionImage : d.quesimg,\n          answerOptions: [{\n            answerText: d.options[0].answers,\n            UserAnswer: d.options[0].userAnswer,\n            correctAnswer: d.options[0].isAnswer\n          }, {\n            answerText: d.options[1].answers,\n            UserAnswer: d.options[1].userAnswer,\n            correctAnswer: d.options[1].isAnswer\n          }, {\n            answerText: d.options[2].answers,\n            UserAnswer: d.options[2].userAnswer,\n            correctAnswer: d.options[2].isAnswer\n          }, {\n            answerText: d.options[3].answers,\n            UserAnswer: d.options[3].userAnswer,\n            correctAnswer: d.options[3].isAnswer\n          }, {\n            answerText: d.options[4].answers,\n            UserAnswer: d.options[4].userAnswer,\n            correctAnswer: d.options[4].isAnswer\n          }]\n        };\n      });\n    } // console.log(\"TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT\", this.props.asn[0].chosenOption[0])\n    // this.props.details1.map((d,i)=>{\n    //   questions[i]=(\n    //     {\n    //       qid:d._id,\n    //       question : d.body,\n    //       isOneTrueAnswer : (d.trueans1+d.trueans2+d.trueans3+d.trueans4+d.trueans5)==1 ? true : false,\n    //       // questionImage : d.quesimg,\n    //       answerOptions: [\n    //         { answerText: d.answer1, UserAnswer: d.userAnswer1, correctAnswer: d.trueans1 },\n    //         { answerText: d.answer2, UserAnswer: d.userAnswer2, correctAnswer: d.trueans2 },\n    //         { answerText: d.answer3, UserAnswer: d.userAnswer3, correctAnswer: d.trueans3 },\n    //         { answerText: d.answer4, UserAnswer: d.userAnswer4, correctAnswer: d.trueans4 },\n    //         { answerText: d.answer5, UserAnswer: d.userAnswer5, correctAnswer: d.trueans5 }\n    //       ]\n    //     }\n    //   )\n    // });\n\n\n    this.setState({\n      questions: questions,\n      loading: true\n    });\n  }\n\n  render() {\n    const _this$state7 = this.state,\n          screenFinish = _this$state7.screenFinish,\n          questions = _this$state7.questions,\n          screen = _this$state7.screen;\n    return !screenFinish && questions ? /*#__PURE__*/React.createElement(React.Fragment, null, screen ? this.renderScreenInitial() : this.renderQuestions()) : this.renderResult();\n  } // render() {\n  //   console.log('qas',this.props.trainer.QuestionTableData);\n  //   console.log('qaz',this.state);\n  //   return (\n  //     <div>\n  //       <h1>Тестирование номер 1</h1>\n  //       {this.state.isStarted ? null : (\n  //         <div id=\"button\">\n  //           <Button variant=\"contained\" color=\"secondary\" onClick={()=>this.handleClick}>\n  //             Начать тест\n  //           </Button>\n  //         </div>\n  //       )}\n  //     {this.state.isStarted ? (\n  //     // <Test2  details={this.props.trainer.QuestionTableData}/>\n  //     ) : null}\n  //     </div>\n  //   )\n  // }\n\n\n}\n\nconst mapStateToProps = state => ({\n  chapter: state.chapter,\n  trainer: state.trainer\n});\n\nexport default connect(mapStateToProps, {\n  ChangeQuestionSearchText,\n  ChangeQuestionTableData,\n  ChangeQuestionModalState,\n  ChangeTestSearchText,\n  ChangeTestTableData,\n  ChangeTestModalState,\n  ChangeAnswersSearchText,\n  ChangeAnswersTableData // ChangeAnswersModalState\n\n})(Test);","map":{"version":3,"names":["React","Component","connect","Button","ChangeQuestionSearchText","ChangeQuestionTableData","ChangeQuestionModalState","ChangeTestSearchText","ChangeTestTableData","ChangeTestModalState","ChangeAnswersSearchText","ChangeAnswersTableData","Alert","SecurePost","apis","styled","Counter","Container","div","ScreenQuiz","props","screen","Title","h1","Paragraph","p","ButtonScr","button","right","css","ContainerLabel","Label","label","Radio","input","attrs","type","clickedLabel","Test","constructor","handleNextClick","c","console","log","count","state","setState","checked","handlePrevClick","questions","length","handleClick","answer","answerText","correctAnswer","error","handleEndClick","screenFinish","testEnded","testStarted","renderInitial","loading","testDidNotStart","url","CREATE_TEST","data","_id","chapter","testid","chapterid","chid","materialid","id","startDate","Date","toLocaleString","complationDate","startTest","endTest","result","then","response","success","message","catch","testTableData","CREATE_TST","materialId","renderScreenInitial","fontSize","fontWeight","width","height","border","borderRadius","boxShadow","handleOptions","answerOptions","map","a","i","isOneTrueAnswer","UserAnswer","e","handleChange","handleChange2","d","j","renderQuestions","NewQuestions","Array","from","removeQuestions","slice","q","question","marginTop","renderResult","second","time","componentDidMount","asn","chosenOption","questionText","options","isAnswer","answers","userAnswer","render","mapStateToProps","trainer"],"sources":["C:/React_project/EduTest/frontend/src/components/customer/Testing/test.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Button } from 'antd';\r\n// import Highlighter from 'react-highlight-words';\r\nimport  { css } from 'styled-components/macro'\r\nimport { \r\n    ChangeQuestionSearchText,\r\n    ChangeQuestionTableData,\r\n    ChangeQuestionModalState,\r\n} from '../../../actions/trainerAction';\r\nimport { \r\n  ChangeTestSearchText,\r\n  ChangeTestTableData,\r\n  ChangeTestModalState,\r\n  ChangeAnswersSearchText,\r\n  ChangeAnswersTableData,\r\n  // ChangeAnswersModalState,\r\n} from '../../../actions/chapterAction';\r\n\r\nimport Alert from '../../../components/common/alert';\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\n// import Test2 from './test2';\r\n// import Test3 from './test3';\r\nimport styled from \"styled-components\";\r\n// import Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport Counter from './Counter';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 80vh;\r\n  width: 100%;\r\n  /*background: #7159c1;*/\r\n`;\r\n\r\nconst ScreenQuiz = styled.div`\r\n  display: flex;\r\n  justify-content: ${props => (props.screen ? \"space-between\" : \"center\")};\r\n  align-items: center;\r\n  flex-direction: column;\r\n  max-width: 1200px;\r\n  padding: ${props => (props.screen ? \"5rem\" : \".5rem\")};\r\n  width: 100%;\r\n  height: 80vh;\r\n  background: #fff;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 5px 40px -20px #000;\r\n\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 2.5rem;\r\n  // color: #7159c1;\r\n  margin-bottom: 0.5rem;\r\n  text-align: center;\r\n  max-width: 90%;\r\n`;\r\n\r\nconst Paragraph = styled.p`\r\n  font-size: 1.5rem;\r\n`;\r\n\r\n// const Button = styled.button`\r\n//   font-size: 1.2rem;\r\n//   font-weight: bold;\r\n//   width: 40%;\r\n//   height: 3rem;\r\n//   // color: #fff;\r\n//   border: none;\r\n//   // background: #7159c1;\r\n//   border-radius: 5px;\r\n//   box-shadow: 0px 3px 3px 0px #666;\r\n\r\n//   @-webkit-keyframes pulsate {\r\n//     0% {transform: scale(0.1, 0.1); opacity: 0.0;}\r\n//     50% {opacity: 1.0;}\r\n//     100% {transform: scale(7, 7); opacity: 0.0;}\r\n// }\r\n// `;\r\n\r\nconst ButtonScr = styled.button`\r\n  font-size: 1.4rem;\r\n  z-index: 10;\r\n  position: fixed;\r\n  top: 15%;\r\n  ${(props) =>\r\n    props.right\r\n      ? css`\r\n          right: 25rem;\r\n        `\r\n      : css`\r\n          left: 25rem;\r\n        `}\r\n`\r\n\r\nconst ContainerLabel = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  margin: 0 auto 0.5rem auto;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Radio = styled.input.attrs({ type: 'checkbox' })`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 15px;\r\n  height: 15px;\r\n  border-radius: 50%;\r\n  border: 7.5px solid black;\r\n  margin: 0 0.5rem 0 0;\r\n  background: ${props => (props.clickedLabel ? \"#7159c1\" : \"#fff\")};\r\n`;\r\n\r\n// const IntoRadio = styled.div`\r\n//   width: 5px;\r\n//   height: 5px;\r\n//   border-radius: 3px;\r\n//   background: #fff;\r\n// `;\r\n\r\n// const Error = styled.div`\r\n//   top: 22rem;\r\n//   color: red;\r\n//   position: absolute;\r\n//   font-weight: bold;\r\n// `;\r\n\r\nclass Test extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state={\r\n        questions:[],\r\n        loading:false,\r\n        screen: true,\r\n        count: 0,\r\n        clickedLabel: [],\r\n        answer: 0,\r\n        error:false,\r\n        screenFinish:false,\r\n        second:60,\r\n        time:{},\r\n        checked:false,\r\n        testStarted:false,\r\n        testEnded:false,\r\n        testDidNotStart:true,\r\n       \r\n      }\r\n    }\r\n  \r\n    componentDidMount(){\r\n      // this.props.ChangeQuestionTableData(this.props.id);\r\n      this.props.ChangeAnswersTableData(this.props.id);\r\n      this.props.ChangeTestTableData(this.props.id);\r\n      // console.log('CHID',this.props.chid);\r\n      console.log('ASN',this.props.asn)\r\n      var questions=[];\r\n      if(this.props.asn.length === 0){\r\n        return Alert('warning',\"Сперва пройдите материалы\")\r\n      }\r\n      else{\r\n        this.props.asn[0].chosenOption.map((d,i)=>{\r\n          questions[i]=(\r\n                {\r\n                  question : d.questionText,\r\n                  isOneTrueAnswer : (d.options[0].isAnswer + d.options[1].isAnswer + d.options[2].isAnswer + d.options[3].isAnswer \r\n                    + d.options[4].isAnswer)===1 ? true : false,\r\n                  // questionImage : d.quesimg,\r\n                  answerOptions: [\r\n                    { answerText: d.options[0].answers, UserAnswer: d.options[0].userAnswer, correctAnswer: d.options[0].isAnswer },\r\n                    { answerText: d.options[1].answers, UserAnswer: d.options[1].userAnswer, correctAnswer: d.options[1].isAnswer },\r\n                    { answerText: d.options[2].answers, UserAnswer: d.options[2].userAnswer, correctAnswer: d.options[2].isAnswer },\r\n                    { answerText: d.options[3].answers, UserAnswer: d.options[3].userAnswer, correctAnswer: d.options[3].isAnswer },\r\n                    { answerText: d.options[4].answers, UserAnswer: d.options[4].userAnswer, correctAnswer: d.options[4].isAnswer }\r\n                  ]\r\n                }\r\n              )\r\n        })\r\n      }\r\n\r\n      // console.log(\"TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT\", this.props.asn[0].chosenOption[0])\r\n      // this.props.details1.map((d,i)=>{\r\n      //   questions[i]=(\r\n      //     {\r\n      //       qid:d._id,\r\n      //       question : d.body,\r\n      //       isOneTrueAnswer : (d.trueans1+d.trueans2+d.trueans3+d.trueans4+d.trueans5)==1 ? true : false,\r\n      //       // questionImage : d.quesimg,\r\n      //       answerOptions: [\r\n      //         { answerText: d.answer1, UserAnswer: d.userAnswer1, correctAnswer: d.trueans1 },\r\n      //         { answerText: d.answer2, UserAnswer: d.userAnswer2, correctAnswer: d.trueans2 },\r\n      //         { answerText: d.answer3, UserAnswer: d.userAnswer3, correctAnswer: d.trueans3 },\r\n      //         { answerText: d.answer4, UserAnswer: d.userAnswer4, correctAnswer: d.trueans4 },\r\n      //         { answerText: d.answer5, UserAnswer: d.userAnswer5, correctAnswer: d.trueans5 }\r\n      //       ]\r\n      //     }\r\n      //   )\r\n      // });\r\n      this.setState({\r\n        questions:questions,\r\n        loading:true\r\n      })\r\n    }\r\n\r\n    handleNextClick=(c)=>{\r\n      console.log(\"handleNextClick\", c);\r\n      const { count} = this.state;\r\n        this.setState({\r\n          count: count+1,\r\n          checked:false,\r\n        });\r\n    }\r\n\r\n    handlePrevClick=()=>{\r\n      console.log(\"handlePrevClick\");\r\n      const { count, questions} = this.state;\r\n      if (questions.length >= count && count>0) {\r\n        this.setState({\r\n          count: count - 1,\r\n          checked:false,\r\n        });\r\n      } \r\n    }\r\n\r\n    handleClick = (c)=> {\r\n      console.log(\"handleClick\", c);\r\n      const { count, questions, clickedLabel, answer} = this.state;\r\n      // questions[c].question=questions[c].question+'fg';\r\n      console.log(\"QIERRRRRRRRR\", questions)\r\n      if (questions.length >= count && clickedLabel.answerText) {\r\n        this.setState({\r\n          questions:questions,\r\n          count: c+1,\r\n          clickedLabel: {},\r\n          answer: clickedLabel.correctAnswer ? answer + 1 : answer,\r\n          error: false,\r\n          checked:false,\r\n        });\r\n      }\r\n    }\r\n\r\n    handleEndClick = (c)=> {\r\n      console.log(\"handleEndClick\", c);\r\n      const { count, questions, clickedLabel } = this.state;\r\n      if (questions.length === count) {\r\n        this.setState({\r\n          screenFinish: true,\r\n          testEnded:true,\r\n          testStarted:false,\r\n        });\r\n      }\r\n\r\n\r\n    }\r\n\r\n    renderInitial = () => {\r\n      const { count } = this.state;\r\n      console.log(\"renderInitial\");\r\n      this.setState({\r\n        screen: false,\r\n        loading:false,\r\n        count: 1,\r\n        testStarted:true,\r\n        testEnded:false,\r\n        testDidNotStart:false,\r\n      });\r\n\r\n      SecurePost({\r\n        url : `${apis.CREATE_TEST}`,\r\n        data : {\r\n          _id: this.props.chapter.testid,\r\n            chapterid : this.props.chid,\r\n            materialid : this.props.id,\r\n            startDate : Date().toLocaleString(),\r\n            complationDate : Date().toLocaleString(),\r\n            startTest: true,\r\n            endTest: false,\r\n            result: count\r\n          }\r\n        })\r\n        .then((response)=>{\r\n          if(response.data.success){\r\n              this.props.ChangeTestModalState(false,null, 'Save'); \r\n              Alert('success','Успешно',response.data.message);\r\n          }\r\n          else{\r\n              this.props.ChangeTestModalState(false,null, 'Save');\r\n              return Alert('warning','Предупреждение!',response.data.message);\r\n          }\r\n        })\r\n        .catch((error)=>{\r\n            this.props.ChangeTestModalState(false,null, 'Save');\r\n            return Alert('error','Ошибка!','Ошибка сервера');\r\n        })\r\n      \r\n\r\n      //   console.log('ZZZZZZZZZZZZZZZZZZZ',questions);\r\n      //   console.log('XXXXXXXXXXXXXXXXX',this.props.details1);\r\n      //   var opts= [];\r\n        // var vOptions;\r\n        // // var varOptions=[...this.state.questionDetails];\r\n        // this.props.details1.map((el, i) => {\r\n        //   // vOptions=[...this.state.questionDetails.options];\r\n        //   questions[i].answerOptions.map((d,i)=>{\r\n        //     this.setState((ps,pp)=>{\r\n        //       return({\r\n        //           questionDetails:{\r\n        //               ...ps.questionDetails,\r\n        //               questionid:el.id,\r\n        //               options:[\r\n        //                   ...ps.questionDetails.options,\r\n        //                   {\r\n        //                       answer :d.answerText,\r\n        //                       isAnswer : d.correctAnswer,\r\n        //                       userAnswer :d.UserAnswer\r\n        //                   }\r\n        //               ]\r\n        //           }\r\n        //       })\r\n        //   })\r\n        //   console.log('DDDDDDDDDDDDDDDDD',questionDetails);\r\n        //     // vOptions[i]={\r\n        //     //   ...this.state.questionDetails.options[i],\r\n        //     //   answer: d.answerText,\r\n        //     //   isAnswer: d.correctAnswer,\r\n        //     //   userAnswer: d.UserAnswer\r\n        //     // }\r\n        //   })\r\n\r\n        // })\r\n\r\n      //   var arr = [];\r\n      //   // arr[0] = [];\r\n      //   // console.log('DDDDDDDDDDDDDDDDD',questionDetails);\r\n      //   questions.map((k, i) => {\r\n      //     arr[i]=({\r\n      //       questionid:k.qid\r\n      //     })\r\n      //     questions[i].answerOptions.map((d, j)=>{\r\n      //       arr[i][j]=({\r\n      //         answers:d.answerText,\r\n      //         isAnswer:d.correctAnswer,\r\n      //         userAnswer:d.UserAnswer,\r\n      //       })\r\n            \r\n      //     })\r\n      //     // arr.push(opts)\r\n      // })\r\n      // console.log('dddddddefgerf', arr);\r\n      // // console.log('ddddddddddfvd', opts);\r\n      console.log('testid',this.props.chapter.testTableData);\r\n        \r\n      SecurePost({\r\n        url : `${apis.CREATE_TST}`,\r\n        data : {\r\n          materialId : this.props.id,\r\n          testid : this.props.chapter.testid,\r\n        }\r\n      })\r\n    };\r\n\r\n    renderScreenInitial = () => {\r\n      console.log(\"renderScreenInitial\");\r\n      return (\r\n        <Container>\r\n          <ScreenQuiz screen={this.state.screen}>\r\n            <Title>Тестирование</Title>\r\n            <Button \r\n              onClick={this.renderInitial} \r\n              style={{\r\n                fontSize: \"1.2rem\", \r\n                fontWeight: \"bold\",\r\n                width: \"40%\",\r\n                height: \"3rem\",\r\n                border: \"none\",\r\n                borderRadius: \"5px\",\r\n                boxShadow: \"0px 3px 3px 0px #666\"\r\n              }}\r\n              >\r\n                Начать тест\r\n            </Button>\r\n\r\n\r\n            {/* //   font-size: 1.2rem;\r\n//   font-weight: bold;\r\n//   width: 40%;\r\n//   height: 3rem;\r\n//   // color: #fff;\r\n//   border: none;\r\n//   // background: #7159c1;\r\n//   border-radius: 5px;\r\n//   box-shadow: 0px 3px 3px 0px #666; */}\r\n            \r\n          </ScreenQuiz>\r\n        </Container>\r\n      );\r\n    };\r\n  \r\n    handleOptions = (answerOptions,c) => {\r\n      console.log(\"handleOptions:\", answerOptions, c);\r\n      const { clickedLabel,questions,  checked } = this.state;\r\n      console.log('click:',clickedLabel);\r\n      // console.log('answer1:',answerOptions);\r\n      return answerOptions.map((a, i) => {\r\n        return (\r\n          <Label\r\n            key={i}\r\n            onClick={() =>{\r\n\r\n              // console.log('Onclick c:', c);\r\n              //  questions[c].answerOptions.answerText=questions[c].answerOptions[2].answerText; \r\n              \r\n              this.setState({\r\n                questions:questions,\r\n                clickedLabel: a,\r\n\r\n                error: false\r\n              })}\r\n            }\r\n          >\r\n            { questions[c].isOneTrueAnswer===false ?\r\n            <Radio \r\n              // clickedLabel={} \r\n              checked={a.UserAnswer} \r\n              // id={'r'c,'s', i}\r\n              onChange={e => this.handleChange(e,answerOptions, c,i)}\r\n            />\r\n            :\r\n            <Radio  \r\n              // clickedLabel={clickedLabel.answerText} \r\n              checked={checked}\r\n              onChange={e => this.handleChange2(e,answerOptions, c,i)}\r\n            />\r\n            }\r\n            <Paragraph>{a.answerText}</Paragraph>\r\n          </Label>\r\n          \r\n        );\r\n      });\r\n    };\r\n\r\n    handleChange = (e,answerOptions, c, i) => {\r\n      // console.log(\"handleChange:\", e.target ,answerOptions, c, i);\r\n      const { questions } = this.state\r\n      // return answerOptions.map((a, i) => {\r\n        // console.log(\"Onclick\", c);\r\n        // console.log(\"I\", i);\r\n        questions[c].answerOptions[i].UserAnswer=true;\r\n        \r\n        this.setState({\r\n          // checked: false,\r\n          questions:questions,\r\n          // clickedLabel: \r\n        });\r\n      // })\r\n\r\n      // console.log('check', e.target.checked);\r\n      // console.log('I',i)\r\n    };\r\n\r\n    handleChange2 = (e,answerOptions, c, i) => {\r\n      // console.log(\"handleChange:\", e.target.checked ,answerOptions, c, i);\r\n      const { questions } = this.state\r\n      questions[c].answerOptions[i].UserAnswer=true;\r\n\r\n      if(questions[c].answerOptions[i].UserAnswer===true){\r\n        answerOptions.map((d,j) =>{\r\n          if(i!==j){\r\n            questions[c].answerOptions[j].UserAnswer=false;\r\n          }\r\n        })\r\n      }\r\n        // e.target.checked==true ? questions[c].answerOptions[i].UserAnswer=true : questions[c].answerOptions[i-1].UserAnswer=false;\r\n        // questions[c].answerOptions[i].UserAnswer=true;\r\n        // questions[c].answerOptions.UserAnswer=false;\r\n        // e.target.checked = false;\r\n        // questions[c].answerOptions[i].UserAnswer\r\n        this.setState({\r\n          questions:questions,\r\n        });\r\n    };\r\n\r\n\r\n  \r\n  \r\n    renderQuestions = () => {\r\n      console.log(\"renderQuestions\");\r\n      const { count,questions } = this.state;\r\n      const NewQuestions = Array.from(questions);\r\n      const removeQuestions = NewQuestions.slice(count - 1, count);\r\n    \r\n      return removeQuestions.map((q, i) => (\r\n\r\n        <Container key={i}>\r\n          <ScreenQuiz>\r\n            \r\n            {/* <div className=\"timer-container\">\r\n              <p>\r\n                <span className={classnames('right valid', {\r\n                  'warning': time.distance <= 120000,\r\n                  'invalid': time.distance < 30000\r\n                  })} style={{paddingLeft:'10px'}}>\r\n                  {time.minutes}:{time.seconds}\r\n                  <span  className=\"mdi mdi-clock-outline mdi-24px\"></span></span>\r\n              </p>\r\n            </div> */}\r\n            {/* <Counter/> */}\r\n\r\n            <h3>{count}/{questions.length}</h3>\r\n            <Title>{q.question}</Title>\r\n            <label>{count}</label>\r\n            <ContainerLabel>\r\n              {this.handleOptions(q.answerOptions, count-1)}\r\n            </ContainerLabel>\r\n            <Button onClick={()=>this.handleClick(count-1)}\r\n                          style={{\r\n                            fontSize: \"1.2rem\", \r\n                            fontWeight: \"bold\",\r\n                            width: \"40%\",\r\n                            height: \"3rem\",\r\n                            border: \"none\",\r\n                            borderRadius: \"5px\",\r\n                            boxShadow: \"0px 3px 3px 0px #666\"\r\n                          }}\r\n            >\r\n                Сохранить\r\n            </Button>\r\n            { count===questions.length ?\r\n            <Button onClick={this.handleEndClick}\r\n              style={{\r\n                marginTop: '30px',\r\n                fontSize: \"1.2rem\", \r\n                fontWeight: \"bold\",\r\n                width: \"40%\",\r\n                height: \"3rem\",\r\n                border: \"none\",\r\n                borderRadius: \"5px\",\r\n                boxShadow: \"0px 3px 3px 0px #666\"\r\n              }}\r\n            >\r\n                Завершить тест\r\n            </Button>\r\n              : null\r\n          }\r\n            {/* {error && <Error>Пожалуйста, проверьте варианты.</Error>} */}\r\n            <ButtonScr onClick={()=>this.handleNextClick(count)} right disabled={count === questions.length}>Следующий</ButtonScr>\r\n            <ButtonScr onClick={this.handlePrevClick} left disabled={count===1}>Предыдущий</ButtonScr>\r\n            {/* {console.log('Count:',count)} */}\r\n          </ScreenQuiz>\r\n        </Container>\r\n\r\n      ));\r\n    };\r\n  \r\n    renderResult = () => {\r\n      console.log(\"renderResult\");\r\n      const { answer,questions, screenFinish } = this.state;\r\n  \r\n      return (\r\n        <Container>\r\n          <ScreenQuiz screen={screenFinish}>\r\n            <Title>Вы правильно ответили {answer} из {questions.length} вопросов</Title>\r\n            <Button\r\n              onClick={() =>\r\n                this.setState({\r\n                  count: 0,\r\n                  screenFinish: false,\r\n                  screen: true,\r\n                  answer: 0\r\n                })\r\n              }\r\n\r\n              style={{\r\n                fontSize: \"1.2rem\", \r\n                fontWeight: \"bold\",\r\n                width: \"40%\",\r\n                height: \"3rem\",\r\n                border: \"none\",\r\n                borderRadius: \"5px\",\r\n                boxShadow: \"0px 3px 3px 0px #666\"\r\n              }}\r\n            >\r\n              Тестировать заново\r\n            </Button>\r\n          </ScreenQuiz>\r\n        </Container>\r\n      );\r\n    };\r\n\r\n\r\n    render() {\r\n      const { screenFinish, questions, screen } = this.state;\r\n\r\n\r\n      return !screenFinish && questions ? (\r\n        <>{screen ? this.renderScreenInitial() : this.renderQuestions()}</>\r\n      ) : (\r\n        this.renderResult()\r\n      );\r\n    }\r\n\r\n    // render() {\r\n    //   console.log('qas',this.props.trainer.QuestionTableData);\r\n    //   console.log('qaz',this.state);\r\n    //   return (\r\n    //     <div>\r\n    //       <h1>Тестирование номер 1</h1>\r\n    //       {this.state.isStarted ? null : (\r\n    //         <div id=\"button\">\r\n    //           <Button variant=\"contained\" color=\"secondary\" onClick={()=>this.handleClick}>\r\n    //             Начать тест\r\n    //           </Button>\r\n    //         </div>\r\n    //       )}\r\n        \r\n    //     {this.state.isStarted ? (\r\n    //     // <Test2  details={this.props.trainer.QuestionTableData}/>\r\n    //     ) : null}\r\n    //     </div>\r\n    //   )\r\n    // }\r\n  }\r\n  \r\n  const mapStateToProps = state => ({\r\n      chapter : state.chapter,\r\n      trainer : state.trainer\r\n  });\r\n  \r\n  export default connect(mapStateToProps,{\r\n      ChangeQuestionSearchText,\r\n      ChangeQuestionTableData,\r\n      ChangeQuestionModalState,\r\n      ChangeTestSearchText,\r\n      ChangeTestTableData,\r\n      ChangeTestModalState,\r\n      ChangeAnswersSearchText,\r\n      ChangeAnswersTableData,\r\n      // ChangeAnswersModalState\r\n  })(Test);\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}