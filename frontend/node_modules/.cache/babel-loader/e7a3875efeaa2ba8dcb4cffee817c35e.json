{"ast":null,"code":"import { css as _css } from \"styled-components\";\nimport { createGlobalStyle as _createGlobalStyle } from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\admin\\\\ForCustomers\\\\test3.js\";\nimport React, { Component, useState, Fragment } from 'react';\nimport Slider from 'react-touch-drag-slider';\nimport { connect } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport M from 'materialize-css';\nimport classnames from 'classnames';\nimport questions from '../../questions.json';\nimport isEmpty from '../../utils/is-empty';\nimport correctNotification from '../../assets/audio/correct-answer.mp3';\nimport wrongNotification from '../../assets/audio/wrong-answer.mp3';\nimport buttonSound from '../../assets/audio/button-sound.mp3';\n\nclass Test3 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.displayQuestions = (questions = this.state.questions, currentQuestion, nextQuestion, previousQuestion) => {\n      let currentQuestionIndex = this.state.currentQuestionIndex;\n\n      if (!isEmpty(this.state.questions)) {\n        questions = this.state.questions;\n        currentQuestion = questions[currentQuestionIndex];\n        nextQuestion = questions[currentQuestionIndex + 1];\n        previousQuestion = questions[currentQuestionIndex - 1];\n        const answer = currentQuestion.answer;\n        this.setState({\n          currentQuestion,\n          nextQuestion,\n          previousQuestion,\n          numberOfQuestions: questions.length,\n          answer,\n          previousRandomNumbers: []\n        }, () => {\n          this.showOptions();\n          this.handleDisableButton();\n        });\n      }\n    };\n\n    this.handleOptionClick = e => {\n      if (e.target.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n        this.correctTimeout = setTimeout(() => {\n          this.correctSound.current.play();\n        }, 500);\n        this.correctAnswer();\n      } else {\n        this.wrongTimeout = setTimeout(() => {\n          this.wrongSound.current.play();\n        }, 500);\n        this.wrongAnswer();\n      }\n    };\n\n    this.handleNextButtonClick = () => {\n      this.playButtonSound();\n\n      if (this.state.nextQuestion !== undefined) {\n        this.setState(prevState => ({\n          currentQuestionIndex: prevState.currentQuestionIndex + 1\n        }), () => {\n          this.displayQuestions(this.state.state, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n        });\n      }\n    };\n\n    this.handlePreviousButtonClick = () => {\n      this.playButtonSound();\n\n      if (this.state.previousQuestion !== undefined) {\n        this.setState(prevState => ({\n          currentQuestionIndex: prevState.currentQuestionIndex - 1\n        }), () => {\n          this.displayQuestions(this.state.state, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n        });\n      }\n    };\n\n    this.handleQuitButtonClick = () => {\n      this.playButtonSound();\n\n      if (window.confirm('Are you sure you want to quit?')) {\n        this.props.history.push('/');\n      }\n    };\n\n    this.handleButtonClick = e => {\n      switch (e.target.id) {\n        case 'next-button':\n          this.handleNextButtonClick();\n          break;\n\n        case 'previous-button':\n          this.handlePreviousButtonClick();\n          break;\n\n        case 'quit-button':\n          this.handleQuitButtonClick();\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.playButtonSound = () => {\n      this.buttonSound.current.play();\n    };\n\n    this.correctAnswer = () => {\n      M.toast({\n        html: 'Correct Answer!',\n        classes: 'toast-valid',\n        displayLength: 1500\n      });\n      this.setState(prevState => ({\n        score: prevState.score + 1,\n        correctAnswers: prevState.correctAnswers + 1,\n        currentQuestionIndex: prevState.currentQuestionIndex + 1,\n        numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1\n      }), () => {\n        if (this.state.nextQuestion === undefined) {\n          this.endGame();\n        } else {\n          this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n        }\n      });\n    };\n\n    this.wrongAnswer = () => {\n      navigator.vibrate(1000);\n      M.toast({\n        html: 'Wrong Answer!',\n        classes: 'toast-invalid',\n        displayLength: 1500\n      });\n      this.setState(prevState => ({\n        wrongAnswers: prevState.wrongAnswers + 1,\n        currentQuestionIndex: prevState.currentQuestionIndex + 1,\n        numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1\n      }), () => {\n        if (this.state.nextQuestion === undefined) {\n          this.endGame();\n        } else {\n          this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n        }\n      });\n    };\n\n    this.showOptions = () => {\n      const options = Array.from(document.querySelectorAll('.option'));\n      options.forEach(option => {\n        option.style.visibility = 'visible';\n      });\n      this.setState({\n        usedFiftyFifty: false\n      });\n    };\n\n    this.handleHints = () => {\n      if (this.state.hints > 0) {\n        const options = Array.from(document.querySelectorAll('.option'));\n        let indexOfAnswer;\n        options.forEach((option, index) => {\n          if (option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n            indexOfAnswer = index;\n          }\n        });\n\n        while (true) {\n          const randomNumber = Math.round(Math.random() * 3);\n\n          if (randomNumber !== indexOfAnswer && !this.state.previousRandomNumbers.includes(randomNumber)) {\n            options.forEach((option, index) => {\n              if (index === randomNumber) {\n                option.style.visibility = 'hidden';\n                this.setState(prevState => ({\n                  hints: prevState.hints - 1,\n                  previousRandomNumbers: prevState.previousRandomNumbers.concat(randomNumber)\n                }));\n              }\n            });\n            break;\n          }\n\n          if (this.state.previousRandomNumbers.length >= 3) break;\n        }\n      }\n    };\n\n    this.handleFiftyFifty = () => {\n      if (this.state.fiftyFifty > 0 && this.state.usedFiftyFifty === false) {\n        const options = document.querySelectorAll('.option');\n        const randomNumbers = [];\n        let indexOfAnswer;\n        options.forEach((option, index) => {\n          if (option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n            indexOfAnswer = index;\n          }\n        });\n        let count = 0;\n\n        do {\n          const randomNumber = Math.round(Math.random() * 3);\n\n          if (randomNumber !== indexOfAnswer) {\n            if (randomNumbers.length < 2 && !randomNumbers.includes(randomNumber) && !randomNumbers.includes(indexOfAnswer)) {\n              randomNumbers.push(randomNumber);\n              count++;\n            } else {\n              while (true) {\n                const newRandomNumber = Math.round(Math.random() * 3);\n\n                if (!randomNumbers.includes(newRandomNumber) && newRandomNumber !== indexOfAnswer) {\n                  randomNumbers.push(newRandomNumber);\n                  count++;\n                  break;\n                }\n              }\n            }\n          }\n        } while (count < 2);\n\n        options.forEach((option, index) => {\n          if (randomNumbers.includes(index)) {\n            option.style.visibility = 'hidden';\n          }\n        });\n        this.setState(prevState => ({\n          fiftyFifty: prevState.fiftyFifty - 1,\n          usedFiftyFifty: true\n        }));\n      }\n    };\n\n    this.startTimer = () => {\n      const countDownTime = Date.now() + 180000;\n      this.interval = setInterval(() => {\n        const now = new Date();\n        const distance = countDownTime - now;\n        const minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n        const seconds = Math.floor(distance % (1000 * 60) / 1000);\n\n        if (distance < 0) {\n          clearInterval(this.interval);\n          this.setState({\n            time: {\n              minutes: 0,\n              seconds: 0\n            }\n          }, () => {\n            this.endGame();\n          });\n        } else {\n          this.setState({\n            time: {\n              minutes,\n              seconds,\n              distance\n            }\n          });\n        }\n      }, 1000);\n    };\n\n    this.handleDisableButton = () => {\n      if (this.state.previousQuestion === undefined || this.state.currentQuestionIndex === 0) {\n        this.setState({\n          previousButtonDisabled: true\n        });\n      } else {\n        this.setState({\n          previousButtonDisabled: false\n        });\n      }\n\n      if (this.state.nextQuestion === undefined || this.state.currentQuestionIndex + 1 === this.state.numberOfQuestions) {\n        this.setState({\n          nextButtonDisabled: true\n        });\n      } else {\n        this.setState({\n          nextButtonDisabled: false\n        });\n      }\n    };\n\n    this.endGame = () => {\n      alert('Quiz has eneded!');\n      const state = this.state;\n      const playerStats = {\n        score: state.score,\n        numberOfQuestions: state.numberOfQuestions,\n        numberOfAnsweredQuestions: state.correctAnswers + state.wrongAnswers,\n        correctAnswers: state.correctAnswers,\n        wrongAnswers: state.wrongAnswers,\n        fiftyFiftyUsed: 2 - state.fiftyFifty,\n        hintsUsed: 5 - state.hints\n      };\n      setTimeout(() => {\n        this.props.history.push('/play/quizSummary', playerStats);\n      }, 1000);\n    };\n\n    this.state = {\n      questions,\n      currentQuestion: {},\n      nextQuestion: {},\n      previousQuestion: {},\n      answer: '',\n      numberOfQuestions: 0,\n      numberOfAnsweredQuestions: 0,\n      currentQuestionIndex: 0,\n      score: 0,\n      correctAnswers: 0,\n      wrongAnswers: 0,\n      hints: 5,\n      fiftyFifty: 2,\n      usedFiftyFifty: false,\n      nextButtonDisabled: false,\n      previousButtonDisabled: true,\n      previousRandomNumbers: [],\n      time: {}\n    };\n    this.interval = null;\n    this.correctSound = React.createRef();\n    this.wrongSound = React.createRef();\n    this.buttonSound = React.createRef();\n  }\n\n  componentDidMount() {\n    const _this$state = this.state,\n          questions = _this$state.questions,\n          currentQuestion = _this$state.currentQuestion,\n          nextQuestion = _this$state.nextQuestion,\n          previousQuestion = _this$state.previousQuestion;\n    this.displayQuestions(questions, currentQuestion, nextQuestion, previousQuestion);\n    this.startTimer();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          currentQuestion = _this$state2.currentQuestion,\n          currentQuestionIndex = _this$state2.currentQuestionIndex,\n          fiftyFifty = _this$state2.fiftyFifty,\n          hints = _this$state2.hints,\n          numberOfQuestions = _this$state2.numberOfQuestions,\n          time = _this$state2.time;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(Helmet, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, \"Quiz Page\")), /*#__PURE__*/React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(\"audio\", {\n      ref: this.correctSound,\n      src: correctNotification,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }), /*#__PURE__*/React.createElement(\"audio\", {\n      ref: this.wrongSound,\n      src: wrongNotification,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }), /*#__PURE__*/React.createElement(\"audio\", {\n      ref: this.buttonSound,\n      src: buttonSound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"questions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, \"Quiz Mode\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"lifeline-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.handleFiftyFifty,\n      className: \"mdi mdi-set-center mdi-24px lifeline-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"lifeline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, fiftyFifty))), /*#__PURE__*/React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.handleHints,\n      className: \"mdi mdi-lightbulb-on-outline mdi-24px lifeline-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"lifeline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, hints)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"timer-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"left\",\n      style: {\n        float: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, currentQuestionIndex + 1, \" of \", numberOfQuestions), /*#__PURE__*/React.createElement(\"span\", {\n      className: classnames('right valid', {\n        'warning': time.distance <= 120000,\n        'invalid': time.distance < 30000\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, time.minutes, \":\", time.seconds, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"mdi mdi-clock-outline mdi-24px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    })))), /*#__PURE__*/React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, currentQuestion.question), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"options-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      onClick: this.handleOptionClick,\n      className: \"option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, currentQuestion.optionA), /*#__PURE__*/React.createElement(\"p\", {\n      onClick: this.handleOptionClick,\n      className: \"option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, currentQuestion.optionB)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"options-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      onClick: this.handleOptionClick,\n      className: \"option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, currentQuestion.optionC), /*#__PURE__*/React.createElement(\"p\", {\n      onClick: this.handleOptionClick,\n      className: \"option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, currentQuestion.optionD)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: classnames('', {\n        'disable': this.state.previousButtonDisabled\n      }),\n      id: \"previous-button\",\n      onClick: this.handleButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, \"Previous\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: classnames('', {\n        'disable': this.state.nextButtonDisabled\n      }),\n      id: \"next-button\",\n      onClick: this.handleButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, \"Next\"), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"quit-button\",\n      onClick: this.handleButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, \"Quit\"))));\n  }\n\n}\n\nexport default Test3; // export default function Test2(props) {\n//     const [index, setIndex] = useState(0)\n//           var questions=[];\n//           props.details.map((d,i)=>{\n//               questions[i]=(\n//                   {\n//                       questionText : d.body,\n//                       answerOptions: [\n//                         { answerText: d.answer1, isCorrect: d.trueans1 },\n//                         { answerText: d.answer2, isCorrect: d.trueans2 },\n//                         { answerText: d.answer3, isCorrect: d.trueans3 },\n//                         { answerText: d.answer4, isCorrect: d.trueans4 },\n//                         { answerText: d.answer5, isCorrect: d.trueans5}\n//                       ]\n//                   }\n//               )\n//           })\n//           console.log('pot:',questions.length)\n//     return (\n//         <div>{questions.map((d, i) => (\n//             d.questionText\n//           ))}</div>\n//     )\n//   }","map":{"version":3,"names":["React","Component","useState","Fragment","Slider","connect","Helmet","M","classnames","questions","isEmpty","correctNotification","wrongNotification","buttonSound","Test3","constructor","props","displayQuestions","state","currentQuestion","nextQuestion","previousQuestion","currentQuestionIndex","answer","setState","numberOfQuestions","length","previousRandomNumbers","showOptions","handleDisableButton","handleOptionClick","e","target","innerHTML","toLowerCase","correctTimeout","setTimeout","correctSound","current","play","correctAnswer","wrongTimeout","wrongSound","wrongAnswer","handleNextButtonClick","playButtonSound","undefined","prevState","handlePreviousButtonClick","handleQuitButtonClick","window","confirm","history","push","handleButtonClick","id","toast","html","classes","displayLength","score","correctAnswers","numberOfAnsweredQuestions","endGame","navigator","vibrate","wrongAnswers","options","Array","from","document","querySelectorAll","forEach","option","style","visibility","usedFiftyFifty","handleHints","hints","indexOfAnswer","index","randomNumber","Math","round","random","includes","concat","handleFiftyFifty","fiftyFifty","randomNumbers","count","newRandomNumber","startTimer","countDownTime","Date","now","interval","setInterval","distance","minutes","floor","seconds","clearInterval","time","previousButtonDisabled","nextButtonDisabled","alert","playerStats","fiftyFiftyUsed","hintsUsed","createRef","componentDidMount","componentWillUnmount","render","float","question","optionA","optionB","optionC","optionD"],"sources":["C:/React_project/EduTest/frontend/src/components/admin/ForCustomers/test3.js"],"sourcesContent":["import React, { Component, useState,Fragment } from 'react'\r\nimport Slider from 'react-touch-drag-slider'\r\nimport { connect } from 'react-redux';\r\nimport styled, { createGlobalStyle, css } from 'styled-components/macro'\r\nimport { Helmet } from 'react-helmet';\r\nimport M from 'materialize-css';\r\nimport classnames from 'classnames';\r\n\r\nimport questions from '../../questions.json';\r\nimport isEmpty from '../../utils/is-empty';\r\n\r\nimport correctNotification from '../../assets/audio/correct-answer.mp3';\r\nimport wrongNotification from '../../assets/audio/wrong-answer.mp3';\r\nimport buttonSound from '../../assets/audio/button-sound.mp3';\r\n\r\nclass Test3 extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            questions,\r\n            currentQuestion: {},\r\n            nextQuestion: {},\r\n            previousQuestion: {},\r\n            answer: '',\r\n            numberOfQuestions: 0,\r\n            numberOfAnsweredQuestions: 0,\r\n            currentQuestionIndex: 0,\r\n            score: 0,\r\n            correctAnswers: 0,\r\n            wrongAnswers: 0,\r\n            hints: 5,\r\n            fiftyFifty: 2,\r\n            usedFiftyFifty: false,\r\n            nextButtonDisabled: false,\r\n            previousButtonDisabled: true,\r\n            previousRandomNumbers: [],\r\n            time: {}\r\n        };\r\n        this.interval = null;\r\n        this.correctSound = React.createRef();\r\n        this.wrongSound = React.createRef();\r\n        this.buttonSound = React.createRef();\r\n    }\r\n\r\n    componentDidMount () {\r\n        const { questions, currentQuestion, nextQuestion, previousQuestion } = this.state;\r\n        this.displayQuestions(questions, currentQuestion, nextQuestion, previousQuestion);\r\n        this.startTimer();\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    displayQuestions = (questions = this.state.questions, currentQuestion, nextQuestion, previousQuestion) => {\r\n        let { currentQuestionIndex } = this.state;   \r\n        if (!isEmpty(this.state.questions)) {\r\n            questions = this.state.questions;\r\n            currentQuestion = questions[currentQuestionIndex];\r\n            nextQuestion = questions[currentQuestionIndex + 1];\r\n            previousQuestion = questions[currentQuestionIndex - 1];\r\n            const answer = currentQuestion.answer;\r\n            this.setState({\r\n                currentQuestion,\r\n                nextQuestion,\r\n                previousQuestion,\r\n                numberOfQuestions: questions.length,\r\n                answer,\r\n                previousRandomNumbers: []\r\n            }, () => {\r\n                this.showOptions();\r\n                this.handleDisableButton();\r\n            });\r\n        }     \r\n    };\r\n\r\n    handleOptionClick = (e) => {\r\n        if (e.target.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\r\n            this.correctTimeout = setTimeout(() => {\r\n                this.correctSound.current.play();\r\n            }, 500);\r\n            this.correctAnswer();\r\n        } else {\r\n            this.wrongTimeout = setTimeout(() => {\r\n                this.wrongSound.current.play();\r\n            }, 500);\r\n            this.wrongAnswer();\r\n        }\r\n    }\r\n\r\n    handleNextButtonClick = () => {\r\n        this.playButtonSound();\r\n        if (this.state.nextQuestion !== undefined) {\r\n            this.setState(prevState => ({\r\n                currentQuestionIndex: prevState.currentQuestionIndex + 1\r\n            }), () => {\r\n                this.displayQuestions(this.state.state, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\r\n            });\r\n        }\r\n    };\r\n\r\n    handlePreviousButtonClick = () => {\r\n        this.playButtonSound();\r\n        if (this.state.previousQuestion !== undefined) {\r\n            this.setState(prevState => ({\r\n                currentQuestionIndex: prevState.currentQuestionIndex - 1\r\n            }), () => {\r\n                this.displayQuestions(this.state.state, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\r\n            });\r\n        }\r\n    };\r\n\r\n    handleQuitButtonClick = () => {\r\n        this.playButtonSound();\r\n        if (window.confirm('Are you sure you want to quit?')) {\r\n            this.props.history.push('/');\r\n        }\r\n    };\r\n\r\n    handleButtonClick = (e) => {\r\n        switch (e.target.id) {\r\n            case 'next-button':\r\n                this.handleNextButtonClick();\r\n                break;\r\n\r\n            case 'previous-button':\r\n                this.handlePreviousButtonClick();\r\n                break;\r\n\r\n            case 'quit-button':\r\n                this.handleQuitButtonClick();\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        \r\n    };\r\n\r\n    playButtonSound = () => {\r\n        this.buttonSound.current.play();\r\n    };\r\n\r\n    correctAnswer = () => {\r\n        M.toast({\r\n            html: 'Correct Answer!',\r\n            classes: 'toast-valid',\r\n            displayLength: 1500\r\n        });\r\n        this.setState(prevState => ({\r\n            score: prevState.score + 1,\r\n            correctAnswers: prevState.correctAnswers + 1,\r\n            currentQuestionIndex: prevState.currentQuestionIndex + 1,\r\n            numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1\r\n        }), () => {            \r\n            if (this.state.nextQuestion === undefined) {\r\n                this.endGame();\r\n            } else {\r\n                this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\r\n            }\r\n        });\r\n    }\r\n\r\n    wrongAnswer = () => {\r\n        navigator.vibrate(1000);\r\n        M.toast({\r\n            html: 'Wrong Answer!',\r\n            classes: 'toast-invalid',\r\n            displayLength: 1500\r\n        });\r\n        this.setState(prevState => ({\r\n            wrongAnswers: prevState.wrongAnswers + 1,\r\n            currentQuestionIndex: prevState.currentQuestionIndex + 1,\r\n            numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1\r\n        }), () => {\r\n            if (this.state.nextQuestion === undefined) {\r\n                this.endGame();\r\n            } else {\r\n                this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\r\n            }\r\n        });\r\n    }\r\n\r\n    showOptions = () => {\r\n        const options = Array.from(document.querySelectorAll('.option'));\r\n\r\n        options.forEach(option => {\r\n            option.style.visibility = 'visible';\r\n        });\r\n\r\n        this.setState({\r\n            usedFiftyFifty: false\r\n        });\r\n    }\r\n\r\n    handleHints = () => {\r\n        if (this.state.hints > 0) {\r\n            const options = Array.from(document.querySelectorAll('.option'));\r\n            let indexOfAnswer;\r\n\r\n            options.forEach((option, index) => {\r\n                if (option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\r\n                    indexOfAnswer = index;\r\n                }\r\n            });\r\n\r\n            while (true) {\r\n                const randomNumber = Math.round(Math.random() * 3);\r\n                if (randomNumber !== indexOfAnswer && !this.state.previousRandomNumbers.includes(randomNumber)) {\r\n                    options.forEach((option, index) => {\r\n                        if (index === randomNumber) {\r\n                            option.style.visibility = 'hidden';\r\n                            this.setState((prevState) => ({\r\n                                hints: prevState.hints - 1,\r\n                                previousRandomNumbers: prevState.previousRandomNumbers.concat(randomNumber)\r\n                            }));\r\n                        }\r\n                    });\r\n                    break;\r\n                }\r\n                if (this.state.previousRandomNumbers.length >= 3) break;\r\n            }\r\n        }\r\n    }\r\n\r\n    handleFiftyFifty = () => {\r\n        if (this.state.fiftyFifty > 0 && this.state.usedFiftyFifty === false) {\r\n            const options = document.querySelectorAll('.option');\r\n            const randomNumbers = [];\r\n            let indexOfAnswer;\r\n\r\n            options.forEach((option, index) => {\r\n                if (option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\r\n                    indexOfAnswer = index;\r\n                }\r\n            });\r\n\r\n            let count = 0;\r\n            do {\r\n                const randomNumber = Math.round(Math.random() * 3);\r\n                if (randomNumber !== indexOfAnswer) {\r\n                    if (randomNumbers.length < 2 && !randomNumbers.includes(randomNumber) && !randomNumbers.includes(indexOfAnswer)) {\r\n                            randomNumbers.push(randomNumber);\r\n                            count ++;\r\n                    } else {\r\n                        while (true) {\r\n                            const newRandomNumber = Math.round(Math.random() * 3);\r\n                            if (!randomNumbers.includes(newRandomNumber) && newRandomNumber !== indexOfAnswer) {\r\n                                randomNumbers.push(newRandomNumber);\r\n                                count ++;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } while (count < 2);\r\n\r\n            options.forEach((option, index) => {\r\n                if (randomNumbers.includes(index)) {\r\n                    option.style.visibility = 'hidden';\r\n                }\r\n            });\r\n            this.setState(prevState => ({\r\n                fiftyFifty: prevState.fiftyFifty - 1,\r\n                usedFiftyFifty: true\r\n            }));\r\n        }\r\n    }\r\n\r\n    startTimer = () => {\r\n        const countDownTime = Date.now() + 180000;\r\n        this.interval = setInterval(() => {\r\n            const now = new Date();\r\n            const distance = countDownTime - now;\r\n\r\n            const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n            const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n            if (distance < 0) {\r\n                clearInterval(this.interval);\r\n                this.setState({\r\n                    time: {\r\n                        minutes: 0,\r\n                        seconds: 0\r\n                    }\r\n                }, () => {\r\n                    this.endGame();\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    time: {\r\n                        minutes,\r\n                        seconds,\r\n                        distance\r\n                    }\r\n                });\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    handleDisableButton = () => {\r\n        if (this.state.previousQuestion === undefined || this.state.currentQuestionIndex === 0) {\r\n            this.setState({\r\n                previousButtonDisabled: true\r\n            });\r\n        } else {\r\n            this.setState({\r\n                previousButtonDisabled: false\r\n            });\r\n        }\r\n\r\n        if (this.state.nextQuestion === undefined || this.state.currentQuestionIndex + 1 === this.state.numberOfQuestions) {\r\n            this.setState({\r\n                nextButtonDisabled: true\r\n            });\r\n        } else {\r\n            this.setState({\r\n                nextButtonDisabled: false\r\n            });\r\n        }\r\n    }\r\n\r\n    endGame = () => {\r\n        alert('Quiz has eneded!');\r\n        const { state } = this;\r\n        const playerStats = {\r\n            score: state.score,\r\n            numberOfQuestions: state.numberOfQuestions,\r\n            numberOfAnsweredQuestions: state.correctAnswers + state.wrongAnswers,\r\n            correctAnswers: state.correctAnswers,\r\n            wrongAnswers: state.wrongAnswers,\r\n            fiftyFiftyUsed: 2 - state.fiftyFifty,\r\n            hintsUsed: 5 - state.hints\r\n        };\r\n        setTimeout(() => {\r\n            this.props.history.push('/play/quizSummary', playerStats);\r\n        }, 1000);\r\n    }\r\n\r\n    render () {\r\n        const { \r\n            currentQuestion, \r\n            currentQuestionIndex, \r\n            fiftyFifty, \r\n            hints, \r\n            numberOfQuestions,\r\n            time \r\n        } = this.state;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Helmet><title>Quiz Page</title></Helmet>\r\n                <Fragment>\r\n                    <audio ref={this.correctSound} src={correctNotification}></audio>\r\n                    <audio ref={this.wrongSound} src={wrongNotification}></audio>\r\n                    <audio ref={this.buttonSound} src={buttonSound}></audio>\r\n                </Fragment>\r\n                <div className=\"questions\">\r\n                    <h2>Quiz Mode</h2>\r\n                    <div className=\"lifeline-container\">\r\n                        <p>\r\n                            <span onClick={this.handleFiftyFifty} className=\"mdi mdi-set-center mdi-24px lifeline-icon\">\r\n                                <span className=\"lifeline\">{fiftyFifty}</span>\r\n                            </span>\r\n                        </p>\r\n                        <p>\r\n                            <span onClick={this.handleHints} className=\"mdi mdi-lightbulb-on-outline mdi-24px lifeline-icon\">\r\n                                <span className=\"lifeline\">{hints}</span>\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"timer-container\">\r\n                        <p>\r\n                            <span className=\"left\" style={{ float: 'left' }}>{currentQuestionIndex + 1} of {numberOfQuestions}</span>\r\n                            <span className={classnames('right valid', {\r\n                                'warning': time.distance <= 120000,\r\n                                'invalid': time.distance < 30000\r\n                            })}>\r\n                                {time.minutes}:{time.seconds}\r\n                            <span  className=\"mdi mdi-clock-outline mdi-24px\"></span></span>\r\n                        </p>\r\n                    </div>\r\n                    <h5>{currentQuestion.question}</h5>\r\n                    <div className=\"options-container\">\r\n                        <p onClick={this.handleOptionClick} className=\"option\">{currentQuestion.optionA}</p>\r\n                        <p onClick={this.handleOptionClick} className=\"option\">{currentQuestion.optionB}</p>\r\n                    </div>\r\n                    <div className=\"options-container\">\r\n                        <p onClick={this.handleOptionClick} className=\"option\">{currentQuestion.optionC}</p>\r\n                        <p onClick={this.handleOptionClick} className=\"option\">{currentQuestion.optionD}</p>\r\n                    </div>\r\n\r\n                    <div className=\"button-container\">\r\n                        <button \r\n                            className={classnames('', {'disable': this.state.previousButtonDisabled})}\r\n                            id=\"previous-button\" \r\n                            onClick={this.handleButtonClick}>\r\n                            Previous\r\n                        </button>\r\n                        <button \r\n                            className={classnames('', {'disable': this.state.nextButtonDisabled})}\r\n                            id=\"next-button\" \r\n                            onClick={this.handleButtonClick}>\r\n                                Next\r\n                            </button>\r\n                        <button id=\"quit-button\" onClick={this.handleButtonClick}>Quit</button>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test3;\r\n\r\n// export default function Test2(props) {\r\n//     const [index, setIndex] = useState(0)\r\n//           var questions=[];\r\n//           props.details.map((d,i)=>{\r\n              \r\n//               questions[i]=(\r\n//                   {\r\n//                       questionText : d.body,\r\n//                       answerOptions: [\r\n//                         { answerText: d.answer1, isCorrect: d.trueans1 },\r\n//                         { answerText: d.answer2, isCorrect: d.trueans2 },\r\n//                         { answerText: d.answer3, isCorrect: d.trueans3 },\r\n//                         { answerText: d.answer4, isCorrect: d.trueans4 },\r\n//                         { answerText: d.answer5, isCorrect: d.trueans5}\r\n//                       ]\r\n//                   }\r\n//               )\r\n              \r\n//           })\r\n//           console.log('pot:',questions.length)\r\n  \r\n//     return (\r\n      \r\n//         <div>{questions.map((d, i) => (\r\n//             d.questionText\r\n//           ))}</div>\r\n\r\n        \r\n//     )\r\n//   }"],"mappings":"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"},"metadata":{},"sourceType":"module"}