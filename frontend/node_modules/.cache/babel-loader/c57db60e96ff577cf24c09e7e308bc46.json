{"ast":null,"code":"import _objectSpread from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\admin\\\\newChapter\\\\newchapter.js\";\nimport React, { Component } from 'react';\nimport './newchapter.css';\nimport { Form, Input, Button, Select, Upload, Row, Col } from 'antd';\nimport Icon from '@ant-design/icons';\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport { connect } from 'react-redux';\nimport { ChangeChapterConfirmDirty, ChangeChapterModalState, ChangeChapterTableData } from '../../../actions/chapterAction';\nimport Alert from '../../../components/common/alert';\nimport auth from '../../../services/AuthServices';\nconst Option = Select.Option;\n\nclass NewChapter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.ChapterImageonChange = f => {\n      var newchapimg = this.state.chapterDetails.chapterimage;\n\n      if (!f) {\n        newchapimg = null;\n      } else {\n        newchapimg = \"\".concat(apis.BASE, \"/\").concat(f.link);\n      }\n\n      this.setState({\n        submitDisabled: false\n      });\n\n      if (newchapimg === 'undefined' || newchapimg === undefined || newchapimg === null || newchapimg === 'null') {\n        //(newOptions[i].body==='undefined' || newOptions[i].body===undefined || newOptions[i].body==='null' || newOptions[i].body==='' || newOptions[i].body===null)){\n        newchapimg = this.state.chapterDetails.chapterimage;\n      }\n\n      this.setState((ps, pp) => {\n        return {\n          chapterDetails: _objectSpread({}, ps.chapterDetails, {\n            chapterimage: newchapimg\n          })\n        };\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          console.log('Полученные значения формы: ', values);\n          SecurePost({\n            url: \"\".concat(apis.CREATE_CHAPTER),\n            data: {\n              _id: this.props.chapter.chapterId,\n              name: values.name,\n              descr: values.descr,\n              icon: this.state.chapterDetails.chapterimage\n            }\n          }).then(response => {\n            if (response.data.success) {\n              this.props.ChangeChapterModalState(false, null, 'Регистрация');\n              Alert('success', 'Успешно', response.data.message);\n              this.props.ChangeChapterTableData();\n            } else {\n              console.log(response.data);\n              this.props.ChangeChapterModalState(false, null, 'Регистрация');\n              return Alert('warning', 'Предупреждение!', response.data.message);\n            }\n          }).catch(error => {\n            console.log(error);\n            this.setState({\n              chapterDetails: {\n                chapterimage: null\n              }\n            });\n            this.props.ChangeChapterModalState(false, null, 'Регистрация');\n            return Alert('error', 'Ошибка!', 'Ошибка сервера');\n          });\n        }\n      });\n    };\n\n    this.changeqImage = f => {\n      this.setState((ps, pp) => {\n        return {\n          chapterDetails: _objectSpread({}, ps.chapterDetails, {\n            chapterimage: f.link ? \"\".concat(apis.BASE, \"/\").concat(f.link) : null\n          }),\n          submitDisabled: false\n        };\n      });\n    };\n\n    this.upl = () => {\n      this.setState({\n        submitDisabled: false\n      });\n    };\n\n    this.state = {\n      chapterDetails: {\n        chapterimage: this.props.chapter.chapterdetails.icon\n      },\n      submitDisabled: false\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    var ChapterImageprops = {\n      name: 'file',\n      action: \"\".concat(apis.BASE).concat(apis.FILE_UPLOAD, \"?Token=\").concat(auth.retriveToken()),\n      listType: 'picture'\n    };\n    return React.createElement(\"div\", {\n      className: \"register-chapter-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"register-chapter-form-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"\\u041D\\u0430\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\",\n      hasFeedback: true,\n      className: \"input-admin-chapter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, getFieldDecorator('name', {\n      initialValue: this.props.chapter.chapterdetails.name,\n      rules: [{\n        required: true,\n        message: 'Пожалуйста, введите наименование!',\n        whitespace: true\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",\n      hasFeedback: true,\n      className: \"input-admin-chapter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, getFieldDecorator('descr', {\n      initialValue: this.props.chapter.chapterdetails.descr,\n      rules: [{\n        required: true,\n        message: 'Описание!',\n        whitespace: true\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"\\u0414\\u043E\\u0441\\u0442\\u0438\\u0436\\u0435\\u043D\\u0438\\u044F\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Upload, Object.assign({}, ChapterImageprops, {\n      beforeUpload: this.upl,\n      onRemove: f => this.ChapterImageonChange(null),\n      onSuccess: f => this.ChapterImageonChange(f),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), getFieldDecorator('icon', {\n      initialValue: this.props.chapter.chapterdetails.icon,\n      rules: [{\n        required: false,\n        message: 'Пожалуйста, загрузите ваш аватар!'\n      }]\n    })(React.createElement(\"img\", {\n      src: this.props.chapter.chapterdetails.icon,\n      style: {\n        width: \"60px\",\n        height: \"80px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })), React.createElement(Button, {\n      style: {\n        marginLeft: '100px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), \" \\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C\"))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, this.props.chapter.Chaptermode)))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  chapter: state.chapter,\n  trainer: state.trainer,\n  admin: state.admin\n});\n\nconst NewChapterForm = Form.create({\n  name: 'register'\n})(NewChapter);\nexport default connect(mapStateToProps, {\n  ChangeChapterConfirmDirty,\n  ChangeChapterModalState,\n  ChangeChapterTableData\n})(NewChapterForm);","map":{"version":3,"sources":["C:\\React_project\\EduTest\\frontend\\src\\components\\admin\\newChapter\\newchapter.js"],"names":["React","Component","Form","Input","Button","Select","Upload","Row","Col","Icon","SecurePost","apis","connect","ChangeChapterConfirmDirty","ChangeChapterModalState","ChangeChapterTableData","Alert","auth","Option","NewChapter","constructor","props","ChapterImageonChange","f","newchapimg","state","chapterDetails","chapterimage","BASE","link","setState","submitDisabled","undefined","ps","pp","handleSubmit","e","preventDefault","form","validateFieldsAndScroll","err","values","console","log","url","CREATE_CHAPTER","data","_id","chapter","chapterId","name","descr","icon","then","response","success","message","catch","error","changeqImage","upl","chapterdetails","render","getFieldDecorator","ChapterImageprops","action","FILE_UPLOAD","retriveToken","listType","initialValue","rules","required","whitespace","width","height","marginLeft","Chaptermode","mapStateToProps","trainer","admin","NewChapterForm","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport './newchapter.css';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Select,\r\n    Upload,\r\n    Row,\r\n    Col\r\n} from 'antd';\r\nimport Icon from '@ant-design/icons';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    ChangeChapterConfirmDirty,\r\n    ChangeChapterModalState,\r\n    ChangeChapterTableData\r\n} from '../../../actions/chapterAction';\r\nimport Alert from '../../../components/common/alert';\r\nimport auth from '../../../services/AuthServices';\r\nconst { Option } = Select;\r\nclass NewChapter extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            chapterDetails:{\r\n                chapterimage: this.props.chapter.chapterdetails.icon,\r\n            },\r\n            submitDisabled:false,\r\n        }\r\n    }\r\n\r\n    ChapterImageonChange = (f)=>{\r\n        var newchapimg = this.state.chapterDetails.chapterimage\r\n        if(!f){\r\n            newchapimg=null\r\n        }\r\n        else{\r\n            newchapimg=`${apis.BASE}/${f.link}`\r\n            \r\n        }\r\n        this.setState({\r\n            submitDisabled:false\r\n        })\r\n        if(newchapimg==='undefined' || newchapimg===undefined || newchapimg===null || newchapimg==='null') {\r\n            //(newOptions[i].body==='undefined' || newOptions[i].body===undefined || newOptions[i].body==='null' || newOptions[i].body==='' || newOptions[i].body===null)){\r\n                newchapimg=this.state.chapterDetails.chapterimage;    \r\n        }\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                chapterDetails:{\r\n                    ...ps.chapterDetails,\r\n                    chapterimage:newchapimg\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                console.log('Полученные значения формы: ', values);\r\n                \r\n                    SecurePost({\r\n                        url : `${apis.CREATE_CHAPTER}`,\r\n                        data : {\r\n                            _id : this.props.chapter.chapterId,\r\n                            name :values.name,                            \r\n                            descr : values.descr,\r\n                            icon: this.state.chapterDetails.chapterimage,\r\n                        }\r\n                    }).then((response)=>{\r\n                        if(response.data.success){\r\n                            this.props.ChangeChapterModalState(false,null,'Регистрация');\r\n                            Alert('success','Успешно',response.data.message);\r\n                            this.props.ChangeChapterTableData();\r\n                        }\r\n                        else{\r\n                            console.log(response.data);\r\n                            this.props.ChangeChapterModalState(false,null,'Регистрация');\r\n                            return Alert('warning','Предупреждение!',response.data.message);\r\n                        }\r\n                    }).catch((error)=>{\r\n                        console.log(error);\r\n                        this.setState({\r\n                            chapterDetails: {\r\n                                chapterimage: null,\r\n                            }\r\n                        })\r\n                        this.props.ChangeChapterModalState(false,null,'Регистрация');\r\n                        return Alert('error','Ошибка!','Ошибка сервера');\r\n                    })\r\n                \r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    changeqImage = (f)=>{\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                chapterDetails:{\r\n                    ...ps.chapterDetails,\r\n                    chapterimage:(f.link ?`${apis.BASE}/${f.link}`:null)\r\n                },\r\n                submitDisabled:false\r\n            })\r\n        })\r\n    }\r\n\r\n    upl=()=>{\r\n        this.setState({\r\n            submitDisabled: false\r\n        })\r\n    }\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        \r\n          var ChapterImageprops={\r\n            name: 'file',\r\n            action: `${apis.BASE}${apis.FILE_UPLOAD}?Token=${auth.retriveToken()}`,\r\n            listType: 'picture',\r\n        }\r\n        return (\r\n            <div className=\"register-chapter-form\">\r\n                <div className=\"register-chapter-form-body\">\r\n                    <Form  onSubmit={this.handleSubmit}>\r\n                        <Form.Item label=\"Наименование\" hasFeedback className=\"input-admin-chapter\">\r\n                            {getFieldDecorator('name', {\r\n                                initialValue : this.props.chapter.chapterdetails.name,\r\n                                rules: [{ required: true, message: 'Пожалуйста, введите наименование!', whitespace: true }],\r\n                            })(<Input />)}\r\n                        </Form.Item>\r\n                    \r\n                        <Form.Item label=\"Описание\" hasFeedback className=\"input-admin-chapter\">\r\n                            {getFieldDecorator('descr', {\r\n                                initialValue : this.props.chapter.chapterdetails.descr,\r\n                                rules: [{ required: true, message: 'Описание!', whitespace: true }],\r\n                            })(<Input />)}\r\n                        </Form.Item>\r\n                        \r\n                       <Form.Item label=\"Достижения\">\r\n                       <Upload {...ChapterImageprops} beforeUpload={this.upl} onRemove={(f)=>this.ChapterImageonChange(null)} onSuccess={(f)=>this.ChapterImageonChange(f)}>\r\n                                {getFieldDecorator('icon', {\r\n                                    initialValue : this.props.chapter.chapterdetails.icon,\r\n                                    rules: [{ required: false, message: 'Пожалуйста, загрузите ваш аватар!'}],\r\n                                })(<img src={this.props.chapter.chapterdetails.icon} style={{width: \"60px\",height: \"80px\",}}/>)\r\n                                }\r\n                                \r\n                                <Button style={{marginLeft: '100px'}}>\r\n                                    <Icon type=\"upload\" /> Загрузить\r\n                                </Button>\r\n                                \r\n                            </Upload>\r\n                            </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                {this.props.chapter.Chaptermode}\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    chapter : state.chapter,\r\n    trainer : state.trainer,\r\n    admin : state.admin\r\n});\r\n\r\n\r\n\r\nconst NewChapterForm = Form.create({ name: 'register' })(NewChapter);\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeChapterConfirmDirty,\r\n    ChangeChapterModalState,\r\n    ChangeChapterTableData\r\n})(NewChapterForm);\r\n\r\n"]},"metadata":{},"sourceType":"module"}