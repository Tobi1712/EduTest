{"ast":null,"code":"import _objectSpread from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\admin\\\\Test\\\\test.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Alert from '../../common/alert';\nimport apis from '../../../services/Apis';\nimport { Post } from '../../../services/axiosCall';\nimport 'antd';\n\nclass Test extends Component {\n  constructor(props) {\n    super(props);\n\n    this.SaveTocloud = () => {\n      Post({\n        url: \"\".concat(apis.UPDATE_ANSWERS),\n        data: {\n          testid: this.props.trainee.testid,\n          userid: this.props.trainee.traineeid,\n          qid: this.props.trainee.questions[this.props.trainee.activeQuestionIndex]._id,\n          newAnswer: this.state.answers\n        }\n      }).then(response => {\n        if (response.data.success) {\n          console.log(response.data);\n          var t = [...this.props.trainee.answers];\n          t[this.props.trainee.activeQuestionIndex] = _objectSpread({}, t[this.props.trainee.activeQuestionIndex], {\n            chosenOption: this.state.answers,\n            isAnswered: true\n          });\n          this.props.updateIsMarked(t);\n        } else {\n          this.props.fetchTestdata(this.props.trainee.testid, this.props.trainee.traineeid);\n          return Alert('error', 'Error!', response.data.message);\n        }\n      }).catch(err => {\n        return Alert('error', 'Error!', 'Server Error');\n      });\n    };\n\n    this.previous = () => {\n      if (this.props.trainee.activeQuestionIndex > 0) {\n        this.props.switchQuestion(this.props.trainee.activeQuestionIndex - 1);\n      }\n    };\n\n    this.next = () => {\n      if (this.state.AnswerSelected) {\n        this.SaveTocloud();\n\n        if (this.props.trainee.activeQuestionIndex < this.props.trainee.questions.length - 1) {\n          this.props.switchQuestion(this.props.trainee.activeQuestionIndex + 1);\n        }\n      } else {\n        if (this.props.trainee.activeQuestionIndex < this.props.trainee.questions.length - 1) {\n          this.props.switchQuestion(this.props.trainee.activeQuestionIndex + 1);\n        }\n      }\n    };\n\n    this.mark = () => {\n      let aa = [...this.props.trainee.answers];\n      let c = aa[this.props.trainee.activeQuestionIndex];\n      c.isMarked = !this.props.trainee.answers[this.props.trainee.activeQuestionIndex].isMarked;\n      aa[this.props.trainee.activeQuestionIndex] = c;\n      this.props.updateIsMarked(aa);\n    };\n\n    this.onAnswerChange = (d1, d2, d3) => {\n      var ansCount = this.props.trainee.questions[this.props.trainee.activeQuestionIndex].anscount;\n\n      if (d2) {\n        if (this.state.ticked === ansCount) {\n          return Alert('error', 'Error!', 'Clear selected options to select other option');\n        } else {\n          var op1 = [...this.state.options];\n          op1[d1] = _objectSpread({}, op1[d1], {\n            checked: true\n          });\n          var op2 = [...this.state.answers];\n          op2.push(d3);\n\n          if (this.state.ticked === ansCount - 1) {\n            this.setState((PState, Pprops) => {\n              return {\n                AnswerSelected: true,\n                ticked: PState.ticked + 1,\n                options: op1,\n                answers: op2\n              };\n            });\n          } else {\n            this.setState((PState, Pprops) => {\n              return {\n                ticked: PState.ticked + 1,\n                options: op1,\n                answers: op2\n              };\n            });\n          }\n        }\n      } else {\n        op1 = [...this.state.options];\n        op1[d1] = _objectSpread({}, op1[d1], {\n          checked: false\n        });\n        op2 = [...this.state.answers];\n        var index = op2.indexOf(d3);\n        op2.splice(index, 1);\n        this.setState((PState, Pprops) => {\n          return {\n            AnswerSelected: false,\n            ticked: PState.ticked - 1,\n            options: op1,\n            answers: op2\n          };\n        });\n      }\n    };\n\n    if (this.props.trainee.answers[this.props.trainee.activeQuestionIndex].chosenOption.length === this.props.trainee.questions[this.props.trainee.activeQuestionIndex].anscount) {\n      this.state = {\n        AnswerSelected: true,\n        options: this.props.trainee.questions[this.props.trainee.activeQuestionIndex].options,\n        answers: this.props.trainee.answers[this.props.trainee.activeQuestionIndex].chosenOption,\n        ticked: 0\n      };\n    } else {\n      this.state = {\n        AnswerSelected: false,\n        options: this.props.trainee.questions[this.props.trainee.activeQuestionIndex].options,\n        answers: this.props.trainee.answers[this.props.trainee.activeQuestionIndex].chosenOption,\n        ticked: 0\n      };\n    }\n  }\n\n  componentWillMount() {\n    this.setState((PState, Pprops) => {\n      let t = 0;\n      var s = PState.options.map((d, i) => {\n        for (var ii = 0; ii < PState.answers.length; ii++) {\n          if (PState.answers[ii] === d._id) {\n            t += 1;\n            return _objectSpread({}, d, {\n              checked: true\n            });\n          }\n        }\n\n        return _objectSpread({}, d, {\n          checked: false\n        });\n      });\n      return {\n        ticked: t,\n        options: s\n      };\n    });\n  }\n\n  render() {\n    console.log(this.state);\n    let opts = ['A', 'B', 'C', 'D', 'E'];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Question-single-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        background: '#009999',\n        color: '#fff'\n      },\n      shape: \"circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, this.props.trainee.activeQuestionIndex + 1)), React.createElement(Col, {\n      span: 22,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(Radio.Group, {\n      style: {\n        float: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Radio.Button, {\n      style: {\n        background: '#009999',\n        color: '#fff'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, this.props.trainee.questions[this.props.trainee.activeQuestionIndex].anscount === 1 ? \"Single answer type\" : \"Multiple answer type\"), React.createElement(Radio.Button, {\n      style: {\n        background: '#009999',\n        color: '#fff'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Marks : \", this.props.trainee.questions[this.props.trainee.activeQuestionIndex].weightage)))), this.props.mode === 'mobile' ? React.createElement(Button, {\n      onClick: this.props.triggerSidebar,\n      style: {\n        background: '#009999',\n        color: '#fff'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Tool\") : null, React.createElement(\"div\", {\n      className: \"Question-single-body-holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: {\n        fontFamily: \"'Montserrat', sans-serif\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, this.props.trainee.questions[this.props.trainee.activeQuestionIndex].body)), this.props.trainee.questions[this.props.trainee.activeQuestionIndex].quesimg ? React.createElement(\"div\", {\n      className: \"Single-question-body-image-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"Unable to load\",\n      src: this.props.trainee.questions[this.props.trainee.activeQuestionIndex].quesimg,\n      className: \"Single-question-body-image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })) : null), React.createElement(\"div\", {\n      className: \"Question-single-option-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, this.state.options.map((d, i) => {\n      return React.createElement(Col, {\n        span: 12,\n        key: i,\n        className: \"Single-option\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 2,\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(Button, {\n        style: {\n          background: '#009999',\n          color: '#fff'\n        },\n        shape: \"circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, opts[i]), React.createElement(Checkbox, {\n        checked: d.checked,\n        onChange: e => {\n          this.onAnswerChange(i, e.target.checked, d._id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      })), React.createElement(Col, {\n        span: 22,\n        style: {\n          padding: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          fontFamily: \"'Montserrat', sans-serif\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, d.optbody), React.createElement(\"div\", {\n        className: \"option-image-in-exam-panel-holder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, d.optimg ? React.createElement(\"img\", {\n        alt: \"Unable to load\",\n        className: \"option-image-in-exam-panel\",\n        src: d.optimg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }) : null))));\n    })))), React.createElement(\"div\", {\n      className: \"control-button-in-exam-portal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(Button.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, this.props.trainee.activeQuestionIndex === 0 ? null : React.createElement(Button, {\n      style: {\n        background: '#009999',\n        color: '#fff'\n      },\n      onClick: this.previous,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), \"Previous\"), React.createElement(Button, {\n      type: \"default\",\n      onClick: this.mark,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"flag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), !this.props.trainee.answers[this.props.trainee.activeQuestionIndex].isMarked ? \"Mark Question\" : \"Unmark Question\"), this.props.trainee.activeQuestionIndex === this.props.trainee.questions.length - 1 ? null : React.createElement(Button, {\n      style: {\n        background: '#009999',\n        color: '#fff'\n      },\n      onClick: this.next,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, this.state.AnswerSelected ? \"Save & Next\" : \"Next\", React.createElement(Icon, {\n      type: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    })), this.props.trainee.activeQuestionIndex === this.props.trainee.questions.length - 1 && this.state.AnswerSelected ? React.createElement(Button, {\n      style: {\n        background: '#009999',\n        color: '#fff'\n      },\n      onClick: () => {\n        this.SaveTocloud();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"Save\", React.createElement(Icon, {\n      type: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    })) : null)));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  trainee: state.trainee\n});\n\nexport default connect(mapStateToProps, {\n  switchQuestion,\n  updateIsMarked,\n  fetchTestdata\n})(Test);","map":{"version":3,"sources":["C:\\React_project\\EduTest\\frontend\\src\\components\\admin\\Test\\test.js"],"names":["React","Component","connect","Alert","apis","Post","Test","constructor","props","SaveTocloud","url","UPDATE_ANSWERS","data","testid","trainee","userid","traineeid","qid","questions","activeQuestionIndex","_id","newAnswer","state","answers","then","response","success","console","log","t","chosenOption","isAnswered","updateIsMarked","fetchTestdata","message","catch","err","previous","switchQuestion","next","AnswerSelected","length","mark","aa","c","isMarked","onAnswerChange","d1","d2","d3","ansCount","anscount","ticked","op1","options","checked","op2","push","setState","PState","Pprops","index","indexOf","splice","componentWillMount","s","map","d","i","ii","render","opts","background","color","float","weightage","mode","triggerSidebar","fontFamily","body","quesimg","textAlign","e","target","padding","optbody","optimg","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Alert from '../../common/alert';\r\nimport apis from '../../../services/Apis';\r\nimport { Post } from '../../../services/axiosCall';\r\nimport {} from 'antd';\r\n\r\nclass Test extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        if(this.props.trainee.answers[this.props.trainee.activeQuestionIndex].chosenOption.length===this.props.trainee.questions[this.props.trainee.activeQuestionIndex].anscount){\r\n            this.state={\r\n                AnswerSelected:true,\r\n                options:this.props.trainee.questions[this.props.trainee.activeQuestionIndex].options,\r\n                answers:this.props.trainee.answers[this.props.trainee.activeQuestionIndex].chosenOption,\r\n                ticked:0\r\n            }\r\n        }\r\n        else{\r\n            this.state={\r\n                AnswerSelected:false,\r\n                options:this.props.trainee.questions[this.props.trainee.activeQuestionIndex].options,\r\n                answers:this.props.trainee.answers[this.props.trainee.activeQuestionIndex].chosenOption,\r\n                ticked:0\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.setState((PState,Pprops)=>{\r\n            let t=0;\r\n            var s = PState.options.map((d,i)=>{\r\n                for(var ii=0;ii<PState.answers.length;ii++){\r\n                    if(PState.answers[ii]===d._id){\r\n                        t+=1;\r\n                        return({\r\n                            ...d,\r\n                            checked:true\r\n                        })\r\n                    }\r\n                }\r\n                return({\r\n                    ...d,\r\n                    checked:false\r\n                })\r\n            })\r\n            return({\r\n                ticked:t,\r\n                options :s\r\n            })\r\n        })\r\n    }\r\n\r\n    SaveTocloud=()=>{\r\n        Post({\r\n            url:`${apis.UPDATE_ANSWERS}`,\r\n            data:{\r\n                testid : this.props.trainee.testid,\r\n                userid : this.props.trainee.traineeid,\r\n                qid:this.props.trainee.questions[this.props.trainee.activeQuestionIndex]._id,\r\n                newAnswer:this.state.answers\r\n            }\r\n        }).then((response)=>{\r\n            if(response.data.success){\r\n                console.log(response.data)\r\n                var t = [...this.props.trainee.answers];\r\n                t[this.props.trainee.activeQuestionIndex]={\r\n                    ...t[this.props.trainee.activeQuestionIndex],\r\n                    chosenOption:this.state.answers,\r\n                    isAnswered:true\r\n                }\r\n                this.props.updateIsMarked(t);\r\n            }\r\n            else{\r\n                this.props.fetchTestdata(this.props.trainee.testid,this.props.trainee.traineeid);\r\n                return Alert('error','Error!',response.data.message);\r\n                \r\n            }\r\n        }).catch((err)=>{\r\n            return Alert('error','Error!','Server Error');\r\n        })\r\n    }\r\n\r\n    previous=()=>{\r\n        if(this.props.trainee.activeQuestionIndex>0){\r\n            this.props.switchQuestion(this.props.trainee.activeQuestionIndex-1)\r\n        }\r\n    }\r\n\r\n    next = ()=>{\r\n        if(this.state.AnswerSelected){\r\n            this.SaveTocloud();\r\n            if(this.props.trainee.activeQuestionIndex<this.props.trainee.questions.length-1){\r\n                this.props.switchQuestion(this.props.trainee.activeQuestionIndex+1)\r\n            } \r\n        }\r\n        else{\r\n            if(this.props.trainee.activeQuestionIndex<this.props.trainee.questions.length-1){\r\n                this.props.switchQuestion(this.props.trainee.activeQuestionIndex+1)\r\n            } \r\n        }\r\n    }\r\n\r\n    mark=()=>{\r\n        let aa=[...this.props.trainee.answers];\r\n        let c= aa[this.props.trainee.activeQuestionIndex];\r\n        c.isMarked=!this.props.trainee.answers[this.props.trainee.activeQuestionIndex].isMarked;\r\n        aa[this.props.trainee.activeQuestionIndex]=c\r\n        this.props.updateIsMarked(aa);\r\n    }\r\n\r\n    onAnswerChange=(d1,d2,d3)=>{\r\n        var ansCount=this.props.trainee.questions[this.props.trainee.activeQuestionIndex].anscount;\r\n        if(d2){\r\n            if(this.state.ticked===ansCount){\r\n                return Alert('error','Error!','Clear selected options to select other option')\r\n            }\r\n            else{\r\n                var op1 = [...this.state.options];\r\n                op1[d1]={\r\n                    ...op1[d1],\r\n                    checked:true\r\n                }\r\n                var op2 = [...this.state.answers]\r\n                op2.push(d3);\r\n                if(this.state.ticked===ansCount-1){\r\n                    this.setState((PState,Pprops)=>{\r\n                        return({\r\n                            AnswerSelected:true,\r\n                            ticked :PState.ticked+1,\r\n                            options : op1,\r\n                            answers : op2\r\n                        })\r\n                    })\r\n                }\r\n                else{\r\n                    this.setState((PState,Pprops)=>{\r\n                        return({\r\n                            ticked :PState.ticked+1,\r\n                            options : op1,\r\n                            answers : op2\r\n                        })\r\n                    })\r\n                }\r\n                \r\n            }\r\n        }\r\n        else{\r\n            op1 = [...this.state.options];\r\n            op1[d1]={\r\n                ...op1[d1],\r\n                checked:false\r\n            }\r\n            op2 = [...this.state.answers]\r\n            var index=op2.indexOf(d3);\r\n            op2.splice(index, 1)\r\n            this.setState((PState,Pprops)=>{\r\n                return({\r\n                    AnswerSelected:false,\r\n                    ticked :PState.ticked-1,\r\n                    options : op1,\r\n                    answers : op2\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        console.log(this.state)\r\n        let opts=['A','B','C','D','E']\r\n        return (\r\n            <div>\r\n                <div className=\"Question-single-container\">\r\n                    <Row>\r\n                        <Col span={2}>\r\n                            <Button style={{background:'#009999',color:'#fff'}} shape=\"circle\">{this.props.trainee.activeQuestionIndex+1}</Button>\r\n                        </Col>\r\n                        <Col span={22}>\r\n                            <Radio.Group  style={{float:'right'}}>\r\n                                <Radio.Button style={{background:'#009999',color:'#fff'}}>{this.props.trainee.questions[this.props.trainee.activeQuestionIndex].anscount===1?\"Single answer type\":\"Multiple answer type\"}</Radio.Button>\r\n                                <Radio.Button style={{background:'#009999',color:'#fff'}}>Marks : {this.props.trainee.questions[this.props.trainee.activeQuestionIndex].weightage}</Radio.Button>\r\n                            </Radio.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        this.props.mode==='mobile'?\r\n                            <Button onClick={this.props.triggerSidebar} style={{background:'#009999',color:'#fff'}}>Tool</Button>\r\n                        :null\r\n                    }\r\n                    <div className=\"Question-single-body-holder\">\r\n                        <div>\r\n                            <h3 style={{fontFamily:\"'Montserrat', sans-serif\"}}>{this.props.trainee.questions[this.props.trainee.activeQuestionIndex].body}</h3>\r\n                        </div>\r\n                        \r\n                        {this.props.trainee.questions[this.props.trainee.activeQuestionIndex].quesimg?\r\n                            <div className=\"Single-question-body-image-container\">\r\n                                <img alt=\"Unable to load\" src={this.props.trainee.questions[this.props.trainee.activeQuestionIndex].quesimg} className=\"Single-question-body-image\"/>\r\n                            </div>:null\r\n                        }\r\n                    </div>\r\n                    <div className=\"Question-single-option-panel\">\r\n                        <Row>\r\n                            {this.state.options.map((d,i)=>{\r\n                                return(\r\n                                    <Col span={12} key={i} className=\"Single-option\">\r\n                                        <Row>\r\n                                            <Col span={2} style={{textAlign:'center'}}>\r\n                                                <Button style={{background:'#009999',color:'#fff'}} shape=\"circle\">{opts[i]}</Button>\r\n                                                <Checkbox checked={d.checked} onChange={(e)=>{this.onAnswerChange(i,e.target.checked,d._id)}} />\r\n                                            </Col>\r\n                                            <Col span={22} style={{padding:'10px'}}>\r\n                                                <h3 style={{fontFamily:\"'Montserrat', sans-serif\"}}>{d.optbody}</h3>\r\n                                                <div className=\"option-image-in-exam-panel-holder\">\r\n                                                    {d.optimg?<img alt=\"Unable to load\" className=\"option-image-in-exam-panel\" src={d.optimg}/>:null}\r\n                                                </div>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                )\r\n                            })}\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n                <div className=\"control-button-in-exam-portal\">\r\n                    <Button.Group>\r\n                        {this.props.trainee.activeQuestionIndex===0?\r\n                            null\r\n                            :\r\n                            <Button style={{background:'#009999',color:'#fff'}} onClick={this.previous}>\r\n                                <Icon type=\"left\" />\r\n                                Previous\r\n                            </Button>\r\n                        }\r\n                        <Button type=\"default\" onClick={this.mark}>\r\n                                <Icon type=\"flag\" />\r\n                                {!this.props.trainee.answers[this.props.trainee.activeQuestionIndex].isMarked?\"Mark Question\":\"Unmark Question\"}\r\n                        </Button>\r\n                        {this.props.trainee.activeQuestionIndex===this.props.trainee.questions.length-1?\r\n                            null\r\n                            :\r\n                            <Button style={{background:'#009999',color:'#fff'}} onClick={this.next}>\r\n                                {this.state.AnswerSelected?\"Save & Next\": \"Next\"}\r\n                                <Icon type=\"right\" />\r\n                            </Button>\r\n                        }\r\n                        {this.props.trainee.activeQuestionIndex===this.props.trainee.questions.length-1 && this.state.AnswerSelected?\r\n                            <Button style={{background:'#009999',color:'#fff'}} onClick={()=>{this.SaveTocloud()}}>\r\n                                Save\r\n                                <Icon type=\"right\" />\r\n                            </Button>:null\r\n                        }\r\n                    </Button.Group>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    switchQuestion,\r\n    updateIsMarked,\r\n    fetchTestdata\r\n})(Test);"]},"metadata":{},"sourceType":"module"}