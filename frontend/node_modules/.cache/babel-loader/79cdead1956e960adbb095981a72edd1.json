{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\customer\\\\Testing\\\\test.js\";\n\nfunction _templateObject10() {\n  const data = _taggedTemplateLiteral([\"\\n  top: 22rem;\\n  color: red;\\n  position: absolute;\\n  font-weight: bold;\\n\"]);\n\n  _templateObject10 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 5px;\\n  height: 5px;\\n  border-radius: 3px;\\n  background: #fff;\\n\"]);\n\n  _templateObject9 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  width: 15px;\\n  height: 15px;\\n  border-radius: 7.5px;\\n  border: 0.5px solid black;\\n  margin: 0 0.5rem 0 0;\\n  background: \", \";\\n\"]);\n\n  _templateObject8 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n\"]);\n\n  _templateObject7 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: flex-start;\\n  flex-direction: column;\\n  margin: 0 auto 0.5rem auto;\\n\"]);\n\n  _templateObject6 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n  font-size: 1.2rem;\\n  font-weight: bold;\\n  width: 40%;\\n  height: 3rem;\\n  // color: #fff;\\n  border: none;\\n  // background: #7159c1;\\n  border-radius: 5px;\\n  box-shadow: 0px 3px 15px 0px #666;\\n\"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  font-size: 1.5rem;\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  font-size: 2.5rem;\\n  // color: #7159c1;\\n  margin-bottom: 0.5rem;\\n  text-align: center;\\n  max-width: 90%;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: \", \";\\n  align-items: center;\\n  flex-direction: column;\\n  max-width: 1200px;\\n  padding: \", \";\\n  width: 100%;\\n  height: 80vh;\\n  background: #fff;\\n  border-radius: 5px;\\n  box-shadow: 0px 5px 40px -20px #000;\\n\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  min-height: 80vh;\\n  width: 100%;\\n  /*background: #7159c1;*/\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component, useState } from 'react';\nimport Slider from 'react-touch-drag-slider';\nimport { connect } from 'react-redux';\nimport { Table, Input, Typography, Divider, Icon, Modal, Popconfirm } from 'antd';\nimport Highlighter from 'react-highlight-words'; // import styled, { createGlobalStyle, css } from 'styled-components/macro'\n\nimport { ChangeQuestionSearchText, ChangeQuestionTableData, ChangeQuestionModalState } from '../../../actions/trainerAction';\nimport Alert from '../../../components/common/alert';\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport Test2 from './test2';\nimport Test3 from './test3';\nimport styled from \"styled-components\";\nconst Container = styled.div(_templateObject());\nconst ScreenQuiz = styled.div(_templateObject2(), props => props.screen ? \"space-between\" : \"center\", props => props.screen ? \"5rem\" : \".5rem\");\nconst Title = styled.h1(_templateObject3());\nconst Paragraph = styled.p(_templateObject4());\nconst Button = styled.button(_templateObject5());\nconst ContainerLabel = styled.div(_templateObject6());\nconst Label = styled.label(_templateObject7());\nconst Radio = styled.div(_templateObject8(), props => props.clickedLabel ? \"#7159c1\" : \"#fff\");\nconst IntoRadio = styled.div(_templateObject9());\nconst Error = styled.div(_templateObject10());\n\nclass Test extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      const _this$state = this.state,\n            count = _this$state.count,\n            questions = _this$state.questions,\n            clickedLabel = _this$state.clickedLabel,\n            answer = _this$state.answer,\n            second = _this$state.second;\n      console.log('CCC', questions.length);\n\n      if (questions.length >= count && clickedLabel.answerText) {\n        this.setState({\n          count: count + 1,\n          clickedLabel: {},\n          answer: clickedLabel.correctAnswer ? answer + 1 : answer,\n          error: false // second: 1\n\n        });\n      } else {\n        this.setState({\n          count: count,\n          error: true\n        });\n      }\n\n      if (questions.length === count) {\n        this.setState({\n          screenFinish: true\n        });\n      }\n\n      this.handleCountDown();\n    };\n\n    this.handleCountDown = () => {\n      const _this$state2 = this.state,\n            second = _this$state2.second,\n            count = _this$state2.count;\n      clearInterval(this.timer);\n      let counter = 1;\n      this.timer = setInterval(() => {\n        if (counter >= 10) {\n          clearInterval(this.timer);\n\n          if (second >= 10) {\n            this.setState({\n              count: count + 1\n            });\n          }\n        }\n\n        this.setState({\n          second: counter\n        });\n        console.log(counter++);\n      }, 1000);\n    };\n\n    this.renderInitial = () => {\n      const _this$state3 = this.state,\n            second = _this$state3.second,\n            count = _this$state3.count;\n      this.setState({\n        screen: false,\n        count: 1\n      });\n      this.handleCountDown();\n    };\n\n    this.renderScreenInitial = () => {\n      return /*#__PURE__*/React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(ScreenQuiz, {\n        screen: this.state.screen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Country Quiz\"), /*#__PURE__*/React.createElement(Paragraph, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Click to start\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: this.renderInitial,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"Begin\")));\n    };\n\n    this.handleOptions = answerOptions => {\n      const clickedLabel = this.state.clickedLabel;\n      return answerOptions.map((answerOpt, index) => {\n        return /*#__PURE__*/React.createElement(Label, {\n          key: index,\n          onClick: () => this.setState({\n            clickedLabel: answerOpt,\n            error: false\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, /*#__PURE__*/React.createElement(Radio, {\n          clickedLabel: clickedLabel.answerText === answerOpt.answerText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }, /*#__PURE__*/React.createElement(IntoRadio, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        })), /*#__PURE__*/React.createElement(Paragraph, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }, answerOpt.answerText));\n      });\n    };\n\n    this.renderQuestions = () => {\n      const _this$state4 = this.state,\n            count = _this$state4.count,\n            questions = _this$state4.questions,\n            error = _this$state4.error,\n            second = _this$state4.second;\n      console.log('BBB', questions);\n      const NewQuestions = Array.from(questions);\n      const removeQuestions = NewQuestions.slice(count - 1, count);\n      return removeQuestions.map((quest, index) => /*#__PURE__*/React.createElement(Container, {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(ScreenQuiz, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, second), /*#__PURE__*/React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, count, \"/\", questions.length), /*#__PURE__*/React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, quest.question), /*#__PURE__*/React.createElement(ContainerLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, this.handleOptions(quest.answerOptions)), /*#__PURE__*/React.createElement(Button, {\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, \"Submit\"), error && /*#__PURE__*/React.createElement(Error, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"Please check an Options.\"))));\n    };\n\n    this.renderResult = () => {\n      const _this$state5 = this.state,\n            answer = _this$state5.answer,\n            questions = _this$state5.questions,\n            screenFinish = _this$state5.screenFinish;\n      return /*#__PURE__*/React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(ScreenQuiz, {\n        screen: screenFinish,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, \"you got \", answer, \" out of \", questions.length, \" questions\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.setState({\n          count: 0,\n          screenFinish: false,\n          screen: true,\n          answer: 0\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"Play again\")));\n    };\n\n    this.state = {\n      questions: [],\n      screen: true,\n      count: 0,\n      clickedLabel: {},\n      answer: 0,\n      error: false,\n      screenFinish: false,\n      second: 1\n    };\n  }\n\n  componentDidMount() {\n    this.props.ChangeQuestionTableData(this.props.id);\n    var questions = [];\n    this.props.trainer.QuestionTableData.map((d, i) => {\n      questions[i] = {\n        question: d.body,\n        // questionImage : d.quesimg,\n        answerOptions: [{\n          answerText: d.answer1,\n          correctAnswer: d.trueans1\n        }, {\n          answerText: d.answer2,\n          correctAnswer: d.trueans2\n        }, {\n          answerText: d.answer3,\n          correctAnswer: d.trueans3\n        }, {\n          answerText: d.answer4,\n          correctAnswer: d.trueans4\n        }, {\n          answerText: d.answer5,\n          correctAnswer: d.trueans5\n        }]\n      };\n    });\n    this.setState({\n      questions: questions\n    });\n  }\n\n  render() {\n    const _this$state6 = this.state,\n          screenFinish = _this$state6.screenFinish,\n          questions = _this$state6.questions,\n          screen = _this$state6.screen;\n    return !screenFinish && questions ? /*#__PURE__*/React.createElement(React.Fragment, null, screen ? this.renderScreenInitial() : this.renderQuestions()) : this.renderResult();\n  } // render() {\n  //   console.log('qas',this.props.trainer.QuestionTableData);\n  //   console.log('qaz',this.state);\n  //   return (\n  //     <div>\n  //       <h1>Тестирование номер 1</h1>\n  //       {this.state.isStarted ? null : (\n  //         <div id=\"button\">\n  //           <Button variant=\"contained\" color=\"secondary\" onClick={()=>this.handleClick}>\n  //             Начать тест\n  //           </Button>\n  //         </div>\n  //       )}\n  //     {this.state.isStarted ? (\n  //     // <Test2  details={this.props.trainer.QuestionTableData}/>\n  //     ) : null}\n  //     </div>\n  //   )\n  // }\n\n\n}\n\nconst mapStateToProps = state => ({\n  chapter: state.chapter,\n  trainer: state.trainer\n});\n\nexport default connect(mapStateToProps, {\n  ChangeQuestionSearchText,\n  ChangeQuestionTableData,\n  ChangeQuestionModalState\n})(Test);","map":{"version":3,"names":["React","Component","useState","Slider","connect","Table","Input","Typography","Divider","Icon","Modal","Popconfirm","Highlighter","ChangeQuestionSearchText","ChangeQuestionTableData","ChangeQuestionModalState","Alert","SecurePost","apis","Test2","Test3","styled","Container","div","ScreenQuiz","props","screen","Title","h1","Paragraph","p","Button","button","ContainerLabel","Label","label","Radio","clickedLabel","IntoRadio","Error","Test","constructor","handleClick","state","count","questions","answer","second","console","log","length","answerText","setState","correctAnswer","error","screenFinish","handleCountDown","clearInterval","timer","counter","setInterval","renderInitial","renderScreenInitial","handleOptions","answerOptions","map","answerOpt","index","renderQuestions","NewQuestions","Array","from","removeQuestions","slice","quest","question","renderResult","componentDidMount","id","trainer","QuestionTableData","d","i","body","answer1","trueans1","answer2","trueans2","answer3","trueans3","answer4","trueans4","answer5","trueans5","render","mapStateToProps","chapter"],"sources":["C:/React_project/EduTest/frontend/src/components/customer/Testing/test.js"],"sourcesContent":["import React, { Component, useState } from 'react'\r\nimport Slider from 'react-touch-drag-slider'\r\nimport { connect } from 'react-redux';\r\nimport { Table, Input,  Typography, Divider, Icon, Modal, Popconfirm } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\n// import styled, { createGlobalStyle, css } from 'styled-components/macro'\r\nimport { \r\n    ChangeQuestionSearchText,\r\n    ChangeQuestionTableData,\r\n    ChangeQuestionModalState\r\n} from '../../../actions/trainerAction';\r\nimport Alert from '../../../components/common/alert';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Test2 from './test2';\r\nimport Test3 from './test3';\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 80vh;\r\n  width: 100%;\r\n  /*background: #7159c1;*/\r\n`;\r\n\r\nconst ScreenQuiz = styled.div`\r\n  display: flex;\r\n  justify-content: ${props => (props.screen ? \"space-between\" : \"center\")};\r\n  align-items: center;\r\n  flex-direction: column;\r\n  max-width: 1200px;\r\n  padding: ${props => (props.screen ? \"5rem\" : \".5rem\")};\r\n  width: 100%;\r\n  height: 80vh;\r\n  background: #fff;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 5px 40px -20px #000;\r\n\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 2.5rem;\r\n  // color: #7159c1;\r\n  margin-bottom: 0.5rem;\r\n  text-align: center;\r\n  max-width: 90%;\r\n`;\r\n\r\nconst Paragraph = styled.p`\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  width: 40%;\r\n  height: 3rem;\r\n  // color: #fff;\r\n  border: none;\r\n  // background: #7159c1;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 3px 15px 0px #666;\r\n`;\r\n\r\nconst ContainerLabel = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  margin: 0 auto 0.5rem auto;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Radio = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 15px;\r\n  height: 15px;\r\n  border-radius: 7.5px;\r\n  border: 0.5px solid black;\r\n  margin: 0 0.5rem 0 0;\r\n  background: ${props => (props.clickedLabel ? \"#7159c1\" : \"#fff\")};\r\n`;\r\n\r\nconst IntoRadio = styled.div`\r\n  width: 5px;\r\n  height: 5px;\r\n  border-radius: 3px;\r\n  background: #fff;\r\n`;\r\n\r\nconst Error = styled.div`\r\n  top: 22rem;\r\n  color: red;\r\n  position: absolute;\r\n  font-weight: bold;\r\n`;\r\n\r\n\r\nclass Test extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state={\r\n        questions:[],\r\n        screen: true,\r\n        count: 0,\r\n        clickedLabel: {},\r\n        answer: 0,\r\n        error:false,\r\n        screenFinish:false,\r\n        second:1\r\n      }\r\n    }\r\n  \r\n    componentDidMount(){\r\n      this.props.ChangeQuestionTableData(this.props.id);\r\n      var questions=[];\r\n      this.props.trainer.QuestionTableData.map((d,i)=>{\r\n        questions[i]=(\r\n          {\r\n            question : d.body,\r\n            // questionImage : d.quesimg,\r\n            answerOptions: [\r\n              { answerText: d.answer1, correctAnswer: d.trueans1 },\r\n              { answerText: d.answer2, correctAnswer: d.trueans2 },\r\n              { answerText: d.answer3, correctAnswer: d.trueans3 },\r\n              { answerText: d.answer4, correctAnswer: d.trueans4 },\r\n              { answerText: d.answer5, correctAnswer: d.trueans5}\r\n            ]\r\n          }\r\n        )\r\n      });\r\n      this.setState({\r\n        questions:questions\r\n    })\r\n    }\r\n\r\n    handleClick = ()=> {\r\n      const { count,questions, clickedLabel, answer, second } = this.state;\r\n      console.log('CCC',questions.length)\r\n      if (questions.length >= count && clickedLabel.answerText) {\r\n        this.setState({\r\n          count: count + 1,\r\n          clickedLabel: {},\r\n          answer: clickedLabel.correctAnswer ? answer + 1 : answer,\r\n          error: false\r\n          // second: 1\r\n        });\r\n      } \r\n      else {\r\n        this.setState({\r\n          count: count,\r\n          error: true\r\n        });\r\n      }\r\n\r\n      if (questions.length === count) {\r\n        this.setState({\r\n          screenFinish: true\r\n        });\r\n      }\r\n      this.handleCountDown();\r\n    }\r\n\r\n    handleCountDown = () => {\r\n      const { second, count } = this.state;\r\n      clearInterval(this.timer);\r\n  \r\n      let counter = 1;\r\n      this.timer = setInterval(() => {\r\n        if (counter >= 10) {\r\n          clearInterval(this.timer);\r\n          if (second >= 10) {\r\n            this.setState({\r\n              count: count + 1\r\n            });\r\n          }\r\n        }\r\n  \r\n        this.setState({\r\n          second: counter\r\n        });\r\n        console.log(counter++);\r\n      }, 1000);\r\n    };\r\n\r\n    renderInitial = () => {\r\n      const { second, count } = this.state;\r\n  \r\n      this.setState({\r\n        screen: false,\r\n        count: 1\r\n      });\r\n      this.handleCountDown();\r\n    };\r\n\r\n    renderScreenInitial = () => {\r\n      return (\r\n        <Container>\r\n          <ScreenQuiz screen={this.state.screen}>\r\n            <Title>Country Quiz</Title>\r\n            <Paragraph>Click to start</Paragraph>\r\n            <Button onClick={this.renderInitial}>Begin</Button>\r\n          </ScreenQuiz>\r\n        </Container>\r\n      );\r\n    };\r\n  \r\n    handleOptions = answerOptions => {\r\n      const { clickedLabel } = this.state;\r\n  \r\n      return answerOptions.map((answerOpt, index) => {\r\n        return (\r\n          <Label\r\n            key={index}\r\n            onClick={() =>\r\n              this.setState({\r\n                clickedLabel: answerOpt,\r\n                error: false\r\n              })\r\n            }\r\n          >\r\n            <Radio clickedLabel={clickedLabel.answerText === answerOpt.answerText}>\r\n              <IntoRadio />\r\n            </Radio>\r\n            <Paragraph>{answerOpt.answerText}</Paragraph>\r\n          </Label>\r\n        );\r\n      });\r\n    };\r\n  \r\n    renderQuestions = () => {\r\n      const { count,questions, error, second } = this.state;\r\n      console.log('BBB',questions);\r\n      const NewQuestions = Array.from(questions);\r\n      \r\n      const removeQuestions = NewQuestions.slice(count - 1, count);\r\n      \r\n  \r\n      return removeQuestions.map((quest, index) => (\r\n        <Container key={index}>\r\n          <ScreenQuiz>\r\n            <p>{second}</p>\r\n            <h3>{count}/{questions.length}</h3>\r\n            <Title>{quest.question}</Title>\r\n            <ContainerLabel>\r\n              {this.handleOptions(quest.answerOptions)}\r\n            </ContainerLabel>\r\n            <Button onClick={this.handleClick}>Submit</Button>\r\n            {error && <Error>Please check an Options.</Error>}\r\n          </ScreenQuiz>\r\n        </Container>\r\n      ));\r\n    };\r\n  \r\n    renderResult = () => {\r\n      const { answer,questions, screenFinish } = this.state;\r\n  \r\n      return (\r\n        <Container>\r\n          <ScreenQuiz screen={screenFinish}>\r\n            <Title>you got {answer} out of {questions.length} questions</Title>\r\n            <Button\r\n              onClick={() =>\r\n                this.setState({\r\n                  count: 0,\r\n                  screenFinish: false,\r\n                  screen: true,\r\n                  answer: 0\r\n                })\r\n              }\r\n            >\r\n              Play again\r\n            </Button>\r\n          </ScreenQuiz>\r\n        </Container>\r\n      );\r\n    };\r\n\r\n\r\n    render() {\r\n      const { screenFinish, questions, screen } = this.state;\r\n\r\n      return !screenFinish && questions ? (\r\n        <>{screen ? this.renderScreenInitial() : this.renderQuestions()}</>\r\n      ) : (\r\n        this.renderResult()\r\n      );\r\n    }\r\n\r\n    // render() {\r\n    //   console.log('qas',this.props.trainer.QuestionTableData);\r\n    //   console.log('qaz',this.state);\r\n    //   return (\r\n    //     <div>\r\n    //       <h1>Тестирование номер 1</h1>\r\n    //       {this.state.isStarted ? null : (\r\n    //         <div id=\"button\">\r\n    //           <Button variant=\"contained\" color=\"secondary\" onClick={()=>this.handleClick}>\r\n    //             Начать тест\r\n    //           </Button>\r\n    //         </div>\r\n    //       )}\r\n        \r\n    //     {this.state.isStarted ? (\r\n    //     // <Test2  details={this.props.trainer.QuestionTableData}/>\r\n    //     ) : null}\r\n    //     </div>\r\n    //   )\r\n    // }\r\n  }\r\n  \r\n  const mapStateToProps = state => ({\r\n      chapter : state.chapter,\r\n      trainer : state.trainer\r\n  });\r\n  \r\n  export default connect(mapStateToProps,{\r\n      ChangeQuestionSearchText,\r\n      ChangeQuestionTableData,\r\n      ChangeQuestionModalState\r\n  })(Test);\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}