{"ast":null,"code":"import _slicedToArray from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport { css as _css } from \"styled-components\";\nvar _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\customer\\\\Testing\\\\test.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n          left: 25rem;\\n        \"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n          right: 25rem;\\n        \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'antd'; // import Highlighter from 'react-highlight-words';\n\nimport { ChangeQuestionSearchText, ChangeQuestionTableData, ChangeQuestionModalState } from '../../../actions/trainerAction';\nimport { ChangeTestSearchText, ChangeTestTableData, ChangeTestModalState, ChangeAnswersSearchText, ChangeAnswersTableData // ChangeAnswersModalState,\n} from '../../../actions/chapterAction';\nimport Alert from '../../../components/common/alert';\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis'; // import Test2 from './test2';\n// import Test3 from './test3';\n\nimport styled from \"styled-components\"; // import Carousel from \"react-multi-carousel\";\n\nimport \"react-multi-carousel/lib/styles.css\";\nimport Counter from './Counter';\nconst Container = styled.div.withConfig({\n  displayName: \"test__Container\",\n  componentId: \"sc-13myauf-0\"\n})([\"display:flex;justify-content:center;align-items:center;min-height:80vh;width:100%;\"]);\nconst ScreenQuiz = styled.div.withConfig({\n  displayName: \"test__ScreenQuiz\",\n  componentId: \"sc-13myauf-1\"\n})([\"display:flex;justify-content:\", \";align-items:center;flex-direction:column;max-width:1200px;padding:\", \";width:100%;height:80vh;background:#fff;border-radius:5px;box-shadow:0px 5px 40px -20px #000;\"], props => props.screen ? \"space-between\" : \"center\", props => props.screen ? \"5rem\" : \".5rem\");\nconst Title = styled.h1.withConfig({\n  displayName: \"test__Title\",\n  componentId: \"sc-13myauf-2\"\n})([\"font-size:2.5rem;margin-bottom:0.5rem;text-align:center;max-width:90%;\"]);\nconst Paragraph = styled.p.withConfig({\n  displayName: \"test__Paragraph\",\n  componentId: \"sc-13myauf-3\"\n})([\"font-size:1.5rem;\"]); // const Button = styled.button`\n//   font-size: 1.2rem;\n//   font-weight: bold;\n//   width: 40%;\n//   height: 3rem;\n//   // color: #fff;\n//   border: none;\n//   // background: #7159c1;\n//   border-radius: 5px;\n//   box-shadow: 0px 3px 3px 0px #666;\n//   @-webkit-keyframes pulsate {\n//     0% {transform: scale(0.1, 0.1); opacity: 0.0;}\n//     50% {opacity: 1.0;}\n//     100% {transform: scale(7, 7); opacity: 0.0;}\n// }\n// `;\n\nconst ButtonScr = styled.button.withConfig({\n  displayName: \"test__ButtonScr\",\n  componentId: \"sc-13myauf-4\"\n})([\"font-size:1.4rem;z-index:10;position:fixed;top:15%;\", \"\"], props => props.right ? _css(_templateObject()) : _css(_templateObject2()));\nconst ContainerLabel = styled.div.withConfig({\n  displayName: \"test__ContainerLabel\",\n  componentId: \"sc-13myauf-5\"\n})([\"display:flex;align-items:flex-start;flex-direction:column;margin:0 auto 0.5rem auto;\"]);\nconst Label = styled.label.withConfig({\n  displayName: \"test__Label\",\n  componentId: \"sc-13myauf-6\"\n})([\"display:flex;justify-content:center;align-items:center;\"]);\nconst Radio = styled.input.attrs({\n  type: 'checkbox'\n}).withConfig({\n  displayName: \"test__Radio\",\n  componentId: \"sc-13myauf-7\"\n})([\"display:flex;justify-content:center;align-items:center;width:15px;height:15px;border-radius:50%;border:7.5px solid black;margin:0 0.5rem 0 0;background:\", \";\"], props => props.clickedLabel ? \"#7159c1\" : \"#fff\"); // const IntoRadio = styled.div`\n//   width: 5px;\n//   height: 5px;\n//   border-radius: 3px;\n//   background: #fff;\n// `;\n// const Error = styled.div`\n//   top: 22rem;\n//   color: red;\n//   position: absolute;\n//   font-weight: bold;\n// `;\n\nexport default function Test(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        questions = _useState2[0],\n        setQuestions = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        screen = _useState4[0],\n        setScreen = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        count = _useState6[0],\n        setCount = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        clickedLabel = _useState8[0],\n        setClickedLabel = _useState8[1];\n\n  const _useState9 = useState(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        answer = _useState10[0],\n        setAnswer = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        screenFinish = _useState12[0],\n        setScreenFinish = _useState12[1];\n\n  const _useState13 = useState(60),\n        _useState14 = _slicedToArray(_useState13, 2),\n        second = _useState14[0],\n        setSecond = _useState14[1];\n\n  useEffect(() => {\n    console.log(\"1 - componentDidMount\"); // this.props.ChangeQuestionTableData(this.props.id);\n    // this.props.ChangeAnswersTableData(this.props.id);\n    // this.props.ChangeTestTableData(this.props.id);\n    // console.log('CHID',this.props.chid);\n\n    console.log(\"CCCCCCCCCCCCCCCCCCCCC\", props.asn);\n    var questions = [];\n\n    if (this.props.asn.length === 0) {\n      return Alert('warning', \"Сперва пройдите материалы\");\n    } else {\n      this.props.asn[0].chosenOption.map((d, i) => {\n        questions[i] = {\n          question: d.questionText,\n          isOneTrueAnswer: d.options[0].isAnswer + d.options[1].isAnswer + d.options[2].isAnswer + d.options[3].isAnswer + d.options[4].isAnswer === 1 ? true : false,\n          // questionImage : d.quesimg,\n          answerOptions: [{\n            answerText: d.options[0].answers,\n            UserAnswer: d.options[0].userAnswer,\n            correctAnswer: d.options[0].isAnswer\n          }, {\n            answerText: d.options[1].answers,\n            UserAnswer: d.options[1].userAnswer,\n            correctAnswer: d.options[1].isAnswer\n          }, {\n            answerText: d.options[2].answers,\n            UserAnswer: d.options[2].userAnswer,\n            correctAnswer: d.options[2].isAnswer\n          }, {\n            answerText: d.options[3].answers,\n            UserAnswer: d.options[3].userAnswer,\n            correctAnswer: d.options[3].isAnswer\n          }, {\n            answerText: d.options[4].answers,\n            UserAnswer: d.options[4].userAnswer,\n            correctAnswer: d.options[4].isAnswer\n          }]\n        };\n      });\n    }\n\n    setQuestions(questions);\n  });\n\n  const handleNextClick = () => {\n    setCount(count + 1);\n  };\n\n  const handlePrevClick = () => {\n    if (questions.length >= count && count > 0) {\n      this.setState({\n        count: count - 1,\n        checked: false\n      });\n    }\n  };\n\n  const handleClick = c => {\n    const _this$state = this.state,\n          count = _this$state.count,\n          questions = _this$state.questions,\n          clickedLabel = _this$state.clickedLabel,\n          answer = _this$state.answer;\n\n    if (questions.length >= count && clickedLabel.answerText) {\n      this.setState({\n        questions: questions,\n        count: c + 1,\n        clickedLabel: {},\n        answer: clickedLabel.correctAnswer ? answer + 1 : answer,\n        error: false,\n        checked: false\n      });\n    }\n  };\n\n  const handleEndClick = c => {\n    const _this$state2 = this.state,\n          count = _this$state2.count,\n          questions = _this$state2.questions,\n          clickedLabel = _this$state2.clickedLabel;\n\n    if (questions.length === count) {\n      this.setState({\n        screenFinish: true,\n        testEnded: true,\n        testStarted: false\n      });\n    }\n  };\n\n  const renderInitial = () => {\n    const count = this.state.count;\n    this.setState({\n      screen: false,\n      loading: false,\n      count: 1,\n      testStarted: true,\n      testEnded: false,\n      testDidNotStart: false\n    });\n    console.log(\"1  CREATE_TEST\");\n    SecurePost({\n      url: \"\".concat(apis.CREATE_TEST),\n      data: {\n        _id: this.props.chapter.testid,\n        chapterid: this.props.chid,\n        materialid: this.props.id,\n        startDate: Date().toLocaleString(),\n        complationDate: Date().toLocaleString(),\n        startTest: true,\n        endTest: false,\n        result: count\n      }\n    }).then(response => {\n      if (response.data.success) {\n        this.props.ChangeTestModalState(false, null, 'Save');\n        Alert('success', 'Успешно', response.data.message);\n      } else {\n        this.props.ChangeTestModalState(false, null, 'Save');\n        return Alert('warning', 'Предупреждение!', response.data.message);\n      }\n    }).catch(error => {\n      this.props.ChangeTestModalState(false, null, 'Save');\n      return Alert('error', 'Ошибка!', 'Ошибка сервера');\n    });\n    SecurePost({\n      url: \"\".concat(apis.CREATE_TST),\n      data: {\n        materialId: this.props.id,\n        testid: this.props.chapter.testid\n      }\n    });\n  };\n\n  const renderScreenInitial = () => {\n    return /*#__PURE__*/React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(ScreenQuiz, {\n      screen: screen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, \"\\u0422\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: renderInitial,\n      style: {\n        fontSize: \"1.2rem\",\n        fontWeight: \"bold\",\n        width: \"40%\",\n        height: \"3rem\",\n        border: \"none\",\n        borderRadius: \"5px\",\n        boxShadow: \"0px 3px 3px 0px #666\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\")));\n  };\n\n  const handleOptions = (answerOptions, c) => {\n    const _this$state3 = this.state,\n          clickedLabel = _this$state3.clickedLabel,\n          questions = _this$state3.questions;\n    return answerOptions.map((a, i) => {\n      return /*#__PURE__*/React.createElement(Label, {\n        key: i,\n        onClick: () => {\n          this.setState({\n            questions: questions,\n            clickedLabel: a,\n            error: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, questions[c].isOneTrueAnswer === false ? /*#__PURE__*/React.createElement(Radio, {\n        checked: a.UserAnswer,\n        onChange: e => this.handleChange(e, answerOptions, c, i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }) : /*#__PURE__*/React.createElement(Radio, {\n        checked: a.UserAnswer,\n        onChange: e => this.handleChange2(e, answerOptions, c, i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }), /*#__PURE__*/React.createElement(Paragraph, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, a.answerText));\n    });\n  };\n\n  const handleChange = (e, answerOptions, c, i) => {\n    const questions = this.state.questions;\n    questions[c].answerOptions[i].UserAnswer = true;\n    this.setState({\n      questions: questions\n    });\n  };\n\n  const handleChange2 = (e, answerOptions, c, i) => {\n    const questions = this.state.questions;\n    questions[c].answerOptions[i].UserAnswer = true;\n\n    if (questions[c].answerOptions[i].UserAnswer === true) {\n      answerOptions.map((d, j) => {\n        if (i !== j) {\n          questions[c].answerOptions[j].UserAnswer = false;\n        }\n      });\n    }\n\n    this.setState({\n      questions: questions\n    });\n  };\n\n  const renderQuestions = () => {\n    const _this$state4 = this.state,\n          count = _this$state4.count,\n          questions = _this$state4.questions;\n    const NewQuestions = Array.from(questions);\n    const removeQuestions = NewQuestions.slice(count - 1, count);\n    return removeQuestions.map((q, i) => /*#__PURE__*/React.createElement(Container, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(ScreenQuiz, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(Counter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, count, \"/\", questions.length), /*#__PURE__*/React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, q.question), /*#__PURE__*/React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, count), /*#__PURE__*/React.createElement(ContainerLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, this.handleOptions(q.answerOptions, count - 1)), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.handleClick(count - 1),\n      style: {\n        fontSize: \"1.2rem\",\n        fontWeight: \"bold\",\n        width: \"40%\",\n        height: \"3rem\",\n        border: \"none\",\n        borderRadius: \"5px\",\n        boxShadow: \"0px 3px 3px 0px #666\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), count === questions.length ? /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleEndClick,\n      style: {\n        marginTop: '30px',\n        fontSize: \"1.2rem\",\n        fontWeight: \"bold\",\n        width: \"40%\",\n        height: \"3rem\",\n        border: \"none\",\n        borderRadius: \"5px\",\n        boxShadow: \"0px 3px 3px 0px #666\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\") : null, /*#__PURE__*/React.createElement(ButtonScr, {\n      onClick: () => this.handleNextClick(count),\n      right: true,\n      disabled: count === questions.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, \"\\u0421\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u0438\\u0439\"), /*#__PURE__*/React.createElement(ButtonScr, {\n      onClick: this.handlePrevClick,\n      left: true,\n      disabled: count === 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, \"\\u041F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u0438\\u0439\"))));\n  };\n\n  const renderResult = () => {\n    const _this$state5 = this.state,\n          answer = _this$state5.answer,\n          questions = _this$state5.questions,\n          screenFinish = _this$state5.screenFinish;\n    return /*#__PURE__*/React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(ScreenQuiz, {\n      screen: screenFinish,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, \"\\u0412\\u044B \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u043E \\u043E\\u0442\\u0432\\u0435\\u0442\\u0438\\u043B\\u0438 \", answer, \" \\u0438\\u0437 \", questions.length, \" \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u043E\\u0432\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.setState({\n        count: 0,\n        screenFinish: false,\n        screen: true,\n        answer: 0\n      }),\n      style: {\n        fontSize: \"1.2rem\",\n        fontWeight: \"bold\",\n        width: \"40%\",\n        height: \"3rem\",\n        border: \"none\",\n        borderRadius: \"5px\",\n        boxShadow: \"0px 3px 3px 0px #666\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, \"\\u0422\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E\")));\n  }; // const { screenFinish, questions, screen } = this.state;\n\n\n  return !screenFinish && questions ? /*#__PURE__*/React.createElement(React.Fragment, null, screen ? renderScreenInitial() : renderQuestions()) : renderResult();\n} // const mapStateToProps = state => ({\n//     chapter : state.chapter,\n//     trainer : state.trainer\n// });","map":{"version":3,"names":["React","Component","useState","useEffect","connect","Button","ChangeQuestionSearchText","ChangeQuestionTableData","ChangeQuestionModalState","ChangeTestSearchText","ChangeTestTableData","ChangeTestModalState","ChangeAnswersSearchText","ChangeAnswersTableData","Alert","SecurePost","apis","styled","Counter","Container","div","ScreenQuiz","props","screen","Title","h1","Paragraph","p","ButtonScr","button","right","css","ContainerLabel","Label","label","Radio","input","attrs","type","clickedLabel","Test","questions","setQuestions","setScreen","count","setCount","setClickedLabel","answer","setAnswer","screenFinish","setScreenFinish","second","setSecond","console","log","asn","length","chosenOption","map","d","i","question","questionText","isOneTrueAnswer","options","isAnswer","answerOptions","answerText","answers","UserAnswer","userAnswer","correctAnswer","handleNextClick","handlePrevClick","setState","checked","handleClick","c","state","error","handleEndClick","testEnded","testStarted","renderInitial","loading","testDidNotStart","url","CREATE_TEST","data","_id","chapter","testid","chapterid","chid","materialid","id","startDate","Date","toLocaleString","complationDate","startTest","endTest","result","then","response","success","message","catch","CREATE_TST","materialId","renderScreenInitial","fontSize","fontWeight","width","height","border","borderRadius","boxShadow","handleOptions","a","e","handleChange","handleChange2","j","renderQuestions","NewQuestions","Array","from","removeQuestions","slice","q","marginTop","renderResult"],"sources":["C:/React_project/EduTest/frontend/src/components/customer/Testing/test.js"],"sourcesContent":["import React, { Component, useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Button } from 'antd';\r\n// import Highlighter from 'react-highlight-words';\r\nimport  { css } from 'styled-components/macro'\r\nimport { \r\n    ChangeQuestionSearchText,\r\n    ChangeQuestionTableData,\r\n    ChangeQuestionModalState,\r\n} from '../../../actions/trainerAction';\r\nimport { \r\n  ChangeTestSearchText,\r\n  ChangeTestTableData,\r\n  ChangeTestModalState,\r\n  ChangeAnswersSearchText,\r\n  ChangeAnswersTableData,\r\n  // ChangeAnswersModalState,\r\n} from '../../../actions/chapterAction';\r\n\r\nimport Alert from '../../../components/common/alert';\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\n// import Test2 from './test2';\r\n// import Test3 from './test3';\r\nimport styled from \"styled-components\";\r\n// import Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport Counter from './Counter';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 80vh;\r\n  width: 100%;\r\n  /*background: #7159c1;*/\r\n`;\r\n\r\nconst ScreenQuiz = styled.div`\r\n  display: flex;\r\n  justify-content: ${props => (props.screen ? \"space-between\" : \"center\")};\r\n  align-items: center;\r\n  flex-direction: column;\r\n  max-width: 1200px;\r\n  padding: ${props => (props.screen ? \"5rem\" : \".5rem\")};\r\n  width: 100%;\r\n  height: 80vh;\r\n  background: #fff;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 5px 40px -20px #000;\r\n\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 2.5rem;\r\n  // color: #7159c1;\r\n  margin-bottom: 0.5rem;\r\n  text-align: center;\r\n  max-width: 90%;\r\n`;\r\n\r\nconst Paragraph = styled.p`\r\n  font-size: 1.5rem;\r\n`;\r\n\r\n// const Button = styled.button`\r\n//   font-size: 1.2rem;\r\n//   font-weight: bold;\r\n//   width: 40%;\r\n//   height: 3rem;\r\n//   // color: #fff;\r\n//   border: none;\r\n//   // background: #7159c1;\r\n//   border-radius: 5px;\r\n//   box-shadow: 0px 3px 3px 0px #666;\r\n\r\n//   @-webkit-keyframes pulsate {\r\n//     0% {transform: scale(0.1, 0.1); opacity: 0.0;}\r\n//     50% {opacity: 1.0;}\r\n//     100% {transform: scale(7, 7); opacity: 0.0;}\r\n// }\r\n// `;\r\n\r\nconst ButtonScr = styled.button`\r\n  font-size: 1.4rem;\r\n  z-index: 10;\r\n  position: fixed;\r\n  top: 15%;\r\n  ${(props) =>\r\n    props.right\r\n      ? css`\r\n          right: 25rem;\r\n        `\r\n      : css`\r\n          left: 25rem;\r\n        `}\r\n`\r\n\r\nconst ContainerLabel = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  margin: 0 auto 0.5rem auto;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Radio = styled.input.attrs({ type: 'checkbox' })`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 15px;\r\n  height: 15px;\r\n  border-radius: 50%;\r\n  border: 7.5px solid black;\r\n  margin: 0 0.5rem 0 0;\r\n  background: ${props => (props.clickedLabel ? \"#7159c1\" : \"#fff\")};\r\n`;\r\n\r\n// const IntoRadio = styled.div`\r\n//   width: 5px;\r\n//   height: 5px;\r\n//   border-radius: 3px;\r\n//   background: #fff;\r\n// `;\r\n\r\n// const Error = styled.div`\r\n//   top: 22rem;\r\n//   color: red;\r\n//   position: absolute;\r\n//   font-weight: bold;\r\n// `;\r\n\r\nexport default function Test(props){\r\n  const [questions, setQuestions] = useState([]);\r\n  const [screen, setScreen] = useState(true);\r\n  const [count, setCount]= useState(0);\r\n  const [clickedLabel, setClickedLabel] = useState([]);\r\n  const [answer, setAnswer] = useState(0);\r\n  const [screenFinish, setScreenFinish]= useState(false);\r\n  const [second, setSecond] = useState(60);\r\n\r\n  useEffect(()=>{\r\n      console.log(\"1 - componentDidMount\")\r\n      // this.props.ChangeQuestionTableData(this.props.id);\r\n      // this.props.ChangeAnswersTableData(this.props.id);\r\n      // this.props.ChangeTestTableData(this.props.id);\r\n      // console.log('CHID',this.props.chid);\r\n      console.log(\"CCCCCCCCCCCCCCCCCCCCC\", props.asn)\r\n      var questions=[];\r\n      if(this.props.asn.length === 0){\r\n        return Alert('warning',\"Сперва пройдите материалы\")\r\n      }\r\n      else{\r\n        this.props.asn[0].chosenOption.map((d,i)=>{\r\n          questions[i]=(\r\n                {\r\n                  question : d.questionText,\r\n                  isOneTrueAnswer : (d.options[0].isAnswer + d.options[1].isAnswer + d.options[2].isAnswer + d.options[3].isAnswer \r\n                    + d.options[4].isAnswer)===1 ? true : false,\r\n                  // questionImage : d.quesimg,\r\n                  answerOptions: [\r\n                    { answerText: d.options[0].answers, UserAnswer: d.options[0].userAnswer, correctAnswer: d.options[0].isAnswer },\r\n                    { answerText: d.options[1].answers, UserAnswer: d.options[1].userAnswer, correctAnswer: d.options[1].isAnswer },\r\n                    { answerText: d.options[2].answers, UserAnswer: d.options[2].userAnswer, correctAnswer: d.options[2].isAnswer },\r\n                    { answerText: d.options[3].answers, UserAnswer: d.options[3].userAnswer, correctAnswer: d.options[3].isAnswer },\r\n                    { answerText: d.options[4].answers, UserAnswer: d.options[4].userAnswer, correctAnswer: d.options[4].isAnswer }\r\n                  ]\r\n                }\r\n              )\r\n        })\r\n      }\r\n      setQuestions(questions);\r\n\r\n    });\r\n\r\n    const handleNextClick=()=>{\r\n      setCount(count+1);\r\n    }\r\n\r\n    const handlePrevClick=()=>{\r\n      if (questions.length >= count && count>0) {\r\n        this.setState({\r\n          count: count - 1,\r\n          checked:false,\r\n        });\r\n      } \r\n    }\r\n\r\n    const handleClick = (c)=> {\r\n      const { count, questions, clickedLabel, answer} = this.state;\r\n      if (questions.length >= count && clickedLabel.answerText) {\r\n        this.setState({\r\n          questions:questions,\r\n          count: c+1,\r\n          clickedLabel: {},\r\n          answer: clickedLabel.correctAnswer ? answer + 1 : answer,\r\n          error: false,\r\n          checked:false,\r\n        });\r\n      }\r\n    }\r\n\r\n    const handleEndClick = (c)=> {\r\n      const { count, questions, clickedLabel } = this.state;\r\n      if (questions.length === count) {\r\n        this.setState({\r\n          screenFinish: true,\r\n          testEnded:true,\r\n          testStarted:false,\r\n        });\r\n      }\r\n    }\r\n\r\n    const renderInitial = () => {\r\n      const { count } = this.state;\r\n\r\n      this.setState({\r\n        screen: false,\r\n        loading:false,\r\n        count: 1,\r\n        testStarted:true,\r\n        testEnded:false,\r\n        testDidNotStart:false,\r\n      });\r\n\r\n      console.log(\"1  CREATE_TEST\")\r\n      SecurePost({\r\n        url : `${apis.CREATE_TEST}`,\r\n        data : {\r\n          _id: this.props.chapter.testid,\r\n            chapterid : this.props.chid,\r\n            materialid : this.props.id,\r\n            startDate : Date().toLocaleString(),\r\n            complationDate : Date().toLocaleString(),\r\n            startTest: true,\r\n            endTest: false,\r\n            result: count\r\n          }\r\n        })\r\n        .then((response)=>{\r\n          if(response.data.success){\r\n              this.props.ChangeTestModalState(false,null, 'Save'); \r\n              Alert('success','Успешно',response.data.message);\r\n          }\r\n          else{\r\n              this.props.ChangeTestModalState(false,null, 'Save');\r\n              return Alert('warning','Предупреждение!',response.data.message);\r\n          }\r\n        })\r\n        .catch((error)=>{\r\n            this.props.ChangeTestModalState(false,null, 'Save');\r\n            return Alert('error','Ошибка!','Ошибка сервера');\r\n        })\r\n\r\n      SecurePost({\r\n        url : `${apis.CREATE_TST}`,\r\n        data : {\r\n          materialId : this.props.id,\r\n          testid : this.props.chapter.testid,\r\n        }\r\n      })\r\n    };\r\n\r\n    const renderScreenInitial = () => {\r\n      return (\r\n        <Container>\r\n          <ScreenQuiz screen={screen}>\r\n            <Title>Тестирование</Title>\r\n            <Button \r\n              onClick={renderInitial} \r\n              style={{\r\n                fontSize: \"1.2rem\", \r\n                fontWeight: \"bold\",\r\n                width: \"40%\",\r\n                height: \"3rem\",\r\n                border: \"none\",\r\n                borderRadius: \"5px\",\r\n                boxShadow: \"0px 3px 3px 0px #666\"\r\n              }}\r\n              >\r\n                Начать тест\r\n            </Button>\r\n          </ScreenQuiz>\r\n        </Container>\r\n      );\r\n    };\r\n  \r\n    const handleOptions = (answerOptions,c) => {\r\n      const { clickedLabel,questions } = this.state;\r\n      return answerOptions.map((a, i) => {\r\n        return (\r\n          <Label\r\n            key={i}\r\n            onClick={() =>{\r\n              this.setState({\r\n                questions:questions,\r\n                clickedLabel: a,\r\n\r\n                error: false\r\n              })}\r\n            }\r\n          >\r\n            { questions[c].isOneTrueAnswer===false ?\r\n            <Radio \r\n              checked={a.UserAnswer} \r\n              onChange={e => this.handleChange(e,answerOptions, c,i)}\r\n            />\r\n            :\r\n            <Radio  \r\n              checked={a.UserAnswer}\r\n              onChange={e => this.handleChange2(e,answerOptions, c,i)}\r\n            />\r\n            }\r\n            <Paragraph>{a.answerText}</Paragraph>\r\n          </Label>\r\n        );\r\n      });\r\n    };\r\n\r\n    const handleChange = (e,answerOptions, c, i) => {\r\n      const { questions } = this.state\r\n        questions[c].answerOptions[i].UserAnswer=true;\r\n        this.setState({\r\n          questions:questions,\r\n        });\r\n    };\r\n\r\n    const handleChange2 = (e,answerOptions, c, i) => {\r\n      const { questions } = this.state\r\n      questions[c].answerOptions[i].UserAnswer=true;\r\n\r\n      if(questions[c].answerOptions[i].UserAnswer===true){\r\n        answerOptions.map((d,j) =>{\r\n          if(i!==j){\r\n            questions[c].answerOptions[j].UserAnswer=false;\r\n          }\r\n        })\r\n      }\r\n        this.setState({\r\n          questions:questions,\r\n        });\r\n    };\r\n\r\n\r\n  \r\n  \r\n    const renderQuestions = () => {\r\n      const { count,questions } = this.state;\r\n      const NewQuestions = Array.from(questions);\r\n      const removeQuestions = NewQuestions.slice(count - 1, count);\r\n      return removeQuestions.map((q, i) => (\r\n\r\n        <Container key={i}>\r\n          <ScreenQuiz>\r\n            <Counter/>\r\n\r\n            <h3>{count}/{questions.length}</h3>\r\n            <Title>{q.question}</Title>         \r\n            <label>{count}</label>\r\n            <ContainerLabel>\r\n              {this.handleOptions(q.answerOptions, count-1)}\r\n            </ContainerLabel>\r\n            <Button onClick={()=>this.handleClick(count-1)}\r\n                          style={{\r\n                            fontSize: \"1.2rem\", \r\n                            fontWeight: \"bold\",\r\n                            width: \"40%\",\r\n                            height: \"3rem\",\r\n                            border: \"none\",\r\n                            borderRadius: \"5px\",\r\n                            boxShadow: \"0px 3px 3px 0px #666\"\r\n                          }}\r\n            >\r\n                Сохранить\r\n            </Button>\r\n            { count===questions.length ?\r\n            <Button onClick={this.handleEndClick}\r\n              style={{\r\n                marginTop: '30px',\r\n                fontSize: \"1.2rem\", \r\n                fontWeight: \"bold\",\r\n                width: \"40%\",\r\n                height: \"3rem\",\r\n                border: \"none\",\r\n                borderRadius: \"5px\",\r\n                boxShadow: \"0px 3px 3px 0px #666\"\r\n              }}\r\n            >\r\n                Завершить тест\r\n            </Button>\r\n              : null\r\n          }\r\n            <ButtonScr onClick={()=>this.handleNextClick(count)} right disabled={count === questions.length}>Следующий</ButtonScr>\r\n            <ButtonScr onClick={this.handlePrevClick} left disabled={count===1}>Предыдущий</ButtonScr>\r\n          </ScreenQuiz>\r\n        </Container>\r\n\r\n      ));\r\n    };\r\n  \r\n    const renderResult = () => {\r\n      const { answer,questions, screenFinish } = this.state;\r\n  \r\n      return (\r\n        <Container>\r\n          <ScreenQuiz screen={screenFinish}>\r\n            <Title>Вы правильно ответили {answer} из {questions.length} вопросов</Title>\r\n            <Button\r\n              onClick={() =>\r\n                this.setState({\r\n                  count: 0,\r\n                  screenFinish: false,\r\n                  screen: true,\r\n                  answer: 0\r\n                })\r\n              }\r\n\r\n              style={{\r\n                fontSize: \"1.2rem\", \r\n                fontWeight: \"bold\",\r\n                width: \"40%\",\r\n                height: \"3rem\",\r\n                border: \"none\",\r\n                borderRadius: \"5px\",\r\n                boxShadow: \"0px 3px 3px 0px #666\"\r\n              }}\r\n            >\r\n              Тестировать заново\r\n            </Button>\r\n          </ScreenQuiz>\r\n        </Container>\r\n      );\r\n    };\r\n\r\n\r\n      // const { screenFinish, questions, screen } = this.state;\r\n\r\n      return !screenFinish && questions ? (\r\n        <>{screen ? renderScreenInitial() : renderQuestions()}</>\r\n      ) : (\r\n        renderResult()\r\n      );\r\n\r\n  \r\n}\r\n  \r\n  // const mapStateToProps = state => ({\r\n  //     chapter : state.chapter,\r\n  //     trainer : state.trainer\r\n  // });\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}