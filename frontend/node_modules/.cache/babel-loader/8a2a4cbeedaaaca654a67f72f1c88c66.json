{"ast":null,"code":"import _objectSpread from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\admin\\\\Slides\\\\newslide.js\";\nimport React, { Component } from 'react';\nimport '../Division/newdivision.css';\nimport { Form, Input, Button, Icon, Select, Upload } from 'antd';\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport { connect } from 'react-redux';\nimport { ChangeSlideConfirmDirty, ChangeSlideModalState, ChangeSlideTableData } from '../../../actions/chapterAction';\nimport Alert from '../../../components/common/alert';\nimport auth from '../../../services/AuthServices';\nconst Option = Select.Option;\n\nclass NewSlide extends Component {\n  constructor(props) {\n    super(props);\n\n    this.SlideTextChange = (e, i) => {\n      var newSlides = [...this.state.slideDetails.slides];\n      newSlides[i] = _objectSpread({}, this.state.slideDetails.slides[i], {\n        body: e.target.value\n      });\n\n      if ((newSlides[i].image === 'undefined' || newSlides[i].image === undefined || newSlides[i].image === null || newSlides[i].image === 'null') && (newSlides[i].body === 'undefined' || newSlides[i].body === undefined || newSlides[i].body === 'null' || newSlides[i].body === '' || newSlides[i].body === null)) {\n        newSlides[i] = _objectSpread({}, this.state.slideDetails.slides[i]);\n        this.setState((ps, pp) => {\n          return {\n            slideDetails: _objectSpread({}, ps.slideDetails, {\n              slides: newSlides\n            })\n          };\n        });\n      }\n\n      this.setState((ps, pp) => {\n        return {\n          slideDetails: _objectSpread({}, ps.slideDetails, {\n            slides: newSlides\n          })\n        };\n      });\n    };\n\n    this.SlideImageonChange = (f, i) => {\n      var newSlides = [...this.state.slideDetails.slides];\n\n      if (!f) {\n        delete newSlides[i].image;\n        newSlides[i].image = null;\n      } else {\n        newSlides[i] = _objectSpread({}, this.state.slideDetails.slides[i], {\n          image: \"\".concat(apis.BASE, \"/\").concat(f.link)\n        });\n      }\n\n      this.setState({\n        submitDisabled: false\n      });\n\n      if ((newSlides[i].image === 'undefined' || newSlides[i].image === undefined || newSlides[i].image === null || newSlides[i].image === 'null') && (newSlides[i].body === 'undefined' || newSlides[i].body === undefined || newSlides[i].body === 'null' || newSlides[i].body === '' || newSlides[i].body === null)) {\n        newSlides[i] = _objectSpread({}, this.state.slideDetails.slides[i]);\n      }\n\n      this.setState((ps, pp) => {\n        return {\n          slideDetails: _objectSpread({}, ps.slideDetails, {\n            slides: newSlides\n          })\n        };\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        console.log(values);\n\n        if (!err) {\n          var f = 1;\n          var sl = [];\n          console.log('Полученные значения формы: ', values);\n          this.state.slideDetails.slides.forEach((element, i) => {\n            sl.push({\n              slbody: element.body,\n              slimage: element.image\n            });\n          });\n        }\n      });\n    };\n\n    this.state = {\n      slideDetails: {\n        slides: [{\n          body: null,\n          image: null\n        }]\n      },\n      submitDisabled: false\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    var SlideImageprops = {\n      name: 'file',\n      action: \"\".concat(apis.BASE).concat(apis.FILE_UPLOAD, \"?Token=\").concat(auth.retriveToken()),\n      listType: 'picture'\n    };\n    return React.createElement(\"div\", {\n      className: \"register-division-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"register-division-form-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n      hasFeedback: true,\n      className: \"input-admin-division\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, getFieldDecorator('slbody', {\n      initialValue: this.props.chapter.slidedetails.slbody,\n      rules: [{\n        required: true,\n        message: 'Пожалуйста, введите название подразделения!',\n        whitespace: true\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"\\u0421\\u043B\\u0430\\u0439\\u0434\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Upload, Object.assign({}, SlideImageprops, {\n      beforeUpload: this.upl,\n      onRemove: f => this.SlideImageonChange(null),\n      onSuccess: f => this.SlideImageonChange(f),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), getFieldDecorator('slimage', {\n      initialValue: this.props.chapter.slidedetails.slimage,\n      rules: [{\n        required: false,\n        message: 'Пожалуйста, загрузите логотип вашей компании!',\n        whitespace: true\n      }]\n    })(React.createElement(\"img\", {\n      src: this.props.chapter.slidedetails.slimage,\n      style: {\n        width: \"60px\",\n        height: \"60px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), React.createElement(Button, {\n      style: {\n        marginLeft: '100px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), \" \\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C\"))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, this.props.chapter.Slidemode)))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  admin: state.admin,\n  chapter: state.chapter\n});\n\nconst NewSlideForm = Form.create({\n  name: 'register'\n})(NewSlide);\nexport default connect(mapStateToProps, {\n  ChangeSlideConfirmDirty,\n  ChangeSlideModalState,\n  ChangeSlideTableData\n})(NewSlideForm);","map":{"version":3,"sources":["C:\\React_project\\EduTest\\frontend\\src\\components\\admin\\Slides\\newslide.js"],"names":["React","Component","Form","Input","Button","Icon","Select","Upload","SecurePost","apis","connect","ChangeSlideConfirmDirty","ChangeSlideModalState","ChangeSlideTableData","Alert","auth","Option","NewSlide","constructor","props","SlideTextChange","e","i","newSlides","state","slideDetails","slides","body","target","value","image","undefined","setState","ps","pp","SlideImageonChange","f","BASE","link","submitDisabled","handleSubmit","preventDefault","form","validateFieldsAndScroll","err","values","console","log","sl","forEach","element","push","slbody","slimage","render","getFieldDecorator","SlideImageprops","name","action","FILE_UPLOAD","retriveToken","listType","initialValue","chapter","slidedetails","rules","required","message","whitespace","upl","width","height","marginLeft","Slidemode","mapStateToProps","admin","NewSlideForm","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport '../Division/newdivision.css';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Icon,\r\n    Select,\r\n    Upload\r\n} from 'antd';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    ChangeSlideConfirmDirty,\r\n    ChangeSlideModalState,\r\n    ChangeSlideTableData\r\n} from '../../../actions/chapterAction';\r\nimport Alert from '../../../components/common/alert';\r\nimport auth from '../../../services/AuthServices';\r\nconst { Option } = Select;\r\nclass NewSlide extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            slideDetails : {\r\n                slides :[\r\n                    {\r\n                        body : null,\r\n                        image :null,\r\n                    },\r\n                ],\r\n            },\r\n            submitDisabled:false,\r\n        }\r\n    }\r\n\r\n    SlideTextChange =(e,i)=>{\r\n        var newSlides = [...this.state.slideDetails.slides]\r\n        newSlides[i]={\r\n            ...this.state.slideDetails.slides[i],\r\n            body : e.target.value\r\n        }\r\n        if((newSlides[i].image==='undefined' || newSlides[i].image===undefined || newSlides[i].image===null || newSlides[i].image==='null') && \r\n            (newSlides[i].body==='undefined' || newSlides[i].body===undefined || newSlides[i].body==='null' || newSlides[i].body==='' || newSlides[i].body===null)){\r\n                newSlides[i]={\r\n                    ...this.state.slideDetails.slides[i],\r\n                }\r\n                this.setState((ps,pp)=>{\r\n                    return({\r\n                        slideDetails:{\r\n                            ...ps.slideDetails,\r\n                            slides:newSlides\r\n                        }\r\n                    })\r\n                })\r\n        }\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                slideDetails:{\r\n                    ...ps.slideDetails,\r\n                    slides:newSlides\r\n                }\r\n            })\r\n        })     \r\n    }\r\n\r\n     SlideImageonChange = (f,i)=>{\r\n        var newSlides = [...this.state.slideDetails.slides]\r\n        if(!f){\r\n            delete newSlides[i].image\r\n            newSlides[i].image=null\r\n        }\r\n        else{\r\n            newSlides[i]={\r\n                ...this.state.slideDetails.slides[i],\r\n                image :`${apis.BASE}/${f.link}`\r\n            }\r\n        }\r\n        this.setState({\r\n            submitDisabled:false\r\n        })\r\n        if((newSlides[i].image==='undefined' || newSlides[i].image===undefined || newSlides[i].image===null || newSlides[i].image==='null') && \r\n            (newSlides[i].body==='undefined' || newSlides[i].body===undefined || newSlides[i].body==='null' || newSlides[i].body==='' || newSlides[i].body===null)){\r\n                newSlides[i]={\r\n                    ...this.state.slideDetails.slides[i],\r\n                }\r\n        }\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                slideDetails:{\r\n                    ...ps.slideDetails,\r\n                    slides:newSlides\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            console.log(values);\r\n            if (!err) {\r\n                var f=1;\r\n                var sl=[]\r\n                console.log('Полученные значения формы: ', values);\r\n                this.state.slideDetails.slides.forEach((element,i) => {\r\n                    sl.push({\r\n                        slbody:element.body,\r\n                        slimage:element.image\r\n                    });\r\n                })\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        var SlideImageprops={\r\n            name: 'file',\r\n            action: `${apis.BASE}${apis.FILE_UPLOAD}?Token=${auth.retriveToken()}`,\r\n            listType: 'picture',\r\n        }\r\n        return (\r\n            <div className=\"register-division-form\">\r\n                <div className=\"register-division-form-body\">\r\n                    <Form  onSubmit={this.handleSubmit}>\r\n                        <Form.Item label=\"Название\" hasFeedback className=\"input-admin-division\">\r\n                            {getFieldDecorator('slbody', {\r\n                                initialValue : this.props.chapter.slidedetails.slbody,\r\n                                rules: [{ required: true, message: 'Пожалуйста, введите название подразделения!', whitespace: true }],\r\n                            })(<Input />)}\r\n                        </Form.Item>\r\n                    \r\n                        <Form.Item label=\"Слайд\">\r\n                        <Upload {...SlideImageprops} beforeUpload={this.upl} onRemove={(f)=>this.SlideImageonChange(null)} onSuccess={(f)=>this.SlideImageonChange(f)}>\r\n                                {getFieldDecorator('slimage', {\r\n                                    initialValue : this.props.chapter.slidedetails.slimage,\r\n                                    rules: [{ required: false, message: 'Пожалуйста, загрузите логотип вашей компании!', whitespace: true }],\r\n                                })(<img src={this.props.chapter.slidedetails.slimage} style={{width: \"60px\",height: \"60px\",}}/>)\r\n                                }\r\n                                \r\n                                <Button style={{marginLeft: '100px'}}>\r\n                                    <Icon type=\"upload\" /> Загрузить\r\n                                </Button>\r\n                                \r\n                            </Upload>\r\n                        </Form.Item>\r\n\r\n                        \r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                {this.props.chapter.Slidemode}\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin : state.admin,\r\n    chapter : state.chapter\r\n});\r\n\r\n\r\n\r\nconst NewSlideForm = Form.create({ name: 'register' })(NewSlide);\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeSlideConfirmDirty,\r\n    ChangeSlideModalState,\r\n    ChangeSlideTableData\r\n})(NewSlideForm);\r\n\r\n"]},"metadata":{},"sourceType":"module"}