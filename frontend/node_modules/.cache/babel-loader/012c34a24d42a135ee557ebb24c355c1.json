{"ast":null,"code":"import _objectSpread from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\admin\\\\Company\\\\newcompany.js\";\nimport React, { Component } from 'react';\nimport './newcompany.css';\nimport { Form, Input, Button, //Select,\nIcon, Upload } from 'antd';\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport { connect } from 'react-redux';\nimport { ChangeCompanyConfirmDirty, ChangeCompanyModalState, ChangeCompanyTableData } from '../../../actions/adminAction';\nimport Alert from '../../../components/common/alert';\nimport auth from '../../../services/AuthServices'; // const { Option } = Select;\n\nimport LocalizedStrings from 'react-localization';\nlet strings = new LocalizedStrings({\n  ru: {\n    InputForm: \"Полученные значения формы: \",\n    Reg: \"Регистрация\",\n    Succes: \"Успешно\",\n    Warning: \"Предупреждение!\",\n    Error: \"Ошибка!\",\n    ErrorServer: \"Ошибка сервера\",\n    Name: \"Название\",\n    InputNameCompany: \"Пожалуйста, введите название вашей компании!\",\n    Logo: \"Логотип\",\n    Inputlogo: \"Пожалуйста, загрузите логотип вашей компании!\",\n    Download: \"Загрузить\",\n    Delete: \"Удалить\",\n    Description: \"Описание\",\n    Description2: \"Описание!\",\n    Date1: \"Дата начала действия лицензии\",\n    InputDate: \"Пожалуйста, выберите дату!\",\n    Date2: \"Срок действия лицензии\",\n    License: \"Количество лицензированных пользователей\",\n    Amount: \"Пожалуйста, введите количество!\",\n    UsedUsers: \"Количество использованных учетных записей в рамках лицензии\",\n    Contact: \"Контактное лицо\",\n    ContactInput: \"Пожалуйста, введите контактное лицо!\"\n  },\n  kz: {\n    InputForm: \"\",\n    Reg: \"\",\n    Succes: \"\",\n    Warning: \"\",\n    Error: \"\",\n    ErrorServer: \"\",\n    Name: \"\",\n    InputNameCompany: \"\",\n    Logo: \"\",\n    Inputlogo: \"\",\n    Download: \"\",\n    Delete: \"\",\n    Description: \"\",\n    Description2: \"\",\n    Date1: \"\",\n    InputDate: \"\",\n    Date2: \"\",\n    License: \"\",\n    Amount: \"\",\n    UsedUsers: \"\",\n    Contact: \"\",\n    ContactInput: \"\"\n  }\n});\n\nclass NewCompany extends Component {\n  constructor(props) {\n    super(props);\n\n    this.CompanyImageonChange = f => {\n      var newCompimg = this.state.companyDetails.companyimage;\n\n      if (!f) {\n        newCompimg = null;\n      } else {\n        newCompimg = \"\".concat(apis.BASE, \"/\").concat(f.link);\n      }\n\n      this.setState({\n        submitDisabled: false\n      });\n\n      if (newCompimg === 'undefined' || newCompimg === undefined || newCompimg === null || newCompimg === 'null') {\n        //(newOptions[i].body==='undefined' || newOptions[i].body===undefined || newOptions[i].body==='null' || newOptions[i].body==='' || newOptions[i].body===null)){\n        newCompimg = this.state.companyDetails.companyimage;\n      }\n\n      this.setState((ps, pp) => {\n        return {\n          companyDetails: _objectSpread({}, ps.companyDetails, {\n            companyimage: newCompimg\n          })\n        };\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          console.log('Полученные значения формы: ', values);\n          console.log(\"Company ID:\", this.props.admin.companyId);\n          SecurePost({\n            url: \"\".concat(apis.CREATE_COMPANY),\n            data: {\n              _id: this.props.admin.companyId,\n              name: values.name,\n              logo: this.state.companyDetails.companyimage,\n              descr: values.descr,\n              licFromDate: values.licFromDate,\n              licToDate: values.licToDate,\n              numOfLic: values.numOfLic,\n              numOfLicAcc: values.numOfLicAcc,\n              contact: values.contact\n            }\n          }).then(response => {\n            if (response.data.success) {\n              this.props.ChangeCompanyModalState(false, null, 'Регистрация');\n              Alert('success', 'Успешно', response.data.message);\n              this.props.ChangeCompanyTableData();\n            } else {\n              console.log(response.data);\n              this.props.ChangeCompanyModalState(false, null, 'Регистрация');\n              return Alert('warning', 'Предупреждение!', response.data.message);\n            }\n          }).catch(error => {\n            this.props.ChangeCompanyModalState(false, null, 'Регистрация');\n            return Alert('error', 'Ошибка!', 'Ошибка сервера');\n          });\n        }\n      });\n    };\n\n    this.changeqImage = f => {\n      this.setState((ps, pp) => {\n        return {\n          companyDetails: _objectSpread({}, ps.companyDetails, {\n            companyimage: f.link ? \"\".concat(apis.BASE, \"/\").concat(f.link) : null\n          }),\n          submitDisabled: false\n        };\n      });\n    };\n\n    this.upl = () => {\n      this.setState({\n        submitDisabled: false\n      });\n    };\n\n    this.state = {\n      companyDetails: {\n        companyimage: this.props.admin.companydetails.logo\n      },\n      submitDisabled: false\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    var CompanyImageprops = {\n      name: 'file',\n      action: \"\".concat(apis.BASE).concat(apis.FILE_UPLOAD, \"?Token=\").concat(auth.retriveToken()),\n      listType: 'picture'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register-company-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register-company-form-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n      hasFeedback: true,\n      className: \"input-admin-company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, getFieldDecorator('name', {\n      initialValue: this.props.admin.companydetails.name,\n      rules: [{\n        required: false,\n        message: 'Пожалуйста, введите название вашей компании!',\n        whitespace: true\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"\\u041B\\u043E\\u0433\\u043E\\u0442\\u0438\\u043F\",\n      className: \"input-admin-company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(Upload, Object.assign({}, CompanyImageprops, {\n      beforeUpload: this.upl,\n      onRemove: f => this.CompanyImageonChange(null),\n      onSuccess: f => this.CompanyImageonChange(f),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), getFieldDecorator('logo', {\n      initialValue: this.props.admin.companydetails.logo,\n      rules: [{\n        required: false,\n        message: 'Пожалуйста, загрузите логотип вашей компании!',\n        whitespace: true\n      }]\n    })( /*#__PURE__*/React.createElement(\"img\", {\n      src: this.props.admin.companydetails.logo,\n      style: {\n        height: \"60px\"\n      },\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    })), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        marginLeft: '100px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(Icon, {\n      type: \"upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), \" \\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C\"), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        marginLeft: '100px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(Icon, {\n      type: \"delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), \" \\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",\n      hasFeedback: true,\n      className: \"input-admin-company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, getFieldDecorator('descr', {\n      initialValue: this.props.admin.companydetails.descr,\n      rules: [{\n        required: false,\n        message: 'Описание!',\n        whitespace: true\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"\\u0414\\u0430\\u0442\\u0430 \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430 \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044F \\u043B\\u0438\\u0446\\u0435\\u043D\\u0437\\u0438\\u0438\",\n      hasFeedback: true,\n      className: \"input-admin-company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, getFieldDecorator('licFromDate', {\n      initialValue: this.props.admin.companydetails.licFromDate,\n      rules: [{\n        required: false,\n        message: 'Пожалуйста, выберите дату!',\n        whitespace: true\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      type: \"Date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"\\u0421\\u0440\\u043E\\u043A \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044F \\u043B\\u0438\\u0446\\u0435\\u043D\\u0437\\u0438\\u0438\",\n      hasFeedback: true,\n      className: \"input-admin-company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, getFieldDecorator('licToDate', {\n      initialValue: this.props.admin.companydetails.licToDate,\n      rules: [{\n        required: false,\n        message: 'Пожалуйста, выберите дату!',\n        whitespace: true\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      type: \"Date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043B\\u0438\\u0446\\u0435\\u043D\\u0437\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439\",\n      className: \"input-admin-company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, getFieldDecorator('numOfLic', {\n      initialValue: this.props.admin.companydetails.numOfLic,\n      rules: [{\n        required: false,\n        message: 'Пожалуйста, введите количество!'\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      type: \"number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0443\\u0447\\u0435\\u0442\\u043D\\u044B\\u0445 \\u0437\\u0430\\u043F\\u0438\\u0441\\u0435\\u0439 \\u0432 \\u0440\\u0430\\u043C\\u043A\\u0430\\u0445 \\u043B\\u0438\\u0446\\u0435\\u043D\\u0437\\u0438\\u0438\",\n      className: \"input-admin-company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, getFieldDecorator('numOfLicAcc', {\n      initialValue: this.props.admin.companydetails.numOfLicAcc,\n      rules: [{\n        required: false,\n        message: 'Пожалуйста, введите количество!'\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      type: \"number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"\\u041A\\u043E\\u043D\\u0442\\u0430\\u043A\\u0442\\u043D\\u043E\\u0435 \\u043B\\u0438\\u0446\\u043E\",\n      hasFeedback: true,\n      className: \"input-admin-company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, getFieldDecorator('contact', {\n      initialValue: this.props.admin.companydetails.contact,\n      rules: [{\n        required: false,\n        message: 'Пожалуйста, введите контактное лицо!',\n        whitespace: true\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, this.props.admin.Companymode)))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  admin: state.admin\n});\n\nconst NewCompanyForm = Form.create({\n  name: 'register'\n})(NewCompany);\nexport default connect(mapStateToProps, {\n  ChangeCompanyConfirmDirty,\n  ChangeCompanyModalState,\n  ChangeCompanyTableData\n})(NewCompanyForm);","map":{"version":3,"names":["React","Component","Form","Input","Button","Icon","Upload","SecurePost","apis","connect","ChangeCompanyConfirmDirty","ChangeCompanyModalState","ChangeCompanyTableData","Alert","auth","LocalizedStrings","strings","ru","InputForm","Reg","Succes","Warning","Error","ErrorServer","Name","InputNameCompany","Logo","Inputlogo","Download","Delete","Description","Description2","Date1","InputDate","Date2","License","Amount","UsedUsers","Contact","ContactInput","kz","NewCompany","constructor","props","CompanyImageonChange","f","newCompimg","state","companyDetails","companyimage","BASE","link","setState","submitDisabled","undefined","ps","pp","handleSubmit","e","preventDefault","form","validateFieldsAndScroll","err","values","console","log","admin","companyId","url","CREATE_COMPANY","data","_id","name","logo","descr","licFromDate","licToDate","numOfLic","numOfLicAcc","contact","then","response","success","message","catch","error","changeqImage","upl","companydetails","render","getFieldDecorator","CompanyImageprops","action","FILE_UPLOAD","retriveToken","listType","initialValue","rules","required","whitespace","height","marginLeft","Companymode","mapStateToProps","NewCompanyForm","create"],"sources":["C:/React_project/EduTest/frontend/src/components/admin/Company/newcompany.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport './newcompany.css';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    //Select,\r\n    Icon,\r\n    Upload\r\n} from 'antd';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    ChangeCompanyConfirmDirty,\r\n    ChangeCompanyModalState,\r\n    ChangeCompanyTableData\r\n} from '../../../actions/adminAction';\r\nimport Alert from '../../../components/common/alert';\r\nimport auth from '../../../services/AuthServices';\r\n// const { Option } = Select;\r\nimport  LocalizedStrings  from  'react-localization' ;\r\nlet strings = new LocalizedStrings({\r\n  ru:{\r\n    InputForm:\"Полученные значения формы: \",\r\n    Reg:\"Регистрация\",\r\n    Succes:\"Успешно\",\r\n    Warning:\"Предупреждение!\",\r\n    Error:\"Ошибка!\",\r\n    ErrorServer:\"Ошибка сервера\",\r\n    Name:\"Название\",\r\n    InputNameCompany:\"Пожалуйста, введите название вашей компании!\",\r\n    Logo:\"Логотип\",\r\n    Inputlogo:\"Пожалуйста, загрузите логотип вашей компании!\",\r\n    Download:\"Загрузить\",\r\n    Delete:\"Удалить\",\r\n    Description:\"Описание\",\r\n    Description2:\"Описание!\",\r\n    Date1:\"Дата начала действия лицензии\",\r\n    InputDate:\"Пожалуйста, выберите дату!\",\r\n    Date2:\"Срок действия лицензии\",\r\n    License:\"Количество лицензированных пользователей\",\r\n    Amount:\"Пожалуйста, введите количество!\",\r\n    UsedUsers:\"Количество использованных учетных записей в рамках лицензии\",\r\n    Contact:\"Контактное лицо\",\r\n    ContactInput:\"Пожалуйста, введите контактное лицо!\",\r\n    \r\n  },\r\n  kz: {\r\n    InputForm :\"\",\r\n    Reg :\"\",\r\n    Succes :\"\",\r\n    Warning :\"\",\r\n    Error :\"\",\r\n    ErrorServer :\"\",\r\n    Name :\"\",\r\n    InputNameCompany :\"\",\r\n    Logo :\"\",\r\n    Inputlogo :\"\",\r\n    Download :\"\",\r\n    Delete :\"\",\r\n    Description :\"\",\r\n    Description2 :\"\",\r\n    Date1 :\"\",\r\n    InputDate :\"\",\r\n    Date2 :\"\",\r\n    License :\"\",\r\n    Amount :\"\",\r\n    UsedUsers :\"\",\r\n    Contact :\"\",\r\n    ContactInput :\"\",\r\n\r\n\r\n  }\r\n });\r\nclass NewCompany extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            companyDetails : {\r\n            companyimage: this.props.admin.companydetails.logo,},\r\n            submitDisabled:false,\r\n        }\r\n    }\r\n\r\n    CompanyImageonChange = (f)=>{\r\n        var newCompimg = this.state.companyDetails.companyimage\r\n        if(!f){\r\n            newCompimg=null\r\n        }\r\n        else{\r\n            newCompimg=`${apis.BASE}/${f.link}`\r\n        }\r\n        this.setState({\r\n            submitDisabled:false\r\n        })\r\n        if(newCompimg==='undefined' || newCompimg===undefined || newCompimg===null || newCompimg==='null') {\r\n            //(newOptions[i].body==='undefined' || newOptions[i].body===undefined || newOptions[i].body==='null' || newOptions[i].body==='' || newOptions[i].body===null)){\r\n                newCompimg=this.state.companyDetails.companyimage;    \r\n        }\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                companyDetails:{\r\n                    ...ps.companyDetails,\r\n                    companyimage:newCompimg\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    \r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                console.log('Полученные значения формы: ', values);\r\n                console.log(\"Company ID:\", this.props.admin.companyId)\r\n                    SecurePost({\r\n                        url : `${apis.CREATE_COMPANY}`,\r\n                        data : {\r\n                            _id : this.props.admin.companyId,\r\n                            name :values.name,\r\n                            logo : this.state.companyDetails.companyimage,\r\n                            descr : values.descr,\r\n                            licFromDate: values.licFromDate,\r\n                            licToDate :values.licToDate,\r\n                            numOfLic : values.numOfLic,\r\n                            numOfLicAcc : values.numOfLicAcc,\r\n                            contact : values.contact,\r\n                        }\r\n                    }).then((response)=>{\r\n                        if(response.data.success){\r\n                            this.props.ChangeCompanyModalState(false,null,'Регистрация');\r\n                            Alert('success','Успешно',response.data.message);\r\n                            this.props.ChangeCompanyTableData();\r\n                        }\r\n                        else{\r\n                            console.log(response.data);\r\n                            this.props.ChangeCompanyModalState(false,null,'Регистрация');\r\n                            return Alert('warning','Предупреждение!',response.data.message);\r\n                        }\r\n                    }).catch((error)=>{\r\n                        this.props.ChangeCompanyModalState(false,null,'Регистрация');\r\n                        return Alert('error','Ошибка!','Ошибка сервера');\r\n                    })\r\n                \r\n            }\r\n        });\r\n    };\r\n\r\n    changeqImage = (f)=>{\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                companyDetails:{\r\n                    ...ps.companyDetails,\r\n                    companyimage:(f.link ?`${apis.BASE}/${f.link}`:null)\r\n                },\r\n                submitDisabled:false\r\n            })\r\n        })\r\n    }\r\n    upl=()=>{\r\n        this.setState({\r\n            submitDisabled: false\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        var CompanyImageprops={\r\n            name: 'file',\r\n            action: `${apis.BASE}${apis.FILE_UPLOAD}?Token=${auth.retriveToken()}`,\r\n            listType: 'picture',\r\n        }\r\n        \r\n        return (\r\n            <div className=\"register-company-form\">\r\n                <div className=\"register-company-form-body\">\r\n                    <Form  onSubmit={this.handleSubmit}>\r\n                        <Form.Item label=\"Название\" hasFeedback className=\"input-admin-company\">\r\n                            {getFieldDecorator('name', {\r\n                                initialValue : this.props.admin.companydetails.name,\r\n                                rules: [{ required: false, message: 'Пожалуйста, введите название вашей компании!', whitespace: true }],\r\n                            })(<Input />)}\r\n                        </Form.Item>\r\n                        \r\n                        <Form.Item label=\"Логотип\" className=\"input-admin-company\">\r\n                        <Upload {...CompanyImageprops} beforeUpload={this.upl} onRemove={(f)=>this.CompanyImageonChange(null)} onSuccess={(f)=>this.CompanyImageonChange(f)}>\r\n                                {getFieldDecorator('logo', {\r\n                                    initialValue : this.props.admin.companydetails.logo,\r\n                                    rules: [{ required: false, message: 'Пожалуйста, загрузите логотип вашей компании!', whitespace: true }],\r\n                                })(<img src={this.props.admin.companydetails.logo} style={{height: \"60px\",}} alt=\"\"/>)\r\n                                }\r\n                                \r\n                                <Button style={{marginLeft: '100px'}}>\r\n                                    <Icon type=\"upload\" /> Загрузить\r\n                                </Button>\r\n                                <Button style={{marginLeft: '100px'}}>\r\n                                    <Icon type=\"delete\" /> Удалить\r\n                                </Button>\r\n                            </Upload>\r\n                        </Form.Item>\r\n\r\n                    \r\n                        <Form.Item label=\"Описание\" hasFeedback className=\"input-admin-company\">\r\n                            {getFieldDecorator('descr', {\r\n                                initialValue : this.props.admin.companydetails.descr,\r\n                                rules: [{ required: false, message: 'Описание!', whitespace: true }],\r\n                            })(<Input />)}\r\n                        </Form.Item> \r\n\r\n                        <Form.Item label=\"Дата начала действия лицензии\" hasFeedback className=\"input-admin-company\">\r\n                            {getFieldDecorator('licFromDate', {\r\n                                initialValue : this.props.admin.companydetails.licFromDate,\r\n                                rules: [{ required: false, message: 'Пожалуйста, выберите дату!', whitespace: true }],\r\n                            })(<Input type='Date'/>)}\r\n                        </Form.Item> \r\n                        <Form.Item label=\"Срок действия лицензии\" hasFeedback className=\"input-admin-company\">\r\n                            {getFieldDecorator('licToDate', {\r\n                                initialValue : this.props.admin.companydetails.licToDate,\r\n                                rules: [{ required: false, message: 'Пожалуйста, выберите дату!', whitespace: true }],\r\n                            })(<Input type='Date'/>)}\r\n                        </Form.Item> \r\n                        <Form.Item label=\"Количество лицензированных пользователей\" className=\"input-admin-company\">\r\n                            {getFieldDecorator('numOfLic', {\r\n                                initialValue : this.props.admin.companydetails.numOfLic,\r\n                                 rules: [{ required: false, message: 'Пожалуйста, введите количество!'}],\r\n                            })(<Input type='number'/>)}\r\n                        </Form.Item> \r\n                        <Form.Item label=\"Количество использованных учетных записей в рамках лицензии\" className=\"input-admin-company\">\r\n                            {getFieldDecorator('numOfLicAcc', {\r\n                                initialValue : this.props.admin.companydetails.numOfLicAcc,\r\n                                 rules: [{ required: false, message: 'Пожалуйста, введите количество!'}],\r\n                            })(<Input type='number' />)}\r\n                        </Form.Item> \r\n                        <Form.Item label=\"Контактное лицо\" hasFeedback className=\"input-admin-company\">\r\n                            {getFieldDecorator('contact', {\r\n                                initialValue : this.props.admin.companydetails.contact,\r\n                                rules: [{ required: false, message: 'Пожалуйста, введите контактное лицо!', whitespace: true }],\r\n                            })(<Input />)}\r\n                        </Form.Item> \r\n                        \r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                {this.props.admin.Companymode}\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin : state.admin\r\n});\r\n\r\n\r\n\r\nconst NewCompanyForm = Form.create({ name: 'register' })(NewCompany);\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeCompanyConfirmDirty,\r\n    ChangeCompanyModalState,\r\n    ChangeCompanyTableData\r\n})(NewCompanyForm);\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}