{"ast":null,"code":"import _objectSpread from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nconst initialState = {\n  NewQuestionmodalOpened: false,\n  QuestionmodalOpened: false,\n  AllQuestionconfirmDirty: false,\n  QuestionsearchText: '',\n  QuestionTableLoading: false,\n  QuestionTableData: [],\n  questionId: null,\n  Questionmode: \"Создать вопрос\",\n  questiondetails: {},\n  //selectedSubjects:[],\n  // selectedChapter:[],\n  // selectedMaterials:[],\n  QuestionFormData: {},\n  // fifthoptioAddButtonVisible:true,\n  TestTableLoading: false,\n  TestTableData: [],\n  DataActiveTestDetails: {\n    testDetailsId: null,\n    testquestions: []\n  },\n  NewTestmodalOpened: false,\n  Createtestmode: 'Создать',\n  OptionmodalOpened: false,\n  optionId: null,\n  Optionmode: 'Создать',\n  optiondetails: {},\n  OptionconfirmDirty: false,\n  OptionsearchText: '',\n  OptionTableLoading: false,\n  OptionTableData: []\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    // case 'CHANGE_QUESTION_MODAL_STATE':\n    //     return {\n    //         ...state,\n    //         NewQuestionmodalOpened : action.payload1,\n    //     }\n    case 'CHANGE_QUESTION_MODAL_STATE':\n      return _objectSpread({}, state, {\n        QuestionmodalOpened: action.payload1,\n        questionId: action.payload2,\n        Questionmode: action.payload3,\n        questioneditdetails: action.payload4\n      });\n\n    case 'CHANGE_QUESTION_FORM_CONFIRMDIRTY':\n      return _objectSpread({}, state, {\n        AllQuestionconfirmDirty: action.payload\n      });\n\n    case 'CHANGE_QUESTION_SEARCH_TEXT':\n      return _objectSpread({}, state, {\n        QuestionsearchText: action.payload\n      });\n\n    case 'CHANGE_QUESTION_TABLE_LOADING_STATUS':\n      return _objectSpread({}, state, {\n        QuestionTableLoading: action.payload1,\n        QuestionTableData: action.payload2\n      });\n\n    case 'CHANGE_QUESTION_FORM_DATA':\n      return _objectSpread({}, state, {\n        QuestionFormData: action.payload\n      });\n\n    case 'CHANGE_TEST_DETAILS_MODAL_STATE':\n      return _objectSpread({}, state, {\n        TestDetailsmodalOpened: action.payload1,\n        DataActiveTestDetails: _objectSpread({}, state.DataActiveTestDetails, {\n          testDetailsId: action.payload2\n        })\n      });\n\n    case 'NEW_TEST_MODAL_STATE':\n      return _objectSpread({}, state, {\n        NewTestmodalOpened: action.payload1,\n        Createtestmode: action.payload2\n      });\n\n    case 'CHANGE_TEST_SEARCH_TEXT':\n      return _objectSpread({}, state, {\n        TestsearchText: action.payload\n      });\n\n    case 'CHANGE_TEST_TABLE_LOADING_STATUS':\n      return _objectSpread({}, state, {\n        TestTableLoading: action.payload1,\n        TestTableData: action.payload2\n      });\n\n    case 'CHANGE_CURRENT_ACTIVE_TEST_QUESTION':\n      return _objectSpread({}, state, {\n        DataActiveTestDetails: _objectSpread({}, state.DataActiveTestDetails, {\n          testquestions: action.payload\n        })\n      });\n\n    case 'CHANGE_OPTION_MODAL_STATE':\n      return _objectSpread({}, state, {\n        OptionmodalOpened: action.payload1,\n        optionId: action.payload2,\n        Optionmode: action.payload3,\n        optiondetails: action.payload4\n      });\n\n    case 'CHANGE_OPTION_FORM_CONFIRMDIRTY':\n      return _objectSpread({}, state, {\n        OptionconfirmDirty: action.payload\n      });\n\n    case 'CHANGE_OPTION_SEARCH_TEXT':\n      return _objectSpread({}, state, {\n        OptionsearchText: action.payload\n      });\n\n    case 'CHANGE_OPTION_TABLE_LOADING_STATUS':\n      return _objectSpread({}, state, {\n        optionTableLoadingStatus: action.payload1,\n        optionTableData: action.payload2\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["initialState","NewQuestionmodalOpened","QuestionmodalOpened","AllQuestionconfirmDirty","QuestionsearchText","QuestionTableLoading","QuestionTableData","questionId","Questionmode","questiondetails","QuestionFormData","TestTableLoading","TestTableData","DataActiveTestDetails","testDetailsId","testquestions","NewTestmodalOpened","Createtestmode","OptionmodalOpened","optionId","Optionmode","optiondetails","OptionconfirmDirty","OptionsearchText","OptionTableLoading","OptionTableData","state","action","type","payload1","payload2","payload3","questioneditdetails","payload4","payload","TestDetailsmodalOpened","TestsearchText","optionTableLoadingStatus","optionTableData"],"sources":["C:/React_project/EduTest/frontend/src/reducers/trainer.js"],"sourcesContent":["const initialState = {\r\n    NewQuestionmodalOpened : false,\r\n    QuestionmodalOpened : false,\r\n    AllQuestionconfirmDirty: false,\r\n    QuestionsearchText : '',\r\n    QuestionTableLoading : false, \r\n    QuestionTableData : [],\r\n    questionId : null,\r\n    Questionmode : \"Создать вопрос\",\r\n    questiondetails : {},\r\n    //selectedSubjects:[],\r\n    // selectedChapter:[],\r\n    // selectedMaterials:[],\r\n    QuestionFormData:{},\r\n    // fifthoptioAddButtonVisible:true,\r\n    TestTableLoading:false,\r\n    TestTableData:[],\r\n    DataActiveTestDetails : {\r\n        testDetailsId : null,\r\n        testquestions :[]\r\n    },\r\n    NewTestmodalOpened : false,\r\n    Createtestmode : 'Создать',\r\n\r\n    OptionmodalOpened : false,\r\n    optionId : null,\r\n    Optionmode : 'Создать',\r\n    optiondetails : {},\r\n    OptionconfirmDirty: false,\r\n    OptionsearchText : '',\r\n    OptionTableLoading : false, \r\n    OptionTableData : [],\r\n\r\n}\r\n\r\n\r\nexport default (state = initialState, action )=>{\r\n    switch(action.type){\r\n        // case 'CHANGE_QUESTION_MODAL_STATE':\r\n        //     return {\r\n        //         ...state,\r\n        //         NewQuestionmodalOpened : action.payload1,\r\n        //     }\r\n        case 'CHANGE_QUESTION_MODAL_STATE':\r\n            return {\r\n                ...state,\r\n                QuestionmodalOpened : action.payload1,\r\n                questionId : action.payload2,\r\n                Questionmode : action.payload3,\r\n                questioneditdetails : action.payload4\r\n            }\r\n\r\n        case 'CHANGE_QUESTION_FORM_CONFIRMDIRTY':\r\n            return {\r\n                ...state,\r\n                AllQuestionconfirmDirty : action.payload\r\n            }\r\n        case 'CHANGE_QUESTION_SEARCH_TEXT':\r\n            return {\r\n                ...state,\r\n                QuestionsearchText : action.payload\r\n            }\r\n        case 'CHANGE_QUESTION_TABLE_LOADING_STATUS':\r\n            return {\r\n                ...state,\r\n                QuestionTableLoading : action.payload1,\r\n                QuestionTableData : action.payload2\r\n            }\r\n\r\n\r\n        case 'CHANGE_QUESTION_FORM_DATA':\r\n            return{\r\n                ...state,\r\n                QuestionFormData : action.payload\r\n            }\r\n        case 'CHANGE_TEST_DETAILS_MODAL_STATE':\r\n            return {\r\n                ...state,\r\n                TestDetailsmodalOpened : action.payload1,\r\n                DataActiveTestDetails :{\r\n                    ...state.DataActiveTestDetails,\r\n                    testDetailsId : action.payload2\r\n                }\r\n            }\r\n\r\n        case 'NEW_TEST_MODAL_STATE':\r\n            return{\r\n                ...state,\r\n                NewTestmodalOpened : action.payload1,\r\n                Createtestmode : action.payload2\r\n            }\r\n\r\n        case 'CHANGE_TEST_SEARCH_TEXT':\r\n            return {\r\n                ...state,\r\n                TestsearchText : action.payload\r\n            }\r\n        case 'CHANGE_TEST_TABLE_LOADING_STATUS':\r\n            return {\r\n                ...state,\r\n                TestTableLoading : action.payload1,\r\n                TestTableData :action.payload2\r\n            }\r\n        case 'CHANGE_CURRENT_ACTIVE_TEST_QUESTION':\r\n            return{\r\n                ...state,\r\n                DataActiveTestDetails:{\r\n                    ...state.DataActiveTestDetails,\r\n                    testquestions:action.payload\r\n                }\r\n            }\r\n\r\n                    \r\n            case 'CHANGE_OPTION_MODAL_STATE':\r\n                return {\r\n                    ...state,\r\n                    OptionmodalOpened : action.payload1,\r\n                    optionId : action.payload2,\r\n                    Optionmode : action.payload3,\r\n                    optiondetails : action.payload4\r\n                }\r\n    \r\n            case 'CHANGE_OPTION_FORM_CONFIRMDIRTY':\r\n                return {\r\n                    ...state,\r\n                    OptionconfirmDirty : action.payload\r\n                }\r\n    \r\n            case 'CHANGE_OPTION_SEARCH_TEXT':\r\n                return {\r\n                    ...state,\r\n                    OptionsearchText : action.payload\r\n                }\r\n            \r\n            case 'CHANGE_OPTION_TABLE_LOADING_STATUS':\r\n                return {\r\n                    ...state,\r\n                    optionTableLoadingStatus : action.payload1,\r\n                    optionTableData : action.payload2,\r\n                }  \r\n        default:\r\n            return state;\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}