{"ast":null,"code":"import _objectSpread from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\admin\\\\chapterwindow\\\\newmaterials.js\";\nimport React, { Component, useState } from 'react';\nimport '../newCompany/newcompany.css';\nimport { Form, Input, Button, Select, Icon, Upload, Row, Col, TextArea } from 'antd';\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport { connect } from 'react-redux';\nimport { ChangeMaterialConfirmDirty, ChangeMaterialModalState, ChangeMaterialTableData } from '../../../actions/chapterAction';\nimport Alert from '../../../components/common/alert';\nimport auth from '../../../services/AuthServices';\nconst Option = Select.Option;\n\nclass NewMaterial extends Component {\n  constructor(props) {\n    super(props);\n\n    this.MaterialTextChange = (e, i) => {\n      var newSlides = [...this.state.materialDetails.slides];\n      newSlides[i] = _objectSpread({}, this.state.materialDetails.slides[i], {\n        slidebody: e.target.value\n      });\n\n      if ((newSlides[i].image === 'undefined' || newSlides[i].image === undefined || newSlides[i].image === null || newSlides[i].image === 'null') && (newSlides[i].body === 'undefined' || newSlides[i].body === undefined || newSlides[i].body === 'null' || newSlides[i].body === '' || newSlides[i].body === null)) {\n        newSlides[i] = _objectSpread({}, this.state.materialDetails.slides[i]);\n        this.setState((ps, pp) => {\n          return {\n            materialDetails: _objectSpread({}, ps.materialDetails, {\n              slides: newSlides\n            })\n          };\n        });\n      }\n\n      this.setState((ps, pp) => {\n        return {\n          materialDetails: _objectSpread({}, ps.materialDetails, {\n            slides: newSlides\n          })\n        };\n      });\n    };\n\n    this.MaterialImageonChange = (f, i) => {\n      var newSlides = [...this.state.materialDetails.slides];\n\n      if (!f) {\n        delete newSlides[i].image;\n        newSlides[i].image = null;\n      } else {\n        newSlides[i] = _objectSpread({}, this.state.materialDetails.slides[i], {\n          image: \"\".concat(apis.BASE, \"/\").concat(f.link)\n        });\n      }\n\n      this.setState({\n        submitDisabled: false\n      });\n\n      if ((newSlides[i].image === 'undefined' || newSlides[i].image === undefined || newSlides[i].image === null || newSlides[i].image === 'null') && (newSlides[i].slidebody === 'undefined' || newSlides[i].slidebody === undefined || newSlides[i].slidebody === 'null' || newSlides[i].slidebody === '' || newSlides[i].slidebody === null)) {\n        newSlides[i] = _objectSpread({}, this.state.materialDetails.slides[i]);\n      }\n\n      this.setState((ps, pp) => {\n        return {\n          materialDetails: _objectSpread({}, ps.materialDetails, {\n            slides: newSlides\n          })\n        };\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        console.log(values);\n\n        if (!err) {\n          f = 1;\n          var sl = [];\n          console.log('Полученные значения формы: ', values);\n          this.state.materialDetails.slides.forEach((element, i) => {\n            sl.push({\n              slidebody: element.slidebody,\n              image: element.image\n            });\n\n            if ((element.image === 'undefined' || element.image === undefined || element.image === null || element.image === 'null') && (element.body === '' || element.body === null || element.body === 'null' || element.body === 'undefined' || element.body === undefined)) {\n              f = 0;\n            }\n          }); // else{\n          //     Alert('warning','Предупреждение!','Пожалуйста, заполните все варианты');\n          // }\n        }\n      });\n    };\n\n    this.changeqImage = f => {\n      this.setState((ps, pp) => {\n        return {\n          materialDetails: _objectSpread({}, ps.materialDetails, {\n            materialimage: f.link ? \"\".concat(apis.BASE, \"/\").concat(f.link) : null\n          }),\n          submitDisabled: false\n        };\n      });\n    };\n\n    this.upl = () => {\n      this.setState({\n        submitDisabled: false\n      });\n    };\n\n    this.state = {\n      materialDetails: {\n        //materialimage: this.props.chapter.materialdetails.slides,\n        slides: [{\n          slidebody: null,\n          image: null\n        }]\n      },\n      submitDisabled: false\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const TextArea = Input.TextArea;\n    var MaterialImageprops = {\n      name: 'file',\n      action: \"\".concat(apis.BASE).concat(apis.FILE_UPLOAD, \"?Token=\").concat(auth.retriveToken()),\n      listType: 'picture'\n    };\n    return React.createElement(\"div\", {\n      className: \"register-company-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"register-company-form-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n      hasFeedback: true,\n      className: \"input-admin-company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, getFieldDecorator('topic', {\n      initialValue: this.props.chapter.materialdetails.topic,\n      rules: [{\n        required: true,\n        message: 'Пожалуйста, введите название!',\n        whitespace: true\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: {\n        paddingTop: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, this.state.materialDetails.slides.map((option, i) => {\n      return React.createElement(Row, {\n        key: i,\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(Col, {\n        offset: 1,\n        span: 13,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        label: \"option\".concat(i + 1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(TextArea, {\n        value: this.state.materialDetails.slides[i].slidebody,\n        onChange: e => this.MaterialTextChange(e, i),\n        rows: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        offset: 2,\n        span: 6,\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        label: \"Option\".concat(i + 1, \" Image\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(Upload, Object.assign({}, MaterialImageprops, {\n        beforeUpload: this.upl,\n        onRemove: f => this.MaterialImageonChange(null, i),\n        onSuccess: f => this.MaterialImageonChange(f, i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }), \" \\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C\")))));\n    })), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, this.props.chapter.Materialmode)))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  chapter: state.chapter\n});\n\nconst NewMaterialForm = Form.create({\n  name: 'register'\n})(NewMaterial);\nexport default connect(mapStateToProps, {\n  ChangeMaterialConfirmDirty,\n  ChangeMaterialModalState,\n  ChangeMaterialTableData\n})(NewMaterialForm);","map":{"version":3,"sources":["C:\\React_project\\EduTest\\frontend\\src\\components\\admin\\chapterwindow\\newmaterials.js"],"names":["React","Component","useState","Form","Input","Button","Select","Icon","Upload","Row","Col","TextArea","SecurePost","apis","connect","ChangeMaterialConfirmDirty","ChangeMaterialModalState","ChangeMaterialTableData","Alert","auth","Option","NewMaterial","constructor","props","MaterialTextChange","e","i","newSlides","state","materialDetails","slides","slidebody","target","value","image","undefined","body","setState","ps","pp","MaterialImageonChange","f","BASE","link","submitDisabled","handleSubmit","preventDefault","form","validateFieldsAndScroll","err","values","console","log","sl","forEach","element","push","changeqImage","materialimage","upl","render","getFieldDecorator","MaterialImageprops","name","action","FILE_UPLOAD","retriveToken","listType","initialValue","chapter","materialdetails","topic","rules","required","message","whitespace","paddingTop","map","option","textAlign","Materialmode","mapStateToProps","NewMaterialForm","create"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,8BAAP;AACA,SACIC,IADJ,EAEIC,KAFJ,EAGIC,MAHJ,EAIIC,MAJJ,EAKIC,IALJ,EAMIC,MANJ,EAOIC,GAPJ,EAQIC,GARJ,EASIC,QATJ,QAUO,MAVP;AAWA,SAAQC,UAAR,QAAyB,6BAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACIC,0BADJ,EAEIC,wBAFJ,EAGIC,uBAHJ,QAIO,gCAJP;AAKA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,OAAOC,IAAP,MAAiB,gCAAjB;MACQC,M,GAAWd,M,CAAXc,M;;AAIR,MAAMC,WAAN,SAA0BpB,SAA1B,CAAoC;AAEhCqB,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAgBlBC,kBAhBkB,GAgBE,CAACC,CAAD,EAAGC,CAAH,KAAO;AACvB,UAAIC,SAAS,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWC,eAAX,CAA2BC,MAA/B,CAAhB;AACAH,MAAAA,SAAS,CAACD,CAAD,CAAT,qBACO,KAAKE,KAAL,CAAWC,eAAX,CAA2BC,MAA3B,CAAkCJ,CAAlC,CADP;AAEIK,QAAAA,SAAS,EAAGN,CAAC,CAACO,MAAF,CAASC;AAFzB;;AAIA,UAAG,CAACN,SAAS,CAACD,CAAD,CAAT,CAAaQ,KAAb,KAAqB,WAArB,IAAoCP,SAAS,CAACD,CAAD,CAAT,CAAaQ,KAAb,KAAqBC,SAAzD,IAAsER,SAAS,CAACD,CAAD,CAAT,CAAaQ,KAAb,KAAqB,IAA3F,IAAmGP,SAAS,CAACD,CAAD,CAAT,CAAaQ,KAAb,KAAqB,MAAzH,MACEP,SAAS,CAACD,CAAD,CAAT,CAAaU,IAAb,KAAoB,WAApB,IAAmCT,SAAS,CAACD,CAAD,CAAT,CAAaU,IAAb,KAAoBD,SAAvD,IAAoER,SAAS,CAACD,CAAD,CAAT,CAAaU,IAAb,KAAoB,MAAxF,IAAkGT,SAAS,CAACD,CAAD,CAAT,CAAaU,IAAb,KAAoB,EAAtH,IAA4HT,SAAS,CAACD,CAAD,CAAT,CAAaU,IAAb,KAAoB,IADlJ,CAAH,EAC2J;AACnJT,QAAAA,SAAS,CAACD,CAAD,CAAT,qBACO,KAAKE,KAAL,CAAWC,eAAX,CAA2BC,MAA3B,CAAkCJ,CAAlC,CADP;AAGA,aAAKW,QAAL,CAAc,CAACC,EAAD,EAAIC,EAAJ,KAAS;AACnB,iBAAO;AACHV,YAAAA,eAAe,oBACRS,EAAE,CAACT,eADK;AAEXC,cAAAA,MAAM,EAACH;AAFI;AADZ,WAAP;AAMH,SAPD;AAQP;;AACD,WAAKU,QAAL,CAAc,CAACC,EAAD,EAAIC,EAAJ,KAAS;AACnB,eAAO;AACHV,UAAAA,eAAe,oBACRS,EAAE,CAACT,eADK;AAEXC,YAAAA,MAAM,EAACH;AAFI;AADZ,SAAP;AAMH,OAPD;AAQH,KA5CiB;;AAAA,SAwElBa,qBAxEkB,GAwEM,CAACC,CAAD,EAAGf,CAAH,KAAO;AAC3B,UAAIC,SAAS,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWC,eAAX,CAA2BC,MAA/B,CAAhB;;AACA,UAAG,CAACW,CAAJ,EAAM;AACF,eAAOd,SAAS,CAACD,CAAD,CAAT,CAAaQ,KAApB;AACAP,QAAAA,SAAS,CAACD,CAAD,CAAT,CAAaQ,KAAb,GAAmB,IAAnB;AACH,OAHD,MAII;AACAP,QAAAA,SAAS,CAACD,CAAD,CAAT,qBACO,KAAKE,KAAL,CAAWC,eAAX,CAA2BC,MAA3B,CAAkCJ,CAAlC,CADP;AAEIQ,UAAAA,KAAK,YAAKrB,IAAI,CAAC6B,IAAV,cAAkBD,CAAC,CAACE,IAApB;AAFT;AAIH;;AACD,WAAKN,QAAL,CAAc;AACVO,QAAAA,cAAc,EAAC;AADL,OAAd;;AAGA,UAAG,CAACjB,SAAS,CAACD,CAAD,CAAT,CAAaQ,KAAb,KAAqB,WAArB,IAAoCP,SAAS,CAACD,CAAD,CAAT,CAAaQ,KAAb,KAAqBC,SAAzD,IAAsER,SAAS,CAACD,CAAD,CAAT,CAAaQ,KAAb,KAAqB,IAA3F,IAAmGP,SAAS,CAACD,CAAD,CAAT,CAAaQ,KAAb,KAAqB,MAAzH,MACEP,SAAS,CAACD,CAAD,CAAT,CAAaK,SAAb,KAAyB,WAAzB,IAAwCJ,SAAS,CAACD,CAAD,CAAT,CAAaK,SAAb,KAAyBI,SAAjE,IAA8ER,SAAS,CAACD,CAAD,CAAT,CAAaK,SAAb,KAAyB,MAAvG,IAAiHJ,SAAS,CAACD,CAAD,CAAT,CAAaK,SAAb,KAAyB,EAA1I,IAAgJJ,SAAS,CAACD,CAAD,CAAT,CAAaK,SAAb,KAAyB,IAD3K,CAAH,EACoL;AAC5KJ,QAAAA,SAAS,CAACD,CAAD,CAAT,qBACO,KAAKE,KAAL,CAAWC,eAAX,CAA2BC,MAA3B,CAAkCJ,CAAlC,CADP;AAGP;;AACD,WAAKW,QAAL,CAAc,CAACC,EAAD,EAAIC,EAAJ,KAAS;AACnB,eAAO;AACHV,UAAAA,eAAe,oBACRS,EAAE,CAACT,eADK;AAEXC,YAAAA,MAAM,EAACH;AAFI;AADZ,SAAP;AAMH,OAPD;AAQH,KArGiB;;AAAA,SA2IlBkB,YA3IkB,GA2IHpB,CAAC,IAAI;AAChBA,MAAAA,CAAC,CAACqB,cAAF;AACA,WAAKvB,KAAL,CAAWwB,IAAX,CAAgBC,uBAAhB,CAAwC,CAACC,GAAD,EAAMC,MAAN,KAAiB;AACrDC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,YAAI,CAACD,GAAL,EAAU;AACNR,UAAAA,CAAC,GAAG,CAAJ;AACA,cAAIY,EAAE,GAAC,EAAP;AACAF,UAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CF,MAA3C;AACA,eAAKtB,KAAL,CAAWC,eAAX,CAA2BC,MAA3B,CAAkCwB,OAAlC,CAA0C,CAACC,OAAD,EAAS7B,CAAT,KAAe;AACrD2B,YAAAA,EAAE,CAACG,IAAH,CAAQ;AACJzB,cAAAA,SAAS,EAACwB,OAAO,CAACxB,SADd;AAEJG,cAAAA,KAAK,EAACqB,OAAO,CAACrB;AAFV,aAAR;;AAIA,gBAAG,CAACqB,OAAO,CAACrB,KAAR,KAAgB,WAAhB,IAA+BqB,OAAO,CAACrB,KAAR,KAAgBC,SAA/C,IAA4DoB,OAAO,CAACrB,KAAR,KAAgB,IAA5E,IAAoFqB,OAAO,CAACrB,KAAR,KAAgB,MAArG,MAA+GqB,OAAO,CAACnB,IAAR,KAAe,EAAf,IAAoBmB,OAAO,CAACnB,IAAR,KAAe,IAAnC,IAA2CmB,OAAO,CAACnB,IAAR,KAAe,MAA1D,IAAoEmB,OAAO,CAACnB,IAAR,KAAe,WAAnF,IAAkGmB,OAAO,CAACnB,IAAR,KAAeD,SAAhO,CAAH,EAA+O;AAC3OM,cAAAA,CAAC,GAAC,CAAF;AACH;AACJ,WARD,EAJM,CAaN;AACA;AACA;AACH;AACJ,OAnBD;AAoBH,KAjKiB;;AAAA,SAmKlBgB,YAnKkB,GAmKFhB,CAAD,IAAK;AAChB,WAAKJ,QAAL,CAAc,CAACC,EAAD,EAAIC,EAAJ,KAAS;AACnB,eAAO;AACHV,UAAAA,eAAe,oBACRS,EAAE,CAACT,eADK;AAEX6B,YAAAA,aAAa,EAAEjB,CAAC,CAACE,IAAF,aAAW9B,IAAI,CAAC6B,IAAhB,cAAwBD,CAAC,CAACE,IAA1B,IAAiC;AAFrC,YADZ;AAKHC,UAAAA,cAAc,EAAC;AALZ,SAAP;AAOH,OARD;AASH,KA7KiB;;AAAA,SA8KlBe,GA9KkB,GA8Kd,MAAI;AACJ,WAAKtB,QAAL,CAAc;AACVO,QAAAA,cAAc,EAAE;AADN,OAAd;AAGH,KAlLiB;;AAEd,SAAKhB,KAAL,GAAW;AACPC,MAAAA,eAAe,EAAG;AACd;AACAC,QAAAA,MAAM,EAAE,CACJ;AACIC,UAAAA,SAAS,EAAG,IADhB;AAEIG,UAAAA,KAAK,EAAE;AAFX,SADI;AAFM,OADX;AAUPU,MAAAA,cAAc,EAAC;AAVR,KAAX;AAYH;;AAuKDgB,EAAAA,MAAM,GAAG;AAAA,UACGC,iBADH,GACyB,KAAKtC,KAAL,CAAWwB,IADpC,CACGc,iBADH;AAAA,UAEGlD,QAFH,GAEgBP,KAFhB,CAEGO,QAFH;AAGL,QAAImD,kBAAkB,GAAC;AACnBC,MAAAA,IAAI,EAAE,MADa;AAEnBC,MAAAA,MAAM,YAAKnD,IAAI,CAAC6B,IAAV,SAAiB7B,IAAI,CAACoD,WAAtB,oBAA2C9C,IAAI,CAAC+C,YAAL,EAA3C,CAFa;AAGnBC,MAAAA,QAAQ,EAAE;AAHS,KAAvB;AAMA,WACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKtB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,kDAAjB;AAA4B,MAAA,WAAW,MAAvC;AAAwC,MAAA,SAAS,EAAC,qBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKgB,iBAAiB,CAAC,OAAD,EAAU;AACxBO,MAAAA,YAAY,EAAG,KAAK7C,KAAL,CAAW8C,OAAX,CAAmBC,eAAnB,CAAmCC,KAD1B;AAExBC,MAAAA,KAAK,EAAE,CAAC;AAAEC,QAAAA,QAAQ,EAAE,IAAZ;AAAkBC,QAAAA,OAAO,EAAE,+BAA3B;AAA4DC,QAAAA,UAAU,EAAE;AAAxE,OAAD;AAFiB,KAAV,CAAjB,CAGE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADL,CADJ,EAsBI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,EAAC;AAAZ,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEY,KAAKhD,KAAL,CAAWC,eAAX,CAA2BC,MAA3B,CAAkC+C,GAAlC,CAAsC,CAACC,MAAD,EAAQpD,CAAR,KAAY;AAC9C,aACI,oBAAC,GAAD;AAAK,QAAA,GAAG,EAAEA,CAAV;AAAa,QAAA,SAAS,EAAC,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,MAAM,EAAE,CAAb;AAAgB,QAAA,IAAI,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,kBAAWA,CAAC,GAAC,CAAb,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWC,eAAX,CAA2BC,MAA3B,CAAkCJ,CAAlC,EAAqCK,SAAtD;AAAiE,QAAA,QAAQ,EAAIN,CAAD,IAAK,KAAKD,kBAAL,CAAwBC,CAAxB,EAA0BC,CAA1B,CAAjF;AAA+G,QAAA,IAAI,EAAE,CAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ,EAMI,oBAAC,GAAD;AAAK,QAAA,MAAM,EAAE,CAAb;AAAgB,QAAA,IAAI,EAAE,CAAtB;AAAyB,QAAA,KAAK,EAAE;AAACqD,UAAAA,SAAS,EAAC;AAAX,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,kBAAWrD,CAAC,GAAC,CAAb,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD,oBAAYoC,kBAAZ;AAAgC,QAAA,YAAY,EAAE,KAAKH,GAAnD;AAAwD,QAAA,QAAQ,EAAGlB,CAAD,IAAK,KAAKD,qBAAL,CAA2B,IAA3B,EAAgCd,CAAhC,CAAvE;AAA2G,QAAA,SAAS,EAAGe,CAAD,IAAK,KAAKD,qBAAL,CAA2BC,CAA3B,EAA6Bf,CAA7B,CAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,4DADJ,CADJ,CADJ,CANJ,CADJ;AAkBH,KAnBD,CAFZ,CAtBJ,EAiDI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AAAyC,MAAA,KAAK,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKH,KAAL,CAAW8C,OAAX,CAAmBW,YADxB,CADJ,CAjDJ,CADJ,CADJ,CADJ;AA6DH;;AA7P+B;;AAgQpC,MAAMC,eAAe,GAAGrD,KAAK,KAAK;AAC9ByC,EAAAA,OAAO,EAAGzC,KAAK,CAACyC;AADc,CAAL,CAA7B;;AAMA,MAAMa,eAAe,GAAG/E,IAAI,CAACgF,MAAL,CAAY;AAAEpB,EAAAA,IAAI,EAAE;AAAR,CAAZ,EAAkC1C,WAAlC,CAAxB;AAEA,eAAeP,OAAO,CAACmE,eAAD,EAAiB;AACnClE,EAAAA,0BADmC;AAEnCC,EAAAA,wBAFmC;AAGnCC,EAAAA;AAHmC,CAAjB,CAAP,CAIZiE,eAJY,CAAf","sourcesContent":["import React, { Component, useState } from 'react'\r\nimport '../newCompany/newcompany.css';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Select,\r\n    Icon,\r\n    Upload,\r\n    Row,\r\n    Col,\r\n    TextArea\r\n} from 'antd';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    ChangeMaterialConfirmDirty,\r\n    ChangeMaterialModalState,\r\n    ChangeMaterialTableData\r\n} from '../../../actions/chapterAction';\r\nimport Alert from '../../../components/common/alert';\r\nimport auth from '../../../services/AuthServices';\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nclass NewMaterial extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            materialDetails : {\r\n                //materialimage: this.props.chapter.materialdetails.slides,\r\n                slides :[\r\n                    {\r\n                        slidebody : null,\r\n                        image :null,\r\n                    },\r\n                ], \r\n            },\r\n            submitDisabled:false,\r\n        }\r\n    }\r\n\r\n    MaterialTextChange =(e,i)=>{\r\n        var newSlides = [...this.state.materialDetails.slides]\r\n        newSlides[i]={\r\n            ...this.state.materialDetails.slides[i],\r\n            slidebody : e.target.value\r\n        }\r\n        if((newSlides[i].image==='undefined' || newSlides[i].image===undefined || newSlides[i].image===null || newSlides[i].image==='null') && \r\n            (newSlides[i].body==='undefined' || newSlides[i].body===undefined || newSlides[i].body==='null' || newSlides[i].body==='' || newSlides[i].body===null)){\r\n                newSlides[i]={\r\n                    ...this.state.materialDetails.slides[i],\r\n                }\r\n                this.setState((ps,pp)=>{\r\n                    return({\r\n                        materialDetails:{\r\n                            ...ps.materialDetails,\r\n                            slides:newSlides\r\n                        }\r\n                    })\r\n                })\r\n        }\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                materialDetails:{\r\n                    ...ps.materialDetails,\r\n                    slides:newSlides\r\n                }\r\n            })\r\n        })     \r\n    }\r\n\r\n    // MaterialImageonChange = (f)=>{\r\n    //     var newslide = this.state.materialDetails.materialimage\r\n    //     if(!f){\r\n    //         newslide=null\r\n    //     }\r\n    //     else{\r\n    //         newslide=`${apis.BASE}/${f.link}`\r\n    //     }\r\n    //     this.setState({\r\n    //         submitDisabled:false\r\n    //     })\r\n    //     if(newslide==='undefined' || newslide===undefined || newslide===null || newslide==='null') {\r\n    //         //(newOptions[i].body==='undefined' || newOptions[i].body===undefined || newOptions[i].body==='null' || newOptions[i].body==='' || newOptions[i].body===null)){\r\n    //         newslide=this.state.materialDetails.materialimage;    \r\n    //     }\r\n    //     this.setState((ps,pp)=>{\r\n    //         return({\r\n    //             materialDetails:{\r\n    //                 ...ps.materialDetails,\r\n    //                 materialimage:newslide\r\n    //             }\r\n    //         })\r\n    //     })\r\n    // }\r\n\r\n\r\n    MaterialImageonChange = (f,i)=>{\r\n        var newSlides = [...this.state.materialDetails.slides]\r\n        if(!f){\r\n            delete newSlides[i].image\r\n            newSlides[i].image=null\r\n        }\r\n        else{\r\n            newSlides[i]={\r\n                ...this.state.materialDetails.slides[i],\r\n                image :`${apis.BASE}/${f.link}`\r\n            }\r\n        }\r\n        this.setState({\r\n            submitDisabled:false\r\n        })\r\n        if((newSlides[i].image==='undefined' || newSlides[i].image===undefined || newSlides[i].image===null || newSlides[i].image==='null') && \r\n            (newSlides[i].slidebody==='undefined' || newSlides[i].slidebody===undefined || newSlides[i].slidebody==='null' || newSlides[i].slidebody==='' || newSlides[i].slidebody===null)){\r\n                newSlides[i]={\r\n                    ...this.state.materialDetails.slides[i],\r\n                }\r\n        }\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                materialDetails:{\r\n                    ...ps.materialDetails,\r\n                    slides:newSlides\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    \r\n    // handleSubmit = e => {\r\n    //     e.preventDefault();\r\n    //     this.props.form.validateFieldsAndScroll((err, values) => {\r\n    //         if (!err) {\r\n    //             console.log('Полученные значения формы: ', values);\r\n                \r\n    //                 SecurePost({\r\n    //                     url : `${apis.CREATE_MATERIAL}`,\r\n    //                     data : {\r\n    //                         _id : this.props.chapter.materialId,\r\n    //                         topic :values.topic,\r\n    //                         slides : this.state.materialDetails.materialimage,\r\n    //                     }\r\n    //                 }).then((response)=>{\r\n    //                     if(response.data.success){\r\n    //                         this.props.ChangeMaterialModalState(false,null,'Регистрация');\r\n    //                         Alert('success','Успешно',response.data.message);\r\n    //                         this.props.ChangeMaterialTableData();\r\n    //                     }\r\n    //                     else{\r\n    //                         console.log(response.data);\r\n    //                         this.props.ChangeMaterialModalState(false,null,'Регистрация');\r\n    //                         return Alert('warning','Предупреждение!',response.data.message);\r\n    //                     }\r\n    //                 }).catch((error)=>{\r\n    //                     this.props.ChangeMaterialModalState(false,null,'Регистрация');\r\n    //                     return Alert('error','Ошибка!','Ошибка сервера');\r\n    //                 })\r\n                \r\n    //         }\r\n    //     });\r\n    // };\r\n\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            console.log(values);\r\n            if (!err) {\r\n                f = 1;\r\n                var sl=[]\r\n                console.log('Полученные значения формы: ', values);\r\n                this.state.materialDetails.slides.forEach((element,i) => {\r\n                    sl.push({\r\n                        slidebody:element.slidebody,\r\n                        image:element.image,\r\n                    });\r\n                    if((element.image==='undefined' || element.image===undefined || element.image===null || element.image==='null')&&(element.body==='' ||element.body===null || element.body==='null' || element.body==='undefined' || element.body===undefined )){\r\n                        f=0;\r\n                    }\r\n                })\r\n                // else{\r\n                //     Alert('warning','Предупреждение!','Пожалуйста, заполните все варианты');\r\n                // }\r\n            }\r\n        });\r\n    };\r\n\r\n    changeqImage = (f)=>{\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                materialDetails:{\r\n                    ...ps.materialDetails,\r\n                    materialimage:(f.link ?`${apis.BASE}/${f.link}`:null)\r\n                },\r\n                submitDisabled:false\r\n            })\r\n        })\r\n    }\r\n    upl=()=>{\r\n        this.setState({\r\n            submitDisabled: false\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const { TextArea } = Input;\r\n        var MaterialImageprops={\r\n            name: 'file',\r\n            action: `${apis.BASE}${apis.FILE_UPLOAD}?Token=${auth.retriveToken()}`,\r\n            listType: 'picture',\r\n        }\r\n        \r\n        return (\r\n            <div className=\"register-company-form\">\r\n                <div className=\"register-company-form-body\">\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <Form.Item label=\"Название\" hasFeedback className=\"input-admin-company\">\r\n                            {getFieldDecorator('topic', {\r\n                                initialValue : this.props.chapter.materialdetails.topic,\r\n                                rules: [{ required: true, message: 'Пожалуйста, введите название!', whitespace: true }],\r\n                            })(<Input />)}\r\n                        </Form.Item>\r\n                        \r\n                        {/* <Form.Item label=\"Material\">\r\n                        <Upload {...MaterialImageprops} beforeUpload={this.upl} onRemove={(f)=>this.MaterialImageonChange(null)} onSuccess={(f)=>this.MaterialImageonChange(f)}>\r\n                                {getFieldDecorator('slides', {\r\n                                    initialValue : this.props.chapter.materialdetails.slides,\r\n                                    rules: [{ required: false, message: 'Пожалуйста, загрузите логотип вашей компании!', whitespace: true }],\r\n                                })(<img src={this.props.chapter.materialdetails.slides} style={{width: \"60px\",height: \"60px\",}}/>)\r\n                                }\r\n                                \r\n                                <Button style={{marginLeft: '100px'}}>\r\n                                    <Icon type=\"upload\" /> Загрузить\r\n                                </Button>\r\n                                \r\n                            </Upload>\r\n                        </Form.Item> */}\r\n                        <div style={{paddingTop:'20px'}}>\r\n                                {\r\n                                    this.state.materialDetails.slides.map((option,i)=>{\r\n                                        return(\r\n                                            <Row key={i} className=\"\">\r\n                                                <Col offset={1} span={13}>\r\n                                                    <Form.Item label={`option${i+1}`}>\r\n                                                        <TextArea value={this.state.materialDetails.slides[i].slidebody} onChange={ (e)=>this.MaterialTextChange(e,i)} rows={3} />\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n                                                <Col offset={2} span={6} style={{textAlign:'center'}}>\r\n                                                    <Form.Item label={`Option${i+1} Image`}>\r\n                                                        <Upload {...MaterialImageprops} beforeUpload={this.upl} onRemove={(f)=>this.MaterialImageonChange(null,i)} onSuccess={(f)=>this.MaterialImageonChange(f,i)}>\r\n                                                            <Button>\r\n                                                                <Icon type=\"upload\" /> Загрузить\r\n                                                            </Button>\r\n                                                        </Upload>\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n                                            </Row>                                                \r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n\r\n\r\n                        \r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                {this.props.chapter.Materialmode}\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    chapter : state.chapter\r\n});\r\n\r\n\r\n\r\nconst NewMaterialForm = Form.create({ name: 'register' })(NewMaterial);\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeMaterialConfirmDirty,\r\n    ChangeMaterialModalState,\r\n    ChangeMaterialTableData\r\n})(NewMaterialForm);\r\n\r\n"]},"metadata":{},"sourceType":"module"}