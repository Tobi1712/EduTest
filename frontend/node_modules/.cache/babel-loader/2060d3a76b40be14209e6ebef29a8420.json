{"ast":null,"code":"import _objectSpread from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\admin\\\\Company\\\\newcompany.js\";\nimport React, { Component } from 'react';\nimport './newcompany.css';\nimport { Form, Input, Button, //Select,\nIcon, Upload } from 'antd';\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport { connect } from 'react-redux';\nimport { ChangeCompanyConfirmDirty, ChangeCompanyModalState, ChangeCompanyTableData } from '../../../actions/adminAction';\nimport Alert from '../../../components/common/alert';\nimport auth from '../../../services/AuthServices'; // const { Option } = Select;\n\nclass NewCompany extends Component {\n  constructor(props) {\n    super(props);\n\n    this.CompanyImageonChange = f => {\n      var newCompimg = this.state.companyDetails.companyimage;\n\n      if (!f) {\n        newCompimg = null;\n      } else {\n        newCompimg = \"\".concat(apis.BASE, \"/\").concat(f.link);\n      }\n\n      this.setState({\n        submitDisabled: false\n      });\n\n      if (newCompimg === 'undefined' || newCompimg === undefined || newCompimg === null || newCompimg === 'null') {\n        //(newOptions[i].body==='undefined' || newOptions[i].body===undefined || newOptions[i].body==='null' || newOptions[i].body==='' || newOptions[i].body===null)){\n        newCompimg = this.state.companyDetails.companyimage;\n      }\n\n      this.setState((ps, pp) => {\n        return {\n          companyDetails: _objectSpread({}, ps.companyDetails, {\n            companyimage: newCompimg\n          })\n        };\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          console.log('Полученные значения формы: ', values);\n          SecurePost({\n            url: \"\".concat(apis.CREATE_COMPANY),\n            data: {\n              _id: this.props.admin.companyId,\n              name: values.name,\n              logo: this.state.companyDetails.companyimage,\n              descr: values.descr,\n              licFromDate: values.licFromDate,\n              licToDate: values.licToDate,\n              numOfLic: values.numOfLic,\n              numOfLicAcc: values.numOfLicAcc,\n              contact: values.contact\n            }\n          }).then(response => {\n            if (response.data.success) {\n              this.props.ChangeCompanyModalState(false, null, 'Регистрация');\n              Alert('success', 'Успешно', response.data.message);\n              this.props.ChangeCompanyTableData();\n            } else {\n              console.log(response.data);\n              this.props.ChangeCompanyModalState(false, null, 'Регистрация');\n              return Alert('warning', 'Предупреждение!', response.data.message);\n            }\n          }).catch(error => {\n            this.props.ChangeCompanyModalState(false, null, 'Регистрация');\n            return Alert('error', 'Ошибка!', 'Ошибка сервера');\n          });\n        }\n      });\n    };\n\n    this.changeqImage = f => {\n      this.setState((ps, pp) => {\n        return {\n          companyDetails: _objectSpread({}, ps.companyDetails, {\n            companyimage: f.link ? \"\".concat(apis.BASE, \"/\").concat(f.link) : null\n          }),\n          submitDisabled: false\n        };\n      });\n    };\n\n    this.upl = () => {\n      this.setState({\n        submitDisabled: false\n      });\n    };\n\n    this.state = {\n      companyDetails: {\n        companyimage: this.props.admin.companydetails.logo\n      },\n      submitDisabled: false\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    var CompanyImageprops = {\n      name: 'file',\n      action: \"\".concat(apis.BASE).concat(apis.FILE_UPLOAD, \"?Token=\").concat(auth.retriveToken()),\n      listType: 'picture'\n    };\n    return React.createElement(\"div\", {\n      className: \"register-company-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"register-company-form-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n      hasFeedback: true,\n      className: \"input-admin-company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, getFieldDecorator('name', {\n      initialValue: this.props.admin.companydetails.name,\n      rules: [{\n        required: false,\n        message: 'Пожалуйста, введите название вашей компании!',\n        whitespace: true\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"\\u041B\\u043E\\u0433\\u043E\\u0442\\u0438\\u043F\",\n      className: \"input-admin-company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Upload, Object.assign({}, CompanyImageprops, {\n      beforeUpload: this.upl,\n      onRemove: f => this.CompanyImageonChange(null),\n      onSuccess: f => this.CompanyImageonChange(f),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), getFieldDecorator('logo', {\n      initialValue: this.props.admin.companydetails.logo,\n      rules: [{\n        required: false,\n        message: 'Пожалуйста, загрузите логотип вашей компании!',\n        whitespace: true\n      }]\n    })(React.createElement(\"img\", {\n      src: this.props.admin.companydetails.logo,\n      style: {\n        height: \"60px\"\n      },\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), React.createElement(Button, {\n      style: {\n        marginLeft: '100px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), \" \\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C\"))), React.createElement(Form.Item, {\n      label: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",\n      hasFeedback: true,\n      className: \"input-admin-company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, getFieldDecorator('descr', {\n      initialValue: this.props.admin.companydetails.descr,\n      rules: [{\n        required: false,\n        message: 'Описание!',\n        whitespace: true\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"\\u0414\\u0430\\u0442\\u0430 \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430 \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044F \\u043B\\u0438\\u0446\\u0435\\u043D\\u0437\\u0438\\u0438\",\n      hasFeedback: true,\n      className: \"input-admin-company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, getFieldDecorator('licFromDate', {\n      initialValue: this.props.admin.companydetails.licFromDate,\n      rules: [{\n        required: false,\n        message: 'Пожалуйста, выберите дату!',\n        whitespace: true\n      }]\n    })(React.createElement(Input, {\n      type: \"Date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"\\u0421\\u0440\\u043E\\u043A \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044F \\u043B\\u0438\\u0446\\u0435\\u043D\\u0437\\u0438\\u0438\",\n      hasFeedback: true,\n      className: \"input-admin-company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, getFieldDecorator('licToDate', {\n      initialValue: this.props.admin.companydetails.licToDate,\n      rules: [{\n        required: false,\n        message: 'Пожалуйста, выберите дату!',\n        whitespace: true\n      }]\n    })(React.createElement(Input, {\n      type: \"Date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043B\\u0438\\u0446\\u0435\\u043D\\u0437\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439\",\n      hasFeedback: true,\n      className: \"input-admin-company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, getFieldDecorator('numOfLic', {\n      initialValue: this.props.admin.companydetails.numOfLic,\n      rules: [{\n        required: false,\n        message: 'Пожалуйста, введите количество!',\n        whitespace: true\n      }]\n    })(React.createElement(Input, {\n      type: \"Number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0443\\u0447\\u0435\\u0442\\u043D\\u044B\\u0445 \\u0437\\u0430\\u043F\\u0438\\u0441\\u0435\\u0439, \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u0443\\u0435\\u043C\\u044B\\u0445 \\u0432 \\u0441\\u043E\\u043E\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0438\\u0438 \\u0441 \\u043B\\u0438\\u0446\\u0435\\u043D\\u0437\\u0438\\u0435\\u0439\",\n      hasFeedback: true,\n      className: \"input-admin-company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, getFieldDecorator('numOfLicAcc', {\n      initialValue: this.props.admin.companydetails.numOfLicAcc,\n      rules: [{\n        required: false,\n        message: 'Пожалуйста, введите количество!',\n        whitespace: true\n      }]\n    })(React.createElement(Input, {\n      type: \"Number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"\\u041A\\u043E\\u043D\\u0442\\u0430\\u043A\\u0442\\u043D\\u043E\\u0435 \\u043B\\u0438\\u0446\\u043E\",\n      hasFeedback: true,\n      className: \"input-admin-company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, getFieldDecorator('contact', {\n      initialValue: this.props.admin.companydetails.contact,\n      rules: [{\n        required: false,\n        message: 'Пожалуйста, введите контактное лицо!',\n        whitespace: true\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, this.props.admin.Companymode)))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  admin: state.admin\n});\n\nconst NewCompanyForm = Form.create({\n  name: 'register'\n})(NewCompany);\nexport default connect(mapStateToProps, {\n  ChangeCompanyConfirmDirty,\n  ChangeCompanyModalState,\n  ChangeCompanyTableData\n})(NewCompanyForm);","map":{"version":3,"sources":["C:\\React_project\\EduTest\\frontend\\src\\components\\admin\\Company\\newcompany.js"],"names":["React","Component","Form","Input","Button","Icon","Upload","SecurePost","apis","connect","ChangeCompanyConfirmDirty","ChangeCompanyModalState","ChangeCompanyTableData","Alert","auth","NewCompany","constructor","props","CompanyImageonChange","f","newCompimg","state","companyDetails","companyimage","BASE","link","setState","submitDisabled","undefined","ps","pp","handleSubmit","e","preventDefault","form","validateFieldsAndScroll","err","values","console","log","url","CREATE_COMPANY","data","_id","admin","companyId","name","logo","descr","licFromDate","licToDate","numOfLic","numOfLicAcc","contact","then","response","success","message","catch","error","changeqImage","upl","companydetails","render","getFieldDecorator","CompanyImageprops","action","FILE_UPLOAD","retriveToken","listType","initialValue","rules","required","whitespace","height","marginLeft","Companymode","mapStateToProps","NewCompanyForm","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport './newcompany.css';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    //Select,\r\n    Icon,\r\n    Upload\r\n} from 'antd';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    ChangeCompanyConfirmDirty,\r\n    ChangeCompanyModalState,\r\n    ChangeCompanyTableData\r\n} from '../../../actions/adminAction';\r\nimport Alert from '../../../components/common/alert';\r\nimport auth from '../../../services/AuthServices';\r\n// const { Option } = Select;\r\nclass NewCompany extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            companyDetails : {\r\n            companyimage: this.props.admin.companydetails.logo,},\r\n            submitDisabled:false,\r\n        }\r\n    }\r\n\r\n    CompanyImageonChange = (f)=>{\r\n        var newCompimg = this.state.companyDetails.companyimage\r\n        if(!f){\r\n            newCompimg=null\r\n        }\r\n        else{\r\n            newCompimg=`${apis.BASE}/${f.link}`\r\n        }\r\n        this.setState({\r\n            submitDisabled:false\r\n        })\r\n        if(newCompimg==='undefined' || newCompimg===undefined || newCompimg===null || newCompimg==='null') {\r\n            //(newOptions[i].body==='undefined' || newOptions[i].body===undefined || newOptions[i].body==='null' || newOptions[i].body==='' || newOptions[i].body===null)){\r\n                newCompimg=this.state.companyDetails.companyimage;    \r\n        }\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                companyDetails:{\r\n                    ...ps.companyDetails,\r\n                    companyimage:newCompimg\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    \r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                console.log('Полученные значения формы: ', values);\r\n                \r\n                    SecurePost({\r\n                        url : `${apis.CREATE_COMPANY}`,\r\n                        data : {\r\n                            _id : this.props.admin.companyId,\r\n                            name :values.name,\r\n                            logo : this.state.companyDetails.companyimage,\r\n                            descr : values.descr,\r\n                            licFromDate: values.licFromDate,\r\n                            licToDate :values.licToDate,\r\n                            numOfLic : values.numOfLic,\r\n                            numOfLicAcc : values.numOfLicAcc,\r\n                            contact : values.contact,\r\n                        }\r\n                    }).then((response)=>{\r\n                        if(response.data.success){\r\n                            this.props.ChangeCompanyModalState(false,null,'Регистрация');\r\n                            Alert('success','Успешно',response.data.message);\r\n                            this.props.ChangeCompanyTableData();\r\n                        }\r\n                        else{\r\n                            console.log(response.data);\r\n                            this.props.ChangeCompanyModalState(false,null,'Регистрация');\r\n                            return Alert('warning','Предупреждение!',response.data.message);\r\n                        }\r\n                    }).catch((error)=>{\r\n                        this.props.ChangeCompanyModalState(false,null,'Регистрация');\r\n                        return Alert('error','Ошибка!','Ошибка сервера');\r\n                    })\r\n                \r\n            }\r\n        });\r\n    };\r\n\r\n    changeqImage = (f)=>{\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                companyDetails:{\r\n                    ...ps.companyDetails,\r\n                    companyimage:(f.link ?`${apis.BASE}/${f.link}`:null)\r\n                },\r\n                submitDisabled:false\r\n            })\r\n        })\r\n    }\r\n    upl=()=>{\r\n        this.setState({\r\n            submitDisabled: false\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        var CompanyImageprops={\r\n            name: 'file',\r\n            action: `${apis.BASE}${apis.FILE_UPLOAD}?Token=${auth.retriveToken()}`,\r\n            listType: 'picture',\r\n        }\r\n        \r\n        return (\r\n            <div className=\"register-company-form\">\r\n                <div className=\"register-company-form-body\">\r\n                    <Form  onSubmit={this.handleSubmit}>\r\n                        <Form.Item label=\"Название\" hasFeedback className=\"input-admin-company\">\r\n                            {getFieldDecorator('name', {\r\n                                initialValue : this.props.admin.companydetails.name,\r\n                                rules: [{ required: false, message: 'Пожалуйста, введите название вашей компании!', whitespace: true }],\r\n                            })(<Input />)}\r\n                        </Form.Item>\r\n                        \r\n                        <Form.Item label=\"Логотип\" className=\"input-admin-company\">\r\n                        <Upload {...CompanyImageprops} beforeUpload={this.upl} onRemove={(f)=>this.CompanyImageonChange(null)} onSuccess={(f)=>this.CompanyImageonChange(f)}>\r\n                                {getFieldDecorator('logo', {\r\n                                    initialValue : this.props.admin.companydetails.logo,\r\n                                    rules: [{ required: false, message: 'Пожалуйста, загрузите логотип вашей компании!', whitespace: true }],\r\n                                })(<img src={this.props.admin.companydetails.logo} style={{height: \"60px\",}} alt=\"\"/>)\r\n                                }\r\n                                \r\n                                <Button style={{marginLeft: '100px'}}>\r\n                                    <Icon type=\"upload\" /> Загрузить\r\n                                </Button>\r\n                                \r\n                            </Upload>\r\n                        </Form.Item>\r\n\r\n                    \r\n                        <Form.Item label=\"Описание\" hasFeedback className=\"input-admin-company\">\r\n                            {getFieldDecorator('descr', {\r\n                                initialValue : this.props.admin.companydetails.descr,\r\n                                rules: [{ required: false, message: 'Описание!', whitespace: true }],\r\n                            })(<Input />)}\r\n                        </Form.Item> \r\n\r\n                        <Form.Item label=\"Дата начала действия лицензии\" hasFeedback className=\"input-admin-company\">\r\n                            {getFieldDecorator('licFromDate', {\r\n                                initialValue : this.props.admin.companydetails.licFromDate,\r\n                                rules: [{ required: false, message: 'Пожалуйста, выберите дату!', whitespace: true }],\r\n                            })(<Input type='Date'/>)}\r\n                        </Form.Item> \r\n                        <Form.Item label=\"Срок действия лицензии\" hasFeedback className=\"input-admin-company\">\r\n                            {getFieldDecorator('licToDate', {\r\n                                initialValue : this.props.admin.companydetails.licToDate,\r\n                                rules: [{ required: false, message: 'Пожалуйста, выберите дату!', whitespace: true }],\r\n                            })(<Input type='Date'/>)}\r\n                        </Form.Item> \r\n                        <Form.Item label=\"Количество лицензированных пользователей\" hasFeedback className=\"input-admin-company\">\r\n                            {getFieldDecorator('numOfLic', {\r\n                                initialValue : this.props.admin.companydetails.numOfLic,\r\n                                rules: [{ required: false, message: 'Пожалуйста, введите количество!', whitespace: true }],\r\n                            })(<Input type='Number'/>)}\r\n                        </Form.Item> \r\n                        <Form.Item label=\"Количество учетных записей, используемых в соответствии с лицензией\" hasFeedback className=\"input-admin-company\">\r\n                            {getFieldDecorator('numOfLicAcc', {\r\n                                initialValue : this.props.admin.companydetails.numOfLicAcc,\r\n                                rules: [{ required: false, message: 'Пожалуйста, введите количество!', whitespace: true }],\r\n                            })(<Input type='Number'/>)}\r\n                        </Form.Item> \r\n                        <Form.Item label=\"Контактное лицо\" hasFeedback className=\"input-admin-company\">\r\n                            {getFieldDecorator('contact', {\r\n                                initialValue : this.props.admin.companydetails.contact,\r\n                                rules: [{ required: false, message: 'Пожалуйста, введите контактное лицо!', whitespace: true }],\r\n                            })(<Input />)}\r\n                        </Form.Item> \r\n                        \r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                {this.props.admin.Companymode}\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin : state.admin\r\n});\r\n\r\n\r\n\r\nconst NewCompanyForm = Form.create({ name: 'register' })(NewCompany);\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeCompanyConfirmDirty,\r\n    ChangeCompanyModalState,\r\n    ChangeCompanyTableData\r\n})(NewCompanyForm);\r\n\r\n"]},"metadata":{},"sourceType":"module"}