{"ast":null,"code":"var _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\customer\\\\Testing\\\\result.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { ChangeAnswersSearchText, ChangeAnswersTableData } from '../../../actions/chapterAction';\nimport Result1 from './res';\n\nfunction Result(props) {\n  // const [result, setResult] = useState(0);\n  // console.log(props)\n  useEffect(() => {\n    props.ChangeAnswersTableData(props.mid); // console.log(\"1 - props\",props.answerDetails[0]);\n    // //var questions1=[];\n    // var nota = [];\n    // var noua = [];\n    // var s = props.answerDetails[0].chosenOption.length;\n    // props.answerDetails[0].chosenOption.map((d,i)=>{\n    //     nota[i] = (d.options[0].isAnswer + d.options[1].isAnswer + d.options[2].isAnswer + d.options[3].isAnswer + d.options[4].isAnswer)\n    //     noua[i] = ((d.options[0].userAnswer && d.options[0].isAnswer) + \n    //                (d.options[1].userAnswer && d.options[1].isAnswer) + \n    //                (d.options[2].userAnswer && d.options[2].isAnswer) + \n    //                (d.options[3].userAnswer && d.options[3].isAnswer) + \n    //                (d.options[4].userAnswer && d.options[4].isAnswer));\n    //     })\n    // console.log(\"Number of the true answer\", nota)\n    // console.log(\"Number of the user answer\", noua)\n    // var a=0;\n    // props.answerDetails[0].chosenOption.map((d,i)=>{\n    //     a+=(noua[i] / nota[i]) * 100;\n    // })\n    // setResult(a/s);\n  }, []); // const Result1=()=>{\n  //     console.log(props.chapter.AnswerTableData)\n  //     var questions1 = [];\n  //     var nota = [];\n  //     var noua = [];\n  //     var s = props.chapter.AnswerTableData[0].chosenOption.length;\n  //     props.chapter.AnswerTableData[0].chosenOption.map((d,i)=>{\n  //         nota[i] = (d.options[0].isAnswer + d.options[1].isAnswer + d.options[2].isAnswer + d.options[3].isAnswer + d.options[4].isAnswer)\n  //         noua[i] = ((d.options[0].userAnswer && d.options[0].isAnswer) + \n  //                    (d.options[1].userAnswer && d.options[1].isAnswer) + \n  //                    (d.options[2].userAnswer && d.options[2].isAnswer) + \n  //                    (d.options[3].userAnswer && d.options[3].isAnswer) + \n  //                    (d.options[4].userAnswer && d.options[4].isAnswer));\n  //         })\n  //     console.log(\"Number of the true answer\", nota)\n  //     console.log(\"Number of the user answer\", noua)\n  //     var a=0;\n  //     props.chapter.AnswerTableData[0].chosenOption.map((d,i)=>{\n  //         a+=(noua[i] / nota[i]) * 100;\n  //     })\n  //     var res;\n  //     res =a/s;\n  //     console.log(\"res\", res)\n  //     return res;\n  // }\n  // console.log('Result:',Result());\n\n  return /*#__PURE__*/React.createElement(Result1, {\n    answerDetails: props.chapter.AnswerTableData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }) // <div>\n  //     <h3>Результаты тестирование</h3>\n  //     <h3>Количество вопросов: 0</h3>\n  //     <h3>Процент правильных ответов: {Math.round(Result1())}</h3>\n  //     {/* <h3>Количество вопросов: {props.answerDetails[0].chosenOption.length}</h3>\n  //     <h3>Процент правильных ответов: {Math.round(result)}</h3> */}\n  // </div>\n  ;\n}\n\nconst mapStateToProps = state => ({\n  chapter: state.chapter\n});\n\nexport default connect(mapStateToProps, {\n  ChangeAnswersSearchText,\n  ChangeAnswersTableData\n})(Result);","map":{"version":3,"names":["React","useState","useEffect","connect","ChangeAnswersSearchText","ChangeAnswersTableData","Result1","Result","props","mid","chapter","AnswerTableData","mapStateToProps","state"],"sources":["C:/React_project/EduTest/frontend/src/components/customer/Testing/result.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    ChangeAnswersSearchText,\r\n    ChangeAnswersTableData,\r\n} from '../../../actions/chapterAction';\r\nimport Result1 from './res';\r\n\r\nfunction Result(props) {\r\n    // const [result, setResult] = useState(0);\r\n    // console.log(props)\r\n    useEffect(()=>{\r\n        props.ChangeAnswersTableData(props.mid)\r\n\r\n\r\n        // console.log(\"1 - props\",props.answerDetails[0]);\r\n        // //var questions1=[];\r\n        // var nota = [];\r\n        // var noua = [];\r\n        // var s = props.answerDetails[0].chosenOption.length;\r\n        // props.answerDetails[0].chosenOption.map((d,i)=>{\r\n        //     nota[i] = (d.options[0].isAnswer + d.options[1].isAnswer + d.options[2].isAnswer + d.options[3].isAnswer + d.options[4].isAnswer)\r\n        //     noua[i] = ((d.options[0].userAnswer && d.options[0].isAnswer) + \r\n        //                (d.options[1].userAnswer && d.options[1].isAnswer) + \r\n        //                (d.options[2].userAnswer && d.options[2].isAnswer) + \r\n        //                (d.options[3].userAnswer && d.options[3].isAnswer) + \r\n        //                (d.options[4].userAnswer && d.options[4].isAnswer));\r\n        //     })\r\n        // console.log(\"Number of the true answer\", nota)\r\n        // console.log(\"Number of the user answer\", noua)\r\n        // var a=0;\r\n        // props.answerDetails[0].chosenOption.map((d,i)=>{\r\n        //     a+=(noua[i] / nota[i]) * 100;\r\n        // })\r\n        // setResult(a/s);\r\n    }, [])\r\n\r\n\r\n    // const Result1=()=>{\r\n    //     console.log(props.chapter.AnswerTableData)\r\n    //     var questions1 = [];\r\n    //     var nota = [];\r\n    //     var noua = [];\r\n    //     var s = props.chapter.AnswerTableData[0].chosenOption.length;\r\n    //     props.chapter.AnswerTableData[0].chosenOption.map((d,i)=>{\r\n    //         nota[i] = (d.options[0].isAnswer + d.options[1].isAnswer + d.options[2].isAnswer + d.options[3].isAnswer + d.options[4].isAnswer)\r\n    //         noua[i] = ((d.options[0].userAnswer && d.options[0].isAnswer) + \r\n    //                    (d.options[1].userAnswer && d.options[1].isAnswer) + \r\n    //                    (d.options[2].userAnswer && d.options[2].isAnswer) + \r\n    //                    (d.options[3].userAnswer && d.options[3].isAnswer) + \r\n    //                    (d.options[4].userAnswer && d.options[4].isAnswer));\r\n    //         })\r\n    //     console.log(\"Number of the true answer\", nota)\r\n    //     console.log(\"Number of the user answer\", noua)\r\n    //     var a=0;\r\n    //     props.chapter.AnswerTableData[0].chosenOption.map((d,i)=>{\r\n    //         a+=(noua[i] / nota[i]) * 100;\r\n    //     })\r\n    //     var res;\r\n    //     res =a/s;\r\n    //     console.log(\"res\", res)\r\n    //     return res;\r\n        \r\n    // }\r\n    // console.log('Result:',Result());\r\n    return(\r\n        \r\n        <Result1 answerDetails={props.chapter.AnswerTableData}/>\r\n        // <div>\r\n        //     <h3>Результаты тестирование</h3>\r\n        //     <h3>Количество вопросов: 0</h3>\r\n        //     <h3>Процент правильных ответов: {Math.round(Result1())}</h3>\r\n        //     {/* <h3>Количество вопросов: {props.answerDetails[0].chosenOption.length}</h3>\r\n        //     <h3>Процент правильных ответов: {Math.round(result)}</h3> */}\r\n        // </div>\r\n        \r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    chapter : state.chapter\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeAnswersSearchText,\r\n    ChangeAnswersTableData\r\n})(Result);"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACIC,uBADJ,EAEIC,sBAFJ,QAGO,gCAHP;AAIA,OAAOC,OAAP,MAAoB,OAApB;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;EACnB;EACA;EACAN,SAAS,CAAC,MAAI;IACVM,KAAK,CAACH,sBAAN,CAA6BG,KAAK,CAACC,GAAnC,EADU,CAIV;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACH,CAxBQ,EAwBN,EAxBM,CAAT,CAHmB,CA8BnB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;;EACA,oBAEI,oBAAC,OAAD;IAAS,aAAa,EAAED,KAAK,CAACE,OAAN,CAAcC,eAAtC;IAAA;MAAA;MAAA;IAAA;IAAA;EAAA,EAFJ,CAGI;EACA;EACA;EACA;EACA;EACA;EACA;EATJ;AAYH;;AAED,MAAMC,eAAe,GAAGC,KAAK,KAAK;EAC9BH,OAAO,EAAGG,KAAK,CAACH;AADc,CAAL,CAA7B;;AAIA,eAAeP,OAAO,CAACS,eAAD,EAAiB;EACnCR,uBADmC;EAEnCC;AAFmC,CAAjB,CAAP,CAGZE,MAHY,CAAf"},"metadata":{},"sourceType":"module"}