{"ast":null,"code":"import _slicedToArray from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\customer\\\\Testing\\\\Counter.js\";\nimport React, { Component, useState, useEffect, useRef } from \"react\";\nimport { ChangeTestSearchText, ChangeTestTableData, ChangeTestModalState, ChangeMaterialSearchText, ChangeMaterialTableData, ChangeMaterialModalState } from '../../../actions/chapterAction';\nimport { connect } from 'react-redux'; // import classes from \"./Quiz.module.css\";\n\nfunction Counter(props) {\n  const Clean = useRef(null);\n\n  const _useState = useState(\"00:00:00\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        timer = _useState2[0],\n        setTimer = _useState2[1];\n\n  const getTimer = e => {\n    const total = Date.parse(e) - Date.parse(new Date());\n    const seconds = Math.floor(total / 1000 % 60);\n    const minutes = Math.floor(total / 1000 / 60 % 60);\n    const hours = Math.floor(total / 1000 / 60 / 60);\n    return {\n      total,\n      seconds,\n      minutes,\n      hours\n    };\n  };\n\n  const initialTimer = e => {\n    const _getTimer = getTimer(e),\n          total = _getTimer.total,\n          hours = _getTimer.hours,\n          minutes = _getTimer.minutes,\n          seconds = _getTimer.seconds;\n\n    if (total >= 0) {\n      setTimer(\"0\".concat(hours) + ':' + \"\".concat(minutes) + ':' + \"\".concat(seconds) // (hours > 9 ? hours : `0${hours}`).concat(\":\") +\n      //   (minutes > 9 ? minutes : `0${minutes}`).concat(\":\") +\n      //   (seconds > 9 ? seconds : `0${seconds}`)\n      );\n    }\n  };\n\n  const limparTimer = e => {\n    setTimer(\"00:00:00\");\n    if (Clean.current) clearInterval(Clean.current);\n    const id = setInterval(() => {\n      initialTimer(e);\n    }, 1000);\n    Clean.current = id;\n  };\n\n  const getLimite = () => {\n    console.log('1', props.chapter.materialTableData);\n    var duration = props.chapter.materialTableData._id === props.mid ? props.chapter.materialTableData.duration : 3600;\n\n    if (props.chapter.testTableData === null || props.chapter.testTableData === undefined) {\n      const Limite = new Date();\n      Limite.setSeconds(Limite.getSeconds() + duration);\n      console.log('IF:', Limite);\n      return Limite;\n    } else {\n      const Limite = new Date(props.chapter.testTableData.complationDate);\n      return Limite;\n    }\n  };\n\n  useEffect(() => {\n    props.chapter.ChangeMaterialTableData(\"62b42baec5ed6684387229d6\");\n    console.log(props.chapter.materialTableData);\n    limparTimer(getLimite());\n  }, []); // const Reset = () => {\n  //   limparTimer(getLimite());\n  // };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, timer));\n}\n\nconst mapStateToProps = state => ({\n  chapter: state.chapter\n});\n\nexport default connect(mapStateToProps, {\n  ChangeTestSearchText,\n  ChangeTestTableData,\n  ChangeTestModalState,\n  ChangeMaterialSearchText,\n  ChangeMaterialTableData,\n  ChangeMaterialModalState\n})(Counter); // import React, { Component } from \"react\";\n// import { \n//   ChangeTestSearchText,\n//   ChangeTestTableData,\n//   ChangeTestModalState,\n//   ChangeMaterialSearchText,\n//   ChangeMaterialTableData,\n//   ChangeMaterialModalState,\n// } from '../../../actions/chapterAction';\n// import { connect } from 'react-redux';\n// // import classes from \"./Quiz.module.css\";\n// class Counter extends Component {\n//   constructor() {\n//     super();\n//     this.state = { \n//       time: {}, \n//       seconds: 0,\n//       startDate : null,\n//       endDate: null,\n//     };\n//     this.timer = 0;\n//   }\n//   secondsToTime = secs => {\n//     let hours = Math.floor(secs / (60 * 60));\n//     let divisor_for_minutes = secs % (60 * 60);\n//     let minutes = Math.floor(divisor_for_minutes / 60);\n//     let divisor_for_seconds = divisor_for_minutes % 60;\n//     let seconds = Math.ceil(divisor_for_seconds);\n//     let obj = {\n//       h: hours,\n//       m: minutes,\n//       s: seconds\n//     };\n//     return obj;\n//   };\n//   componentDidMount = () => {\n//     this.props.ChangeTestTableData(this.props.id);\n//     this.props.ChangeMaterialTableData(this.props.id);\n//     let timeLeftVar = this.secondsToTime(this.state.seconds);\n//     this.setState({ time: timeLeftVar });\n//     console.log(\"IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII:\",this.props.chapter.materialTableData)\n//     this.props.chapter.materialTableData.map((d, i) =>{\n//       if(this.props.id === d._id){\n//         var minutesToAdd=d.duration;\n//         var currentDate = new Date();\n//         console.log('currentDate', currentDate);\n//         var futureDate = new Date(this.props.chapter.testTableData.complationDate);\n//         console.log(\"futureDate\", futureDate);\n//         this.state.seconds = (futureDate.getTime() - currentDate.getTime())/1000;\n//         console.log(\"Seconds:\",this.state.seconds)\n//       }\n//     })\n//   };\n//   startTimer = () => {\n//     if (this.timer == 0 && this.state.seconds > 0) {\n//       this.timer = setInterval(this.countDown, 1000);\n//     }\n//   };\n//   countDown = () => {\n//     let seconds = this.state.seconds - 1;\n//     this.setState({\n//       time: this.secondsToTime(seconds),\n//       seconds: seconds\n//     });\n//     if (seconds == 0) {\n//       clearInterval(this.timer);\n//       console.log(\"Time Up\");\n//     }\n//   };\n//   render() {\n//     return (\n//       <div>\n//         {this.startTimer()}\n//         <h3>\n//           {this.state.time.h} : {this.state.time.m} :{\" \"}\n//           {this.state.time.s}\n//         </h3>\n//       </div>\n//     );\n//   }\n// }\n// const mapStateToProps = state => ({\n//   chapter : state.chapter,\n//   trainer : state.trainer\n// });\n// export default connect(mapStateToProps,{\n//   ChangeTestSearchText,\n//   ChangeTestTableData,\n//   ChangeTestModalState,\n//   ChangeMaterialSearchText,\n//   ChangeMaterialTableData,\n//   ChangeMaterialModalState,\n// })(Counter);","map":{"version":3,"names":["React","Component","useState","useEffect","useRef","ChangeTestSearchText","ChangeTestTableData","ChangeTestModalState","ChangeMaterialSearchText","ChangeMaterialTableData","ChangeMaterialModalState","connect","Counter","props","Clean","timer","setTimer","getTimer","e","total","Date","parse","seconds","Math","floor","minutes","hours","initialTimer","limparTimer","current","clearInterval","id","setInterval","getLimite","console","log","chapter","materialTableData","duration","_id","mid","testTableData","undefined","Limite","setSeconds","getSeconds","complationDate","mapStateToProps","state"],"sources":["C:/React_project/EduTest/frontend/src/components/customer/Testing/Counter.js"],"sourcesContent":["import React, { Component, useState, useEffect, useRef } from \"react\";\r\nimport { \r\n  ChangeTestSearchText,\r\n  ChangeTestTableData,\r\n  ChangeTestModalState,\r\n  ChangeMaterialSearchText,\r\n  ChangeMaterialTableData,\r\n  ChangeMaterialModalState,\r\n} from '../../../actions/chapterAction';\r\nimport { connect } from 'react-redux';\r\n// import classes from \"./Quiz.module.css\";\r\n\r\nfunction Counter(props) {\r\n  const Clean = useRef(null);\r\n\r\n  const [timer, setTimer] = useState(\"00:00:00\");\r\n\r\n  const getTimer = (e) => {\r\n    const total = Date.parse(e) - Date.parse(new Date());\r\n    const seconds = Math.floor((total / 1000) % 60);\r\n    const minutes = Math.floor((total / 1000 / 60) % 60);\r\n    const hours = Math.floor(((total / 1000) / 60 / 60));\r\n    return {\r\n      total,\r\n      seconds,\r\n      minutes,\r\n      hours\r\n    };\r\n  };\r\n\r\n  const initialTimer = (e) => {\r\n    const { total, hours, minutes, seconds } = getTimer(e);\r\n    if (total >= 0) {\r\n      setTimer(\r\n        `0${hours}` + ':' + `${minutes}` + ':' + `${seconds}`\r\n        // (hours > 9 ? hours : `0${hours}`).concat(\":\") +\r\n        //   (minutes > 9 ? minutes : `0${minutes}`).concat(\":\") +\r\n        //   (seconds > 9 ? seconds : `0${seconds}`)\r\n      );\r\n    }\r\n  };\r\n\r\n  const limparTimer = (e) => {\r\n    setTimer(\"00:00:00\");\r\n\r\n    if (Clean.current) clearInterval(Clean.current);\r\n    const id = setInterval(() => {\r\n      initialTimer(e);\r\n    }, 1000);\r\n    Clean.current = id;\r\n  };\r\n\r\n  const getLimite = () => {\r\n    console.log('1',props.chapter.materialTableData);\r\n    var duration = props.chapter.materialTableData._id===props.mid ? props.chapter.materialTableData.duration : 3600\r\n    if(props.chapter.testTableData===null || props.chapter.testTableData===undefined){\r\n      const Limite = new Date();\r\n      Limite.setSeconds(Limite.getSeconds() + duration);\r\n      console.log('IF:',Limite);\r\n      return Limite;\r\n    }\r\n    else{\r\n      const Limite = new Date(props.chapter.testTableData.complationDate);\r\n      return Limite;\r\n    }\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.chapter.ChangeMaterialTableData(\"62b42baec5ed6684387229d6\");\r\n    console.log(props.chapter.materialTableData);\r\n    limparTimer(getLimite());\r\n    \r\n  }, []);\r\n\r\n  // const Reset = () => {\r\n  //   limparTimer(getLimite());\r\n  // };\r\n\r\n  return (\r\n    \r\n    <div>\r\n      <h2>{timer}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  chapter : state.chapter\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n  ChangeTestSearchText,\r\n  ChangeTestTableData,\r\n  ChangeTestModalState,\r\n  ChangeMaterialSearchText,\r\n  ChangeMaterialTableData,\r\n  ChangeMaterialModalState,\r\n})(Counter);\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { Component } from \"react\";\r\n// import { \r\n//   ChangeTestSearchText,\r\n//   ChangeTestTableData,\r\n//   ChangeTestModalState,\r\n//   ChangeMaterialSearchText,\r\n//   ChangeMaterialTableData,\r\n//   ChangeMaterialModalState,\r\n// } from '../../../actions/chapterAction';\r\n// import { connect } from 'react-redux';\r\n// // import classes from \"./Quiz.module.css\";\r\n// class Counter extends Component {\r\n//   constructor() {\r\n//     super();\r\n//     this.state = { \r\n//       time: {}, \r\n//       seconds: 0,\r\n//       startDate : null,\r\n//       endDate: null,\r\n//     };\r\n//     this.timer = 0;\r\n//   }\r\n\r\n//   secondsToTime = secs => {\r\n//     let hours = Math.floor(secs / (60 * 60));\r\n\r\n//     let divisor_for_minutes = secs % (60 * 60);\r\n//     let minutes = Math.floor(divisor_for_minutes / 60);\r\n\r\n//     let divisor_for_seconds = divisor_for_minutes % 60;\r\n//     let seconds = Math.ceil(divisor_for_seconds);\r\n\r\n//     let obj = {\r\n//       h: hours,\r\n//       m: minutes,\r\n//       s: seconds\r\n//     };\r\n//     return obj;\r\n//   };\r\n\r\n//   componentDidMount = () => {\r\n//     this.props.ChangeTestTableData(this.props.id);\r\n//     this.props.ChangeMaterialTableData(this.props.id);\r\n//     let timeLeftVar = this.secondsToTime(this.state.seconds);\r\n//     this.setState({ time: timeLeftVar });\r\n\r\n//     console.log(\"IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII:\",this.props.chapter.materialTableData)\r\n\r\n//     this.props.chapter.materialTableData.map((d, i) =>{\r\n//       if(this.props.id === d._id){\r\n//         var minutesToAdd=d.duration;\r\n//         var currentDate = new Date();\r\n//         console.log('currentDate', currentDate);\r\n//         var futureDate = new Date(this.props.chapter.testTableData.complationDate);\r\n//         console.log(\"futureDate\", futureDate);\r\n//         this.state.seconds = (futureDate.getTime() - currentDate.getTime())/1000;\r\n//         console.log(\"Seconds:\",this.state.seconds)\r\n//       }\r\n//     })\r\n//   };\r\n\r\n//   startTimer = () => {\r\n//     if (this.timer == 0 && this.state.seconds > 0) {\r\n//       this.timer = setInterval(this.countDown, 1000);\r\n//     }\r\n//   };\r\n\r\n//   countDown = () => {\r\n//     let seconds = this.state.seconds - 1;\r\n//     this.setState({\r\n//       time: this.secondsToTime(seconds),\r\n//       seconds: seconds\r\n//     });\r\n//     if (seconds == 0) {\r\n//       clearInterval(this.timer);\r\n//       console.log(\"Time Up\");\r\n//     }\r\n//   };\r\n//   render() {\r\n\r\n//     return (\r\n//       <div>\r\n//         {this.startTimer()}\r\n//         <h3>\r\n//           {this.state.time.h} : {this.state.time.m} :{\" \"}\r\n//           {this.state.time.s}\r\n//         </h3>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// const mapStateToProps = state => ({\r\n//   chapter : state.chapter,\r\n//   trainer : state.trainer\r\n// });\r\n\r\n// export default connect(mapStateToProps,{\r\n//   ChangeTestSearchText,\r\n//   ChangeTestTableData,\r\n//   ChangeTestModalState,\r\n//   ChangeMaterialSearchText,\r\n//   ChangeMaterialTableData,\r\n//   ChangeMaterialModalState,\r\n// })(Counter);\r\n"],"mappings":"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AAGC,KAAK,KAAK;EAChCZ,OAAO,EAAGY,KAAK,CAACZ;AADgB,CAAL,CAA7B;;AAIA,eAAezB,OAAO,CAACoC,eAAD,EAAiB;EACrC1C,oBADqC;EAErCC,mBAFqC;EAGrCC,oBAHqC;EAIrCC,wBAJqC;EAKrCC,uBALqC;EAMrCC;AANqC,CAAjB,CAAP,CAOZE,OAPY,CAAf,C,CAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}