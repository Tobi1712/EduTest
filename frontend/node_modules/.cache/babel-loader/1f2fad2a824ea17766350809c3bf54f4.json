{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport { css as _css } from \"styled-components\";\nvar _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\customer\\\\Testing\\\\test.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n          left: 0.5rem;\\n        \"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n          right: 0.5rem;\\n        \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component, useEffect } from 'react';\nimport { connect } from 'react-redux'; // import { Table, Input,  Typography, Divider, Icon, Modal, Popconfirm } from 'antd';\n// import Highlighter from 'react-highlight-words';\n\nimport { ChangeQuestionSearchText, ChangeQuestionTableData, ChangeQuestionModalState } from '../../../actions/trainerAction';\nimport { ChangeHistorySearchText, ChangeHistoryTableData, ChangeHistoryModalState } from '../../../actions/chapterAction';\nimport Alert from '../../../components/common/alert';\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis'; // import Test2 from './test2';\n// import Test3 from './test3';\n\nimport styled from \"styled-components\"; // import Carousel from \"react-multi-carousel\";\n\nimport \"react-multi-carousel/lib/styles.css\";\nimport classnames from 'classnames';\nimport Counter from './Counter';\nconst Container = styled.div.withConfig({\n  displayName: \"test__Container\",\n  componentId: \"sc-13myauf-0\"\n})([\"display:flex;justify-content:center;align-items:center;min-height:80vh;width:100%;\"]);\nconst ScreenQuiz = styled.div.withConfig({\n  displayName: \"test__ScreenQuiz\",\n  componentId: \"sc-13myauf-1\"\n})([\"display:flex;justify-content:\", \";align-items:center;flex-direction:column;max-width:1200px;padding:\", \";width:100%;height:80vh;background:#fff;border-radius:5px;box-shadow:0px 5px 40px -20px #000;\"], props => props.screen ? \"space-between\" : \"center\", props => props.screen ? \"5rem\" : \".5rem\");\nconst Title = styled.h1.withConfig({\n  displayName: \"test__Title\",\n  componentId: \"sc-13myauf-2\"\n})([\"font-size:2.5rem;margin-bottom:0.5rem;text-align:center;max-width:90%;\"]);\nconst Paragraph = styled.p.withConfig({\n  displayName: \"test__Paragraph\",\n  componentId: \"sc-13myauf-3\"\n})([\"font-size:1.5rem;\"]);\nconst Button = styled.button.withConfig({\n  displayName: \"test__Button\",\n  componentId: \"sc-13myauf-4\"\n})([\"font-size:1.2rem;font-weight:bold;width:40%;height:3rem;border:none;border-radius:5px;box-shadow:0px 3px 15px 0px #666;\"]);\nconst ButtonScr = styled.button.withConfig({\n  displayName: \"test__ButtonScr\",\n  componentId: \"sc-13myauf-5\"\n})([\"font-size:2rem;z-index:10;position:fixed;top:50%;\", \"\"], props => props.right ? _css(_templateObject()) : _css(_templateObject2()));\nconst ContainerLabel = styled.div.withConfig({\n  displayName: \"test__ContainerLabel\",\n  componentId: \"sc-13myauf-6\"\n})([\"display:flex;align-items:flex-start;flex-direction:column;margin:0 auto 0.5rem auto;\"]);\nconst Label = styled.label.withConfig({\n  displayName: \"test__Label\",\n  componentId: \"sc-13myauf-7\"\n})([\"display:flex;justify-content:center;align-items:center;\"]);\nconst Radio = styled.input.attrs({\n  type: 'checkbox'\n}).withConfig({\n  displayName: \"test__Radio\",\n  componentId: \"sc-13myauf-8\"\n})([\"display:flex;justify-content:center;align-items:center;width:15px;height:15px;border:0.5px solid black;margin:0 0.5rem 0 0;background:\", \";\"], props => props.clickedLabel ? \"#7159c1\" : \"#fff\"); // const IntoRadio = styled.div`\n//   width: 5px;\n//   height: 5px;\n//   border-radius: 3px;\n//   background: #fff;\n// `;\n\nconst Error = styled.div.withConfig({\n  displayName: \"test__Error\",\n  componentId: \"sc-13myauf-9\"\n})([\"top:22rem;color:red;position:absolute;font-weight:bold;\"]);\n\nclass Test extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNextClick = c => {\n      const _this$state = this.state,\n            count = _this$state.count,\n            questions = _this$state.questions,\n            clickedLabel = _this$state.clickedLabel,\n            answer = _this$state.answer; // console.log(\"Ques\", questions);\n      // var var1 = questions[c].question;\n      // var1 = var1+'fg';\n      // console.log(var1);\n      // questions[c].question=var1;\n\n      this.setState({\n        // questions:questions,\n        count: count + 1\n      });\n    };\n\n    this.handlePrevClick = () => {\n      const _this$state2 = this.state,\n            count = _this$state2.count,\n            questions = _this$state2.questions,\n            clickedLabel = _this$state2.clickedLabel,\n            answer = _this$state2.answer;\n\n      if (questions.length >= count && count > 0) {\n        this.setState({\n          count: count - 1,\n          checked: false\n        });\n      }\n    };\n\n    this.handleClick = c => {\n      const _this$state3 = this.state,\n            count = _this$state3.count,\n            questions = _this$state3.questions,\n            clickedLabel = _this$state3.clickedLabel,\n            answer = _this$state3.answer,\n            checked = _this$state3.checked,\n            quesid = _this$state3.quesid,\n            chans = _this$state3.chans;\n      console.log(\"Ques\", questions); // var var1 = questions[c].question;\n      // var1 = var1+'fg';\n      // console.log(var1);\n\n      questions[c].question = questions[c].question + 'fg';\n\n      if (questions.length >= count && clickedLabel.answerText) {\n        this.setState({\n          questions: questions,\n          count: c\n        });\n      }\n    };\n\n    this.renderInitial = () => {\n      const _this$state4 = this.state,\n            second = _this$state4.second,\n            count = _this$state4.count;\n      this.setState({\n        screen: false,\n        count: 1\n      });\n      SecurePost({\n        url: \"\".concat(apis.CREATE_HISTORY),\n        data: {\n          chapterid: this.props.chid,\n          materialid: this.props.id,\n          startDate: Date().toLocaleString(),\n          complationDate: Date().toLocaleString() + 3,\n          startTest: true,\n          endTest: false,\n          result: count\n        }\n      }).then(response => {\n        if (response.data.success) {\n          this.props.ChangeHistoryModalState(false, null, 'Save');\n          Alert('success', 'Успешно', response.data.message);\n        } else {\n          this.props.ChangeHistoryModalState(false, null, 'Save');\n          return Alert('warning', 'Предупреждение!', response.data.message);\n        }\n      }).catch(error => {\n        this.props.ChangeHistoryModalState(false, null, 'Save');\n        return Alert('error', 'Ошибка!', 'Ошибка сервера');\n      });\n      SecurePost({\n        url: \"\".concat(apis.CREATE_HISTORY),\n        data: {\n          materialId: this.props.id,\n          testid: this.props.chapter.historyTableData._id\n        }\n      });\n    };\n\n    this.renderScreenInitial = () => {\n      return /*#__PURE__*/React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(ScreenQuiz, {\n        screen: this.state.screen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"\\u0422\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: this.renderInitial,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\")));\n    };\n\n    this.handleOptions = (answerOptions, c) => {\n      const _this$state5 = this.state,\n            clickedLabel = _this$state5.clickedLabel,\n            questions = _this$state5.questions,\n            count = _this$state5.count,\n            checked = _this$state5.checked,\n            t = _this$state5.t;\n      console.log('click:', clickedLabel);\n      console.log('answer1:', answerOptions);\n      return answerOptions.map((a, i) => {\n        return /*#__PURE__*/React.createElement(Label, {\n          key: i,\n          onClick: () => {\n            // answerOptions(c)/ans[1]/charod = trt45\n            console.log('Onclick c:', c);\n            questions[c].answerOptions.answerText = questions[c].answerOptions[2].answerText; // questions[c].question = ;\n\n            this.setState({\n              questions: questions,\n              //clickedLabel: answerOptions,\n              error: false\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.handleChange = (e, i) => {\n      const checked = this.state.checked;\n      this.setState({\n        checked: !e.target.checked\n      });\n      console.log('check', e.target.checked);\n      console.log('I', i);\n    };\n\n    this.renderQuestions = () => {\n      const _this$state6 = this.state,\n            count = _this$state6.count,\n            questions = _this$state6.questions,\n            error = _this$state6.error,\n            second = _this$state6.second,\n            time = _this$state6.time;\n      const NewQuestions = Array.from(questions);\n      const removeQuestions = NewQuestions.slice(count - 1, count);\n      return removeQuestions.map((q, i) => /*#__PURE__*/React.createElement(Container, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(ScreenQuiz, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Counter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }), /*#__PURE__*/React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, count, \"/\", questions.length), /*#__PURE__*/React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, q.question), /*#__PURE__*/React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, count), /*#__PURE__*/React.createElement(ContainerLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, this.handleOptions(q.answerOptions, count - 1)), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.handleClick(count - 1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), count === questions.length ? /*#__PURE__*/React.createElement(Button, {\n        onClick: this.handleEndClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, \"\\u0417\\u0430\\u043A\\u043E\\u043D\\u0447\\u0438\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\") : null, /*#__PURE__*/React.createElement(ButtonScr, {\n        onClick: () => this.handleNextClick(count),\n        right: true,\n        disabled: count === questions.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, \"\\u3009\"), /*#__PURE__*/React.createElement(ButtonScr, {\n        onClick: this.handlePrevClick,\n        left: true,\n        disabled: count === 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, \"\\u3008\"), console.log('Count:', count))));\n    };\n\n    this.renderResult = () => {\n      const _this$state7 = this.state,\n            answer = _this$state7.answer,\n            questions = _this$state7.questions,\n            screenFinish = _this$state7.screenFinish;\n      return /*#__PURE__*/React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(ScreenQuiz, {\n        screen: screenFinish,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, \"\\u0412\\u044B \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u043E \\u043E\\u0442\\u0432\\u0435\\u0442\\u0438\\u043B\\u0438 \", answer, \" \\u0438\\u0437 \", questions.length, \" \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u043E\\u0432\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.setState({\n          count: 0,\n          screenFinish: false,\n          screen: true,\n          answer: 0\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, \"\\u0422\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E\")));\n    };\n\n    this.state = {\n      questions: [],\n      screen: true,\n      count: 0,\n      clickedLabel: {},\n      answerLabel: {},\n      answer: 0,\n      error: false,\n      screenFinish: false,\n      second: 60,\n      time: {},\n      checked: true,\n      temp: [],\n      t: 0,\n      optionDetails: [{\n        quesid: null,\n        chans: null,\n        isAnswer: false\n      }]\n    };\n  }\n\n  componentDidMount() {\n    this.props.ChangeQuestionTableData(this.props.id);\n    this.props.ChangeHistoryTableData(this.props.id);\n    console.log('CHID', this.props.chid);\n    var questions = [];\n    this.props.trainer.QuestionTableData.map((d, i) => {\n      questions[i] = {\n        question: d.body,\n        // questionImage : d.quesimg,\n        answerOptions: [{\n          answerText: d.answer1,\n          correctAnswer: d.trueans1\n        }, {\n          answerText: d.answer2,\n          correctAnswer: d.trueans2\n        }, {\n          answerText: d.answer3,\n          correctAnswer: d.trueans3\n        }, {\n          answerText: d.answer4,\n          correctAnswer: d.trueans4\n        }, {\n          answerText: d.answer5,\n          correctAnswer: d.trueans5\n        }]\n      };\n    });\n    this.setState({\n      questions: questions\n    });\n  }\n\n  render() {\n    const _this$state8 = this.state,\n          screenFinish = _this$state8.screenFinish,\n          questions = _this$state8.questions,\n          screen = _this$state8.screen;\n    return !screenFinish && questions ? /*#__PURE__*/React.createElement(React.Fragment, null, screen ? this.renderScreenInitial() : this.renderQuestions()) : this.renderResult();\n  } // render() {\n  //   console.log('qas',this.props.trainer.QuestionTableData);\n  //   console.log('qaz',this.state);\n  //   return (\n  //     <div>\n  //       <h1>Тестирование номер 1</h1>\n  //       {this.state.isStarted ? null : (\n  //         <div id=\"button\">\n  //           <Button variant=\"contained\" color=\"secondary\" onClick={()=>this.handleClick}>\n  //             Начать тест\n  //           </Button>\n  //         </div>\n  //       )}\n  //     {this.state.isStarted ? (\n  //     // <Test2  details={this.props.trainer.QuestionTableData}/>\n  //     ) : null}\n  //     </div>\n  //   )\n  // }\n\n\n}\n\nconst mapStateToProps = state => ({\n  chapter: state.chapter,\n  trainer: state.trainer\n});\n\nexport default connect(mapStateToProps, {\n  ChangeQuestionSearchText,\n  ChangeQuestionTableData,\n  ChangeQuestionModalState,\n  ChangeHistorySearchText,\n  ChangeHistoryTableData,\n  ChangeHistoryModalState\n})(Test);","map":{"version":3,"names":["React","Component","useEffect","connect","ChangeQuestionSearchText","ChangeQuestionTableData","ChangeQuestionModalState","ChangeHistorySearchText","ChangeHistoryTableData","ChangeHistoryModalState","Alert","SecurePost","apis","styled","classnames","Counter","Container","div","ScreenQuiz","props","screen","Title","h1","Paragraph","p","Button","button","ButtonScr","right","css","ContainerLabel","Label","label","Radio","input","attrs","type","clickedLabel","Error","Test","constructor","handleNextClick","c","state","count","questions","answer","setState","handlePrevClick","length","checked","handleClick","quesid","chans","console","log","question","answerText","renderInitial","second","url","CREATE_HISTORY","data","chapterid","chid","materialid","id","startDate","Date","toLocaleString","complationDate","startTest","endTest","result","then","response","success","message","catch","error","materialId","testid","chapter","historyTableData","_id","renderScreenInitial","handleOptions","answerOptions","t","map","a","i","handleChange","e","target","renderQuestions","time","NewQuestions","Array","from","removeQuestions","slice","q","handleEndClick","renderResult","screenFinish","answerLabel","temp","optionDetails","isAnswer","componentDidMount","trainer","QuestionTableData","d","body","answer1","correctAnswer","trueans1","answer2","trueans2","answer3","trueans3","answer4","trueans4","answer5","trueans5","render","mapStateToProps"],"sources":["C:/React_project/EduTest/frontend/src/components/customer/Testing/test.js"],"sourcesContent":["import React, { Component, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\n// import { Table, Input,  Typography, Divider, Icon, Modal, Popconfirm } from 'antd';\r\n// import Highlighter from 'react-highlight-words';\r\nimport  { css } from 'styled-components/macro'\r\nimport { \r\n    ChangeQuestionSearchText,\r\n    ChangeQuestionTableData,\r\n    ChangeQuestionModalState,\r\n} from '../../../actions/trainerAction';\r\nimport { \r\n  ChangeHistorySearchText,\r\n  ChangeHistoryTableData,\r\n  ChangeHistoryModalState,\r\n} from '../../../actions/chapterAction';\r\n\r\nimport Alert from '../../../components/common/alert';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\n// import Test2 from './test2';\r\n// import Test3 from './test3';\r\nimport styled from \"styled-components\";\r\n// import Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport classnames from 'classnames';\r\nimport Counter from './Counter';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 80vh;\r\n  width: 100%;\r\n  /*background: #7159c1;*/\r\n`;\r\n\r\nconst ScreenQuiz = styled.div`\r\n  display: flex;\r\n  justify-content: ${props => (props.screen ? \"space-between\" : \"center\")};\r\n  align-items: center;\r\n  flex-direction: column;\r\n  max-width: 1200px;\r\n  padding: ${props => (props.screen ? \"5rem\" : \".5rem\")};\r\n  width: 100%;\r\n  height: 80vh;\r\n  background: #fff;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 5px 40px -20px #000;\r\n\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 2.5rem;\r\n  // color: #7159c1;\r\n  margin-bottom: 0.5rem;\r\n  text-align: center;\r\n  max-width: 90%;\r\n`;\r\n\r\nconst Paragraph = styled.p`\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  width: 40%;\r\n  height: 3rem;\r\n  // color: #fff;\r\n  border: none;\r\n  // background: #7159c1;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 3px 15px 0px #666;\r\n`;\r\n\r\nconst ButtonScr = styled.button`\r\n  font-size: 2rem;\r\n  z-index: 10;\r\n  position: fixed;\r\n  top: 50%;\r\n  ${(props) =>\r\n    props.right\r\n      ? css`\r\n          right: 0.5rem;\r\n        `\r\n      : css`\r\n          left: 0.5rem;\r\n        `}\r\n`\r\n\r\nconst ContainerLabel = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  margin: 0 auto 0.5rem auto;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Radio = styled.input.attrs({ type: 'checkbox' })`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 15px;\r\n  height: 15px;\r\n  // border-radius: 7.5px;\r\n  border: 0.5px solid black;\r\n  margin: 0 0.5rem 0 0;\r\n  background: ${props => (props.clickedLabel ? \"#7159c1\" : \"#fff\")};\r\n`;\r\n\r\n// const IntoRadio = styled.div`\r\n//   width: 5px;\r\n//   height: 5px;\r\n//   border-radius: 3px;\r\n//   background: #fff;\r\n// `;\r\n\r\nconst Error = styled.div`\r\n  top: 22rem;\r\n  color: red;\r\n  position: absolute;\r\n  font-weight: bold;\r\n`;\r\n\r\nclass Test extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state={\r\n        questions:[],\r\n        screen: true,\r\n        count: 0,\r\n        clickedLabel: {},\r\n        answerLabel:{},\r\n        answer: 0,\r\n        error:false,\r\n        screenFinish:false,\r\n        second:60,\r\n        time:{},\r\n        checked:true,\r\n        temp:[],\r\n        t:0,\r\n        optionDetails:[{\r\n          quesid: null,\r\n          chans: null,\r\n          isAnswer :false\r\n        }]\r\n      }\r\n    }\r\n  \r\n    componentDidMount(){\r\n      this.props.ChangeQuestionTableData(this.props.id);\r\n      this.props.ChangeHistoryTableData(this.props.id);\r\n      console.log('CHID',this.props.chid);\r\n      var questions=[];\r\n      this.props.trainer.QuestionTableData.map((d,i)=>{\r\n        questions[i]=(\r\n          {\r\n            question : d.body,\r\n            // questionImage : d.quesimg,\r\n            answerOptions: [\r\n              { answerText: d.answer1, correctAnswer: d.trueans1 },\r\n              { answerText: d.answer2, correctAnswer: d.trueans2 },\r\n              { answerText: d.answer3, correctAnswer: d.trueans3 },\r\n              { answerText: d.answer4, correctAnswer: d.trueans4 },\r\n              { answerText: d.answer5, correctAnswer: d.trueans5}\r\n            ]\r\n          }\r\n        )\r\n      });\r\n      this.setState({\r\n        questions:questions\r\n      })\r\n    }\r\n\r\n    handleNextClick=(c)=>{\r\n      const { count, questions, clickedLabel, answer} = this.state;\r\n      // console.log(\"Ques\", questions);\r\n      // var var1 = questions[c].question;\r\n      // var1 = var1+'fg';\r\n      // console.log(var1);\r\n      // questions[c].question=var1;\r\n        this.setState({\r\n          // questions:questions,\r\n          count: count+1,\r\n        });\r\n    }\r\n\r\n    handlePrevClick=()=>{\r\n      const { count, questions, clickedLabel, answer} = this.state;\r\n      if (questions.length >= count && count>0) {\r\n        this.setState({\r\n          count: count - 1,\r\n          checked:false,\r\n        });\r\n      } \r\n    }\r\n\r\n    handleClick = (c)=> {\r\n      const { count, questions, clickedLabel, answer, checked, quesid, chans} = this.state;\r\n      console.log(\"Ques\", questions);\r\n      // var var1 = questions[c].question;\r\n      // var1 = var1+'fg';\r\n      // console.log(var1);\r\n      questions[c].question=questions[c].question+'fg';\r\n      if (questions.length >= count && clickedLabel.answerText) {\r\n        this.setState({\r\n          questions:questions,\r\n          count: c,\r\n\r\n        });\r\n      }\r\n    }\r\n\r\n    renderInitial = () => {\r\n      const { second, count } = this.state;\r\n      this.setState({\r\n        screen: false,\r\n        count: 1\r\n      });\r\n\r\n      SecurePost({\r\n        url : `${apis.CREATE_HISTORY}`,\r\n        data : {\r\n            chapterid : this.props.chid,\r\n            materialid : this.props.id,\r\n            startDate : Date().toLocaleString(),\r\n            complationDate : Date().toLocaleString()+3,\r\n            startTest: true,\r\n            endTest: false,\r\n            result: count\r\n          }\r\n        })\r\n        .then((response)=>{\r\n          if(response.data.success){\r\n              this.props.ChangeHistoryModalState(false,null, 'Save'); \r\n              Alert('success','Успешно',response.data.message);\r\n          }\r\n          else{\r\n              this.props.ChangeHistoryModalState(false,null, 'Save');\r\n              return Alert('warning','Предупреждение!',response.data.message);\r\n          }\r\n        })\r\n        .catch((error)=>{\r\n            this.props.ChangeHistoryModalState(false,null, 'Save');\r\n            return Alert('error','Ошибка!','Ошибка сервера');\r\n        })\r\n      \r\n        SecurePost({\r\n          url : `${apis.CREATE_HISTORY}`,\r\n          data : {\r\n            materialId : this.props.id,\r\n            testid : this.props.chapter.historyTableData._id,\r\n          }\r\n        })\r\n    };\r\n\r\n    renderScreenInitial = () => {\r\n      return (\r\n        <Container>\r\n          <ScreenQuiz screen={this.state.screen}>\r\n            <Title>Тестирование</Title>\r\n            {/* <Paragraph>Click to start</Paragraph> */}\r\n            <Button onClick={this.renderInitial}>Начать тест</Button>\r\n{/* \r\n            <Button onClick={this.renderInitial}>Начать тест</Button> */}\r\n            \r\n          </ScreenQuiz>\r\n        </Container>\r\n      );\r\n    };\r\n  \r\n    handleOptions = (answerOptions,c) => {\r\n      const { clickedLabel,questions, count, checked, t } = this.state;\r\n      console.log('click:',clickedLabel);\r\n      console.log('answer1:',answerOptions);\r\n      return answerOptions.map((a, i) => {\r\n        return (\r\n          <Label\r\n            key={i}\r\n            onClick={() =>{\r\n\r\n\r\n              // answerOptions(c)/ans[1]/charod = trt45\r\n              console.log('Onclick c:', c);\r\n               questions[c].answerOptions.answerText=questions[c].answerOptions[2].answerText; \r\n              // questions[c].question = ;\r\n              \r\n              this.setState({\r\n                questions:questions,\r\n                //clickedLabel: answerOptions,\r\n\r\n                error: false\r\n              })}\r\n            }\r\n          >\r\n\r\n           {/* <Radio clickedLabel={clickedLabel.answerText === a.answerText}/> */}\r\n            {/* <Paragraph>{a.answerText}</Paragraph> */}\r\n          </Label>\r\n          \r\n        );\r\n      });\r\n    };\r\n\r\n    handleChange = (e, i) => {\r\n      const {checked} = this.state\r\n      this.setState({checked: !e.target.checked});\r\n      console.log('check', e.target.checked);\r\n      console.log('I',i)\r\n    };\r\n\r\n\r\n  //   startTimer = () => {\r\n  //     const countDownTime = Date.now() + 180000;\r\n  //     this.interval = setInterval(() => {\r\n  //         const now = new Date();\r\n  //         const distance = countDownTime - now;\r\n\r\n  //         const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n  //         const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n  //         if (distance < 0) {\r\n  //             clearInterval(this.interval);\r\n  //             this.setState({\r\n  //                 time: {\r\n  //                     minutes: 0,\r\n  //                     seconds: 0\r\n  //                 }\r\n  //             }, () => {\r\n  //                 this.endGame();\r\n  //             });\r\n  //         } else {\r\n  //             this.setState({\r\n  //                 time: {\r\n  //                     minutes,\r\n  //                     seconds,\r\n  //                     distance\r\n  //                 }\r\n  //             });\r\n  //         }\r\n  //     }, 1000);\r\n  // }\r\n\r\n  \r\n  \r\n    renderQuestions = () => {\r\n      const { count,questions, error, second, time } = this.state;\r\n      const NewQuestions = Array.from(questions);\r\n      const removeQuestions = NewQuestions.slice(count - 1, count);\r\n    \r\n      return removeQuestions.map((q, i) => (\r\n\r\n        <Container key={i}>\r\n          <ScreenQuiz>\r\n            \r\n            {/* <div className=\"timer-container\">\r\n              <p>\r\n                <span className={classnames('right valid', {\r\n                  'warning': time.distance <= 120000,\r\n                  'invalid': time.distance < 30000\r\n                  })} style={{paddingLeft:'10px'}}>\r\n                  {time.minutes}:{time.seconds}\r\n                  <span  className=\"mdi mdi-clock-outline mdi-24px\"></span></span>\r\n              </p>\r\n            </div> */}\r\n            <Counter/>\r\n\r\n            <h3>{count}/{questions.length}</h3>\r\n            <Title>{q.question}</Title>\r\n            <label>{count}</label>\r\n            <ContainerLabel>\r\n              {this.handleOptions(q.answerOptions, count-1)}\r\n            </ContainerLabel>\r\n            <Button onClick={()=>this.handleClick(count-1)}>Сохранить</Button>\r\n            { count===questions.length ?\r\n            <Button onClick={this.handleEndClick}>Закончить тест</Button>\r\n              : null\r\n          }\r\n            {/* {error && <Error>Пожалуйста, проверьте варианты.</Error>} */}\r\n            <ButtonScr onClick={()=>this.handleNextClick(count)} right disabled={count === questions.length}>〉</ButtonScr>\r\n            <ButtonScr onClick={this.handlePrevClick} left disabled={count===1}>〈</ButtonScr>\r\n            {console.log('Count:',count)}\r\n          </ScreenQuiz>\r\n        </Container>\r\n\r\n      ));\r\n    };\r\n  \r\n    renderResult = () => {\r\n      const { answer,questions, screenFinish } = this.state;\r\n  \r\n      return (\r\n        <Container>\r\n          <ScreenQuiz screen={screenFinish}>\r\n            <Title>Вы правильно ответили {answer} из {questions.length} вопросов</Title>\r\n            <Button\r\n              onClick={() =>\r\n                this.setState({\r\n                  count: 0,\r\n                  screenFinish: false,\r\n                  screen: true,\r\n                  answer: 0\r\n                })\r\n              }\r\n            >\r\n              Тестировать заново\r\n            </Button>\r\n          </ScreenQuiz>\r\n        </Container>\r\n      );\r\n    };\r\n\r\n\r\n    render() {\r\n      const { screenFinish, questions, screen } = this.state;\r\n\r\n      return !screenFinish && questions ? (\r\n        <>{screen ? this.renderScreenInitial() : this.renderQuestions()}</>\r\n      ) : (\r\n        this.renderResult()\r\n      );\r\n    }\r\n\r\n    // render() {\r\n    //   console.log('qas',this.props.trainer.QuestionTableData);\r\n    //   console.log('qaz',this.state);\r\n    //   return (\r\n    //     <div>\r\n    //       <h1>Тестирование номер 1</h1>\r\n    //       {this.state.isStarted ? null : (\r\n    //         <div id=\"button\">\r\n    //           <Button variant=\"contained\" color=\"secondary\" onClick={()=>this.handleClick}>\r\n    //             Начать тест\r\n    //           </Button>\r\n    //         </div>\r\n    //       )}\r\n        \r\n    //     {this.state.isStarted ? (\r\n    //     // <Test2  details={this.props.trainer.QuestionTableData}/>\r\n    //     ) : null}\r\n    //     </div>\r\n    //   )\r\n    // }\r\n  }\r\n  \r\n  const mapStateToProps = state => ({\r\n      chapter : state.chapter,\r\n      trainer : state.trainer\r\n  });\r\n  \r\n  export default connect(mapStateToProps,{\r\n      ChangeQuestionSearchText,\r\n      ChangeQuestionTableData,\r\n      ChangeQuestionModalState,\r\n      ChangeHistorySearchText,\r\n  ChangeHistoryTableData,\r\n  ChangeHistoryModalState,\r\n  })(Test);\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}