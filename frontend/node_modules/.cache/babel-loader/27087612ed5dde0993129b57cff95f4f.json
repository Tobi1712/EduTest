{"ast":null,"code":"import _objectSpread from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\admin\\\\Company\\\\newcompany.js\";\nimport React, { Component } from 'react';\nimport './newcompany.css';\nimport { Form, Input, Button, //Select,\nIcon, Upload } from 'antd';\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport { connect } from 'react-redux';\nimport { ChangeCompanyConfirmDirty, ChangeCompanyModalState, ChangeCompanyTableData } from '../../../actions/adminAction';\nimport Alert from '../../../components/common/alert';\nimport auth from '../../../services/AuthServices'; // const { Option } = Select;\n\nimport LocalizedStrings from 'react-localization';\nlet strings = new LocalizedStrings({\n  ru: {\n    InputForm: \"Полученные значения формы: \",\n    Reg: \"Регистрация\",\n    Succes: \"Успешно\",\n    Warning: \"Предупреждение!\",\n    Error: \"Ошибка!\",\n    ErrorServer: \"Ошибка сервера\",\n    Name: \"Название\",\n    InputNameCompany: \"Пожалуйста, введите название вашей компании!\",\n    Logo: \"Логотип\",\n    Inputlogo: \"Пожалуйста, загрузите логотип вашей компании!\",\n    Download: \"Загрузить\",\n    Delete: \"Удалить\",\n    Description: \"Описание\",\n    Description2: \"Описание!\",\n    Date1: \"Дата начала действия лицензии\",\n    InputDate: \"Пожалуйста, выберите дату!\",\n    Date2: \"Срок действия лицензии\",\n    License: \"Количество лицензированных пользователей\",\n    Amount: \"Пожалуйста, введите количество!\",\n    UsedUsers: \"Количество использованных учетных записей в рамках лицензии\",\n    Contact: \"Контактное лицо\",\n    ContactInput: \"Пожалуйста, введите контактное лицо!\"\n  },\n  kz: {\n    InputForm: \"\",\n    Reg: \"\",\n    Succes: \"\",\n    Warning: \"\",\n    Error: \"\",\n    ErrorServer: \"\",\n    Name: \"\",\n    InputNameCompany: \"\",\n    Logo: \"\",\n    Inputlogo: \"\",\n    Download: \"\",\n    Delete: \"\",\n    Description: \"\",\n    Description2: \"\",\n    Date1: \"\",\n    InputDate: \"\",\n    Date2: \"\",\n    License: \"\",\n    Amount: \"\",\n    UsedUsers: \"\",\n    Contact: \"\",\n    ContactInput: \"\"\n  }\n});\n\nclass NewCompany extends Component {\n  constructor(props) {\n    super(props);\n\n    this.CompanyImageonChange = f => {\n      var newCompimg = this.state.companyDetails.companyimage;\n\n      if (!f) {\n        newCompimg = null;\n      } else {\n        newCompimg = \"\".concat(apis.BASE, \"/\").concat(f.link);\n      }\n\n      this.setState({\n        submitDisabled: false\n      });\n\n      if (newCompimg === 'undefined' || newCompimg === undefined || newCompimg === null || newCompimg === 'null') {\n        //(newOptions[i].body==='undefined' || newOptions[i].body===undefined || newOptions[i].body==='null' || newOptions[i].body==='' || newOptions[i].body===null)){\n        newCompimg = this.state.companyDetails.companyimage;\n      }\n\n      this.setState((ps, pp) => {\n        return {\n          companyDetails: _objectSpread({}, ps.companyDetails, {\n            companyimage: newCompimg\n          })\n        };\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          console.log(strings.InputForm, values);\n          console.log(\"Company ID:\", this.props.admin.companyId);\n          SecurePost({\n            url: \"\".concat(apis.CREATE_COMPANY),\n            data: {\n              _id: this.props.admin.companyId,\n              name: values.name,\n              logo: this.state.companyDetails.companyimage,\n              descr: values.descr,\n              licFromDate: values.licFromDate,\n              licToDate: values.licToDate,\n              numOfLic: values.numOfLic,\n              numOfLicAcc: values.numOfLicAcc,\n              contact: values.contact\n            }\n          }).then(response => {\n            if (response.data.success) {\n              this.props.ChangeCompanyModalState(false, null, strings.Reg);\n              Alert('success', strings.Succes, response.data.message);\n              this.props.ChangeCompanyTableData();\n            } else {\n              console.log(response.data);\n              this.props.ChangeCompanyModalState(false, null, strings.Reg);\n              return Alert('warning', strings.Warning, response.data.message);\n            }\n          }).catch(error => {\n            this.props.ChangeCompanyModalState(false, null, strings.Reg);\n            return Alert('error', strings.Error, strings.ErrorServer);\n          });\n        }\n      });\n    };\n\n    this.changeqImage = f => {\n      this.setState((ps, pp) => {\n        return {\n          companyDetails: _objectSpread({}, ps.companyDetails, {\n            companyimage: f.link ? \"\".concat(apis.BASE, \"/\").concat(f.link) : null\n          }),\n          submitDisabled: false\n        };\n      });\n    };\n\n    this.upl = () => {\n      this.setState({\n        submitDisabled: false\n      });\n    };\n\n    this.state = {\n      companyDetails: {\n        companyimage: this.props.admin.companydetails.logo\n      },\n      submitDisabled: false,\n      fileList: this.props.admin.companydetails.logo\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    var CompanyImageprops = {\n      name: 'file',\n      action: \"\".concat(apis.BASE).concat(apis.FILE_UPLOAD, \"?Token=\").concat(auth.retriveToken()),\n      listType: 'picture'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register-company-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register-company-form-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      label: strings.Name,\n      hasFeedback: true,\n      className: \"input-admin-company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, getFieldDecorator('name', {\n      initialValue: this.props.admin.companydetails.name,\n      rules: [{\n        required: false,\n        message: strings.InputNameCompany,\n        whitespace: true\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: strings.Logo,\n      className: \"input-admin-company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(Upload, Object.assign({}, CompanyImageprops, {\n      beforeUpload: this.upl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), getFieldDecorator('logo', {\n      initialValue: this.props.admin.companydetails.logo,\n      rules: [{\n        required: false,\n        message: strings.Inputlogo,\n        whitespace: true\n      }]\n    })( /*#__PURE__*/React.createElement(\"img\", {\n      src: this.props.admin.companydetails.logo,\n      style: {\n        height: \"60px\"\n      },\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    })), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        marginLeft: '100px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(Icon, {\n      type: \"upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), \" \", strings.Download)), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        marginLeft: '100px'\n      },\n      onClick: () => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(Icon, {\n      type: \"delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), \" \", strings.Delete)), /*#__PURE__*/React.createElement(Form.Item, {\n      label: strings.Description,\n      hasFeedback: true,\n      className: \"input-admin-company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, getFieldDecorator('descr', {\n      initialValue: this.props.admin.companydetails.descr,\n      rules: [{\n        required: false,\n        message: strings.Description2,\n        whitespace: true\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: strings.Date1,\n      hasFeedback: true,\n      className: \"input-admin-company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, getFieldDecorator('licFromDate', {\n      initialValue: this.props.admin.companydetails.licFromDate,\n      rules: [{\n        required: false,\n        message: strings.InputDate,\n        whitespace: true\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      type: \"Date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: strings.Date2,\n      hasFeedback: true,\n      className: \"input-admin-company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, getFieldDecorator('licToDate', {\n      initialValue: this.props.admin.companydetails.licToDate,\n      rules: [{\n        required: false,\n        message: strings.InputDate,\n        whitespace: true\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      type: \"Date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: strings.License,\n      className: \"input-admin-company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, getFieldDecorator('numOfLic', {\n      initialValue: this.props.admin.companydetails.numOfLic,\n      rules: [{\n        required: false,\n        message: strings.Amount\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      type: \"number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: strings.UsedUsers,\n      className: \"input-admin-company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, getFieldDecorator('numOfLicAcc', {\n      initialValue: this.props.admin.companydetails.numOfLicAcc,\n      rules: [{\n        required: false,\n        message: strings.Amount\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      type: \"number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: strings.Contact,\n      hasFeedback: true,\n      className: \"input-admin-company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, getFieldDecorator('contact', {\n      initialValue: this.props.admin.companydetails.contact,\n      rules: [{\n        required: false,\n        message: strings.ContactInput,\n        whitespace: true\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, this.props.admin.Companymode)))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  admin: state.admin\n});\n\nconst NewCompanyForm = Form.create({\n  name: 'register'\n})(NewCompany);\nexport default connect(mapStateToProps, {\n  ChangeCompanyConfirmDirty,\n  ChangeCompanyModalState,\n  ChangeCompanyTableData\n})(NewCompanyForm);","map":{"version":3,"names":["React","Component","Form","Input","Button","Icon","Upload","SecurePost","apis","connect","ChangeCompanyConfirmDirty","ChangeCompanyModalState","ChangeCompanyTableData","Alert","auth","LocalizedStrings","strings","ru","InputForm","Reg","Succes","Warning","Error","ErrorServer","Name","InputNameCompany","Logo","Inputlogo","Download","Delete","Description","Description2","Date1","InputDate","Date2","License","Amount","UsedUsers","Contact","ContactInput","kz","NewCompany","constructor","props","CompanyImageonChange","f","newCompimg","state","companyDetails","companyimage","BASE","link","setState","submitDisabled","undefined","ps","pp","handleSubmit","e","preventDefault","form","validateFieldsAndScroll","err","values","console","log","admin","companyId","url","CREATE_COMPANY","data","_id","name","logo","descr","licFromDate","licToDate","numOfLic","numOfLicAcc","contact","then","response","success","message","catch","error","changeqImage","upl","companydetails","fileList","render","getFieldDecorator","CompanyImageprops","action","FILE_UPLOAD","retriveToken","listType","initialValue","rules","required","whitespace","height","marginLeft","Companymode","mapStateToProps","NewCompanyForm","create"],"sources":["C:/React_project/EduTest/frontend/src/components/admin/Company/newcompany.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport './newcompany.css';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    //Select,\r\n    Icon,\r\n    Upload\r\n} from 'antd';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    ChangeCompanyConfirmDirty,\r\n    ChangeCompanyModalState,\r\n    ChangeCompanyTableData\r\n} from '../../../actions/adminAction';\r\nimport Alert from '../../../components/common/alert';\r\nimport auth from '../../../services/AuthServices';\r\n// const { Option } = Select;\r\nimport  LocalizedStrings  from  'react-localization' ;\r\nlet strings = new LocalizedStrings({\r\n    ru:{\r\n      InputForm:\"Полученные значения формы: \",\r\n      Reg:\"Регистрация\",\r\n      Succes:\"Успешно\",\r\n      Warning:\"Предупреждение!\",\r\n      Error:\"Ошибка!\",\r\n      ErrorServer:\"Ошибка сервера\",\r\n      Name:\"Название\",\r\n      InputNameCompany:\"Пожалуйста, введите название вашей компании!\",\r\n      Logo:\"Логотип\",\r\n      Inputlogo:\"Пожалуйста, загрузите логотип вашей компании!\",\r\n      Download:\"Загрузить\",\r\n      Delete:\"Удалить\",\r\n      Description:\"Описание\",\r\n      Description2:\"Описание!\",\r\n      Date1:\"Дата начала действия лицензии\",\r\n      InputDate:\"Пожалуйста, выберите дату!\",\r\n      Date2:\"Срок действия лицензии\",\r\n      License:\"Количество лицензированных пользователей\",\r\n      Amount:\"Пожалуйста, введите количество!\",\r\n      UsedUsers:\"Количество использованных учетных записей в рамках лицензии\",\r\n      Contact:\"Контактное лицо\",\r\n      ContactInput:\"Пожалуйста, введите контактное лицо!\",\r\n      \r\n    },\r\n    kz: {\r\n      InputForm :\"\",\r\n      Reg :\"\",\r\n      Succes :\"\",\r\n      Warning :\"\",\r\n      Error :\"\",\r\n      ErrorServer :\"\",\r\n      Name :\"\",\r\n      InputNameCompany :\"\",\r\n      Logo :\"\",\r\n      Inputlogo :\"\",\r\n      Download :\"\",\r\n      Delete :\"\",\r\n      Description :\"\",\r\n      Description2 :\"\",\r\n      Date1 :\"\",\r\n      InputDate :\"\",\r\n      Date2 :\"\",\r\n      License :\"\",\r\n      Amount :\"\",\r\n      UsedUsers :\"\",\r\n      Contact :\"\",\r\n      ContactInput :\"\",\r\n  \r\n  \r\n    }\r\n   });\r\nclass NewCompany extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            companyDetails : {\r\n                companyimage: this.props.admin.companydetails.logo\r\n            },\r\n            submitDisabled:false,\r\n            fileList: this.props.admin.companydetails.logo,\r\n        }\r\n    }\r\n\r\n    CompanyImageonChange = (f)=>{\r\n        var newCompimg = this.state.companyDetails.companyimage\r\n        if(!f){\r\n            newCompimg=null\r\n        }\r\n        else{\r\n            newCompimg=`${apis.BASE}/${f.link}`\r\n        }\r\n        this.setState({\r\n            submitDisabled:false\r\n        })\r\n        if(newCompimg==='undefined' || newCompimg===undefined || newCompimg===null || newCompimg==='null') {\r\n            //(newOptions[i].body==='undefined' || newOptions[i].body===undefined || newOptions[i].body==='null' || newOptions[i].body==='' || newOptions[i].body===null)){\r\n                newCompimg=this.state.companyDetails.companyimage;    \r\n        }\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                companyDetails:{\r\n                    ...ps.companyDetails,\r\n                    companyimage:newCompimg\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    \r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                console.log(strings.InputForm, values);\r\n                console.log(\"Company ID:\", this.props.admin.companyId)\r\n                    SecurePost({\r\n                        url : `${apis.CREATE_COMPANY}`,\r\n                        data : {\r\n                            _id : this.props.admin.companyId,\r\n                            name :values.name,\r\n                            logo : this.state.companyDetails.companyimage,\r\n                            descr : values.descr,\r\n                            licFromDate: values.licFromDate,\r\n                            licToDate :values.licToDate,\r\n                            numOfLic : values.numOfLic,\r\n                            numOfLicAcc : values.numOfLicAcc,\r\n                            contact : values.contact,\r\n                        }\r\n                    }).then((response)=>{\r\n                        if(response.data.success){\r\n                            this.props.ChangeCompanyModalState(false,null,strings.Reg);\r\n                            Alert('success',strings.Succes,response.data.message);\r\n                            this.props.ChangeCompanyTableData();\r\n                        }\r\n                        else{\r\n                            console.log(response.data);\r\n                            this.props.ChangeCompanyModalState(false,null,strings.Reg);\r\n                            return Alert('warning',strings.Warning,response.data.message);\r\n                        }\r\n                    }).catch((error)=>{\r\n                        this.props.ChangeCompanyModalState(false,null,strings.Reg);\r\n                        return Alert('error',strings.Error,strings.ErrorServer);\r\n                    })\r\n                \r\n            }\r\n        });\r\n    };\r\n\r\n\r\n\r\n    changeqImage = (f)=>{\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                companyDetails:{\r\n                    ...ps.companyDetails,\r\n                    companyimage:(f.link ?`${apis.BASE}/${f.link}`:null)\r\n                },\r\n                submitDisabled:false\r\n            })\r\n        })\r\n    }\r\n\r\n    upl=()=>{\r\n        this.setState({\r\n            submitDisabled: false\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        var CompanyImageprops={\r\n            name: 'file',\r\n            action: `${apis.BASE}${apis.FILE_UPLOAD}?Token=${auth.retriveToken()}`,\r\n            listType: 'picture',\r\n        }\r\n        \r\n        return (\r\n            <div className=\"register-company-form\">\r\n                <div className=\"register-company-form-body\">\r\n                    <Form  onSubmit={this.handleSubmit}>\r\n                        <Form.Item label={strings.Name} hasFeedback className=\"input-admin-company\">\r\n                            {getFieldDecorator('name', {\r\n                                initialValue : this.props.admin.companydetails.name,\r\n                                rules: [{ required: false, message: strings.InputNameCompany, whitespace: true }],\r\n                            })(<Input />)}\r\n                        </Form.Item>\r\n                        \r\n                        <Form.Item label={strings.Logo} className=\"input-admin-company\">\r\n                            <Upload {...CompanyImageprops} beforeUpload={this.upl}>\r\n                                {getFieldDecorator('logo', {\r\n                                    initialValue : this.props.admin.companydetails.logo,\r\n                                    rules: [{ required: false, message: strings.Inputlogo, whitespace: true }],\r\n                                })(<img src={this.props.admin.companydetails.logo} style={{height: \"60px\",}} alt=\"\"/>)\r\n                                }\r\n                                \r\n                                <Button style={{marginLeft: '100px'}}>\r\n                                    <Icon type=\"upload\" /> {strings.Download}\r\n                                </Button>\r\n                                {/* <Button style={{marginLeft: '100px'}}>\r\n                                    <Icon type=\"delete\" /> {strings.Delete}\r\n                                </Button> */}\r\n                            </Upload>\r\n                                <Button style={{marginLeft: '100px'}} onClick={()=>{}}>\r\n                                    <Icon type=\"delete\" /> {strings.Delete}\r\n                                </Button>\r\n                        </Form.Item>\r\n\r\n                    \r\n                        <Form.Item label={strings.Description} hasFeedback className=\"input-admin-company\">\r\n                            {getFieldDecorator('descr', {\r\n                                initialValue : this.props.admin.companydetails.descr,\r\n                                rules: [{ required: false, message: strings.Description2, whitespace: true }],\r\n                            })(<Input />)}\r\n                        </Form.Item> \r\n\r\n                        <Form.Item label={strings.Date1} hasFeedback className=\"input-admin-company\">\r\n                            {getFieldDecorator('licFromDate', {\r\n                                initialValue : this.props.admin.companydetails.licFromDate,\r\n                                rules: [{ required: false, message: strings.InputDate, whitespace: true }],\r\n                            })(<Input type='Date'/>)}\r\n                        </Form.Item> \r\n                        <Form.Item label={strings.Date2} hasFeedback className=\"input-admin-company\">\r\n                            {getFieldDecorator('licToDate', {\r\n                                initialValue : this.props.admin.companydetails.licToDate,\r\n                                rules: [{ required: false, message: strings.InputDate, whitespace: true }],\r\n                            })(<Input type='Date'/>)}\r\n                        </Form.Item> \r\n                        <Form.Item label={strings.License} className=\"input-admin-company\">\r\n                            {getFieldDecorator('numOfLic', {\r\n                                initialValue : this.props.admin.companydetails.numOfLic,\r\n                                 rules: [{ required: false, message: strings.Amount}],\r\n                            })(<Input type='number'/>)}\r\n                        </Form.Item> \r\n                        <Form.Item label={strings.UsedUsers} className=\"input-admin-company\">\r\n                            {getFieldDecorator('numOfLicAcc', {\r\n                                initialValue : this.props.admin.companydetails.numOfLicAcc,\r\n                                 rules: [{ required: false, message: strings.Amount}],\r\n                            })(<Input type='number' />)}\r\n                        </Form.Item> \r\n                        <Form.Item label={strings.Contact} hasFeedback className=\"input-admin-company\">\r\n                            {getFieldDecorator('contact', {\r\n                                initialValue : this.props.admin.companydetails.contact,\r\n                                rules: [{ required: false, message: strings.ContactInput, whitespace: true }],\r\n                            })(<Input />)}\r\n                        </Form.Item> \r\n                        \r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                {this.props.admin.Companymode}\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin : state.admin\r\n});\r\n\r\n\r\n\r\nconst NewCompanyForm = Form.create({ name: 'register' })(NewCompany);\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeCompanyConfirmDirty,\r\n    ChangeCompanyModalState,\r\n    ChangeCompanyTableData\r\n})(NewCompanyForm);\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}