{"ast":null,"code":"import _objectSpread from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\admin\\\\chapterwindow\\\\newmaterials.js\";\nimport React, { Component, useState } from 'react';\nimport '../newCompany/newcompany.css';\nimport { Form, Input, Button, Select, Icon, Upload } from 'antd';\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport { connect } from 'react-redux';\nimport { ChangeMaterialConfirmDirty, ChangeMaterialModalState, ChangeMaterialTableData } from '../../../actions/chapterAction';\nimport Alert from '../../../components/common/alert';\nimport auth from '../../../services/AuthServices';\nconst Option = Select.Option;\n\nclass NewMaterial extends Component {\n  constructor(props) {\n    super(props);\n\n    this.MaterialImageonChange = (f, i) => {\n      var newSlides = [...this.state.materialDetails.slides];\n\n      if (!f) {\n        delete newSlides[i].image;\n        newSlides[i].image = null;\n      } else {\n        newSlides[i] = _objectSpread({}, this.state.materialDetails.slides[i], {\n          image: \"\".concat(apis.BASE, \"/\").concat(f.link)\n        });\n      }\n\n      this.setState({\n        submitDisabled: false\n      });\n\n      if ((newSlides[i].image === 'undefined' || newSlides[i].image === undefined || newSlides[i].image === null || newSlides[i].image === 'null') && (newSlides[i].slidebody === 'undefined' || newSlides[i].slidebody === undefined || newSlides[i].slidebody === 'null' || newSlides[i].slidebody === '' || newSlides[i].slidebody === null)) {\n        newSlides[i] = _objectSpread({}, this.state.materialDetails.slides[i]);\n      }\n\n      this.setState((ps, pp) => {\n        return {\n          materialDetails: _objectSpread({}, ps.materialDetails, {\n            slides: newSlides\n          })\n        };\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        console.log(values);\n\n        if (!err) {\n          var sl = [];\n          console.log('Полученные значения формы: ', values);\n          this.state.materialDetails.slides.forEach((element, i) => {\n            sl.push({\n              slidebody: element.slidebody,\n              image: element.image\n            });\n\n            if ((element.image === 'undefined' || element.image === undefined || element.image === null || element.image === 'null') && (element.body === '' || element.body === null || element.body === 'null' || element.body === 'undefined' || element.body === undefined)) {\n              f = 0;\n            }\n\n            if (element.isAnswer) {\n              ans = ans + 1;\n            }\n          });\n\n          if (f) {\n            if (!ans) {\n              Alert('warning', 'Предупреждение!', 'Должен быть хотя бы один правильный ответ');\n            } else {\n              this.setState({\n                adding: true\n              });\n              SecurePost({\n                url: apis.CREATE_QUESTIONS,\n                data: {\n                  body: values.questionbody,\n                  options: opts,\n                  quesimg: this.state.questionDetails.questionimage,\n                  chapter: values.chapter,\n                  materials: values.materials,\n                  explanation: values.explanation,\n                  weightage: values.waitage\n                }\n              }).then(response => {\n                console.log(response);\n                this.setState({\n                  adding: false\n                });\n\n                if (response.data.success) {\n                  this.props.ChangeQuestionModalState(false);\n                  Alert('success', 'Успешно', response.data.message);\n                  this.props.ChangeQuestionTableData(this.props.trainer.selectedChapter);\n                  this.props.ChangeQuestionTableData(this.props.trainer.selectedMaterials);\n                } else {\n                  this.props.ChangeQuestionModalState(false);\n                  this.props.form.resetFields();\n                  return Alert('warning', 'Предупреждение!', response.data.message);\n                }\n              }).catch(error => {\n                console.log(error);\n                this.props.form.resetFields();\n                this.setState({\n                  adding: false,\n                  questionDetails: {\n                    questionimage: null,\n                    options: [{\n                      image: null,\n                      body: null,\n                      isAnswer: false\n                    }, {\n                      image: null,\n                      body: null,\n                      isAnswer: false\n                    }, {\n                      image: null,\n                      body: null,\n                      isAnswer: false\n                    }, {\n                      image: null,\n                      body: null,\n                      isAnswer: false\n                    }]\n                  }\n                });\n                this.props.ChangeQuestionModalState(false);\n                return Alert('error', 'Ошибка!', 'Ошибка сервера');\n              });\n            }\n          } else {\n            Alert('warning', 'Предупреждение!', 'Пожалуйста, заполните все варианты');\n          }\n        }\n      });\n    };\n\n    this.changeqImage = f => {\n      this.setState((ps, pp) => {\n        return {\n          materialDetails: _objectSpread({}, ps.materialDetails, {\n            materialimage: f.link ? \"\".concat(apis.BASE, \"/\").concat(f.link) : null\n          }),\n          submitDisabled: false\n        };\n      });\n    };\n\n    this.upl = () => {\n      this.setState({\n        submitDisabled: false\n      });\n    };\n\n    this.state = {\n      materialDetails: {\n        //materialimage: this.props.chapter.materialdetails.slides,\n        slides: [{\n          slidebody: null,\n          image: null\n        }]\n      },\n      submitDisabled: false\n    };\n  } // MaterialImageonChange = (f)=>{\n  //     var newslide = this.state.materialDetails.materialimage\n  //     if(!f){\n  //         newslide=null\n  //     }\n  //     else{\n  //         newslide=`${apis.BASE}/${f.link}`\n  //     }\n  //     this.setState({\n  //         submitDisabled:false\n  //     })\n  //     if(newslide==='undefined' || newslide===undefined || newslide===null || newslide==='null') {\n  //         //(newOptions[i].body==='undefined' || newOptions[i].body===undefined || newOptions[i].body==='null' || newOptions[i].body==='' || newOptions[i].body===null)){\n  //         newslide=this.state.materialDetails.materialimage;    \n  //     }\n  //     this.setState((ps,pp)=>{\n  //         return({\n  //             materialDetails:{\n  //                 ...ps.materialDetails,\n  //                 materialimage:newslide\n  //             }\n  //         })\n  //     })\n  // }\n\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    var MaterialImageprops = {\n      name: 'file',\n      action: \"\".concat(apis.BASE).concat(apis.FILE_UPLOAD, \"?Token=\").concat(auth.retriveToken()),\n      listType: 'picture'\n    };\n    return React.createElement(\"div\", {\n      className: \"register-company-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"register-company-form-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n      hasFeedback: true,\n      className: \"input-admin-company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, getFieldDecorator('topic', {\n      initialValue: this.props.chapter.materialdetails.topic,\n      rules: [{\n        required: true,\n        message: 'Пожалуйста, введите название!',\n        whitespace: true\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Material\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(Upload, Object.assign({}, MaterialImageprops, {\n      beforeUpload: this.upl,\n      onRemove: f => this.MaterialImageonChange(null),\n      onSuccess: f => this.MaterialImageonChange(f),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }), getFieldDecorator('slides', {\n      initialValue: this.props.chapter.materialdetails.slides,\n      rules: [{\n        required: false,\n        message: 'Пожалуйста, загрузите логотип вашей компании!',\n        whitespace: true\n      }]\n    })(React.createElement(\"img\", {\n      src: this.props.chapter.materialdetails.slides,\n      style: {\n        width: \"60px\",\n        height: \"60px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    })), React.createElement(Button, {\n      style: {\n        marginLeft: '100px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }), \" \\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C\"))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, this.props.chapter.Materialmode)))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  chapter: state.chapter\n});\n\nconst NewMaterialForm = Form.create({\n  name: 'register'\n})(NewMaterial);\nexport default connect(mapStateToProps, {\n  ChangeMaterialConfirmDirty,\n  ChangeMaterialModalState,\n  ChangeMaterialTableData\n})(NewMaterialForm);","map":{"version":3,"sources":["C:\\React_project\\EduTest\\frontend\\src\\components\\admin\\chapterwindow\\newmaterials.js"],"names":["React","Component","useState","Form","Input","Button","Select","Icon","Upload","SecurePost","apis","connect","ChangeMaterialConfirmDirty","ChangeMaterialModalState","ChangeMaterialTableData","Alert","auth","Option","NewMaterial","constructor","props","MaterialImageonChange","f","i","newSlides","state","materialDetails","slides","image","BASE","link","setState","submitDisabled","undefined","slidebody","ps","pp","handleSubmit","e","preventDefault","form","validateFieldsAndScroll","err","values","console","log","sl","forEach","element","push","body","isAnswer","ans","adding","url","CREATE_QUESTIONS","data","questionbody","options","opts","quesimg","questionDetails","questionimage","chapter","materials","explanation","weightage","waitage","then","response","success","ChangeQuestionModalState","message","ChangeQuestionTableData","trainer","selectedChapter","selectedMaterials","resetFields","catch","error","changeqImage","materialimage","upl","render","getFieldDecorator","MaterialImageprops","name","action","FILE_UPLOAD","retriveToken","listType","initialValue","materialdetails","topic","rules","required","whitespace","width","height","marginLeft","Materialmode","mapStateToProps","NewMaterialForm","create"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\r\nimport '../newCompany/newcompany.css';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Select,\r\n    Icon,\r\n    Upload\r\n} from 'antd';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    ChangeMaterialConfirmDirty,\r\n    ChangeMaterialModalState,\r\n    ChangeMaterialTableData\r\n} from '../../../actions/chapterAction';\r\nimport Alert from '../../../components/common/alert';\r\nimport auth from '../../../services/AuthServices';\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nclass NewMaterial extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            materialDetails : {\r\n                //materialimage: this.props.chapter.materialdetails.slides,\r\n                slides :[\r\n                    {\r\n                        slidebody : null,\r\n                        image :null,\r\n                    },\r\n                ], \r\n            },\r\n            submitDisabled:false,\r\n        }\r\n    }\r\n\r\n    // MaterialImageonChange = (f)=>{\r\n    //     var newslide = this.state.materialDetails.materialimage\r\n    //     if(!f){\r\n    //         newslide=null\r\n    //     }\r\n    //     else{\r\n    //         newslide=`${apis.BASE}/${f.link}`\r\n    //     }\r\n    //     this.setState({\r\n    //         submitDisabled:false\r\n    //     })\r\n    //     if(newslide==='undefined' || newslide===undefined || newslide===null || newslide==='null') {\r\n    //         //(newOptions[i].body==='undefined' || newOptions[i].body===undefined || newOptions[i].body==='null' || newOptions[i].body==='' || newOptions[i].body===null)){\r\n    //         newslide=this.state.materialDetails.materialimage;    \r\n    //     }\r\n    //     this.setState((ps,pp)=>{\r\n    //         return({\r\n    //             materialDetails:{\r\n    //                 ...ps.materialDetails,\r\n    //                 materialimage:newslide\r\n    //             }\r\n    //         })\r\n    //     })\r\n    // }\r\n\r\n\r\n    MaterialImageonChange = (f,i)=>{\r\n        var newSlides = [...this.state.materialDetails.slides]\r\n        if(!f){\r\n            delete newSlides[i].image\r\n            newSlides[i].image=null\r\n        }\r\n        else{\r\n            newSlides[i]={\r\n                ...this.state.materialDetails.slides[i],\r\n                image :`${apis.BASE}/${f.link}`\r\n            }\r\n        }\r\n        this.setState({\r\n            submitDisabled:false\r\n        })\r\n        if((newSlides[i].image==='undefined' || newSlides[i].image===undefined || newSlides[i].image===null || newSlides[i].image==='null') && \r\n            (newSlides[i].slidebody==='undefined' || newSlides[i].slidebody===undefined || newSlides[i].slidebody==='null' || newSlides[i].slidebody==='' || newSlides[i].slidebody===null)){\r\n                newSlides[i]={\r\n                    ...this.state.materialDetails.slides[i],\r\n                }\r\n        }\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                materialDetails:{\r\n                    ...ps.materialDetails,\r\n                    slides:newSlides\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    \r\n    // handleSubmit = e => {\r\n    //     e.preventDefault();\r\n    //     this.props.form.validateFieldsAndScroll((err, values) => {\r\n    //         if (!err) {\r\n    //             console.log('Полученные значения формы: ', values);\r\n                \r\n    //                 SecurePost({\r\n    //                     url : `${apis.CREATE_MATERIAL}`,\r\n    //                     data : {\r\n    //                         _id : this.props.chapter.materialId,\r\n    //                         topic :values.topic,\r\n    //                         slides : this.state.materialDetails.materialimage,\r\n    //                     }\r\n    //                 }).then((response)=>{\r\n    //                     if(response.data.success){\r\n    //                         this.props.ChangeMaterialModalState(false,null,'Регистрация');\r\n    //                         Alert('success','Успешно',response.data.message);\r\n    //                         this.props.ChangeMaterialTableData();\r\n    //                     }\r\n    //                     else{\r\n    //                         console.log(response.data);\r\n    //                         this.props.ChangeMaterialModalState(false,null,'Регистрация');\r\n    //                         return Alert('warning','Предупреждение!',response.data.message);\r\n    //                     }\r\n    //                 }).catch((error)=>{\r\n    //                     this.props.ChangeMaterialModalState(false,null,'Регистрация');\r\n    //                     return Alert('error','Ошибка!','Ошибка сервера');\r\n    //                 })\r\n                \r\n    //         }\r\n    //     });\r\n    // };\r\n\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            console.log(values);\r\n            if (!err) {\r\n                var sl=[]\r\n                console.log('Полученные значения формы: ', values);\r\n                this.state.materialDetails.slides.forEach((element,i) => {\r\n                    sl.push({\r\n                        slidebody:element.slidebody,\r\n                        image:element.image,\r\n                    });\r\n                    if((element.image==='undefined' || element.image===undefined || element.image===null || element.image==='null')&&(element.body==='' ||element.body===null || element.body==='null' || element.body==='undefined' || element.body===undefined )){\r\n                        f=0;\r\n                    }\r\n                    if(element.isAnswer){\r\n                        ans=ans+1\r\n                    }\r\n                })\r\n                if(f){\r\n                    if(!ans){\r\n                        Alert('warning','Предупреждение!','Должен быть хотя бы один правильный ответ');\r\n                    }\r\n                    else{\r\n                        this.setState({\r\n                            adding:true\r\n                        });\r\n                        SecurePost({\r\n                            url:apis.CREATE_QUESTIONS,\r\n                            data:{\r\n                                body:values.questionbody,\r\n                                options:opts,\r\n                                quesimg:this.state.questionDetails.questionimage,\r\n                                chapter: values.chapter,\r\n                                materials: values.materials,\r\n                                explanation:values.explanation,\r\n                                weightage:values.waitage,\r\n                            }\r\n                        }).then((response)=>{\r\n                            console.log(response);\r\n                            this.setState({\r\n                                adding:false\r\n                            });\r\n                            if(response.data.success){\r\n                                this.props.ChangeQuestionModalState(false);\r\n                                Alert('success','Успешно',response.data.message);\r\n                                this.props.ChangeQuestionTableData(this.props.trainer.selectedChapter);\r\n                                this.props.ChangeQuestionTableData(this.props.trainer.selectedMaterials);\r\n                            }\r\n                            else{\r\n                                this.props.ChangeQuestionModalState(false);\r\n                                this.props.form.resetFields();\r\n                                return Alert('warning','Предупреждение!',response.data.message);\r\n                            }\r\n\r\n                        }).catch((error)=>{\r\n                            console.log(error);\r\n                            this.props.form.resetFields();\r\n                            this.setState({\r\n                                adding:false,\r\n                                questionDetails:{\r\n                                    questionimage:null,\r\n                                    options :[\r\n                                        {\r\n                                            image :null,\r\n                                            body : null,\r\n                                            isAnswer :false\r\n                                        },\r\n                                        {\r\n                                            image :null,\r\n                                            body : null,\r\n                                            isAnswer :false\r\n                                        },\r\n                                        {\r\n                                            image :null,\r\n                                            body : null,\r\n                                            isAnswer :false\r\n                                        },\r\n                                        {\r\n                                            image :null,\r\n                                            body : null,\r\n                                            isAnswer :false\r\n                                        }\r\n                                    ] ,  \r\n                                }\r\n                            });\r\n                            this.props.ChangeQuestionModalState(false);\r\n                            return Alert('error','Ошибка!','Ошибка сервера');\r\n                        })\r\n                        \r\n                    }\r\n                }\r\n                else{\r\n                    Alert('warning','Предупреждение!','Пожалуйста, заполните все варианты');\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    changeqImage = (f)=>{\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                materialDetails:{\r\n                    ...ps.materialDetails,\r\n                    materialimage:(f.link ?`${apis.BASE}/${f.link}`:null)\r\n                },\r\n                submitDisabled:false\r\n            })\r\n        })\r\n    }\r\n    upl=()=>{\r\n        this.setState({\r\n            submitDisabled: false\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        var MaterialImageprops={\r\n            name: 'file',\r\n            action: `${apis.BASE}${apis.FILE_UPLOAD}?Token=${auth.retriveToken()}`,\r\n            listType: 'picture',\r\n        }\r\n        \r\n        return (\r\n            <div className=\"register-company-form\">\r\n                <div className=\"register-company-form-body\">\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <Form.Item label=\"Название\" hasFeedback className=\"input-admin-company\">\r\n                            {getFieldDecorator('topic', {\r\n                                initialValue : this.props.chapter.materialdetails.topic,\r\n                                rules: [{ required: true, message: 'Пожалуйста, введите название!', whitespace: true }],\r\n                            })(<Input />)}\r\n                        </Form.Item>\r\n                        \r\n                        <Form.Item label=\"Material\">\r\n                        <Upload {...MaterialImageprops} beforeUpload={this.upl} onRemove={(f)=>this.MaterialImageonChange(null)} onSuccess={(f)=>this.MaterialImageonChange(f)}>\r\n                                {getFieldDecorator('slides', {\r\n                                    initialValue : this.props.chapter.materialdetails.slides,\r\n                                    rules: [{ required: false, message: 'Пожалуйста, загрузите логотип вашей компании!', whitespace: true }],\r\n                                })(<img src={this.props.chapter.materialdetails.slides} style={{width: \"60px\",height: \"60px\",}}/>)\r\n                                }\r\n                                \r\n                                <Button style={{marginLeft: '100px'}}>\r\n                                    <Icon type=\"upload\" /> Загрузить\r\n                                </Button>\r\n                                \r\n                            </Upload>\r\n                        </Form.Item>\r\n                        \r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                {this.props.chapter.Materialmode}\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    chapter : state.chapter\r\n});\r\n\r\n\r\n\r\nconst NewMaterialForm = Form.create({ name: 'register' })(NewMaterial);\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeMaterialConfirmDirty,\r\n    ChangeMaterialModalState,\r\n    ChangeMaterialTableData\r\n})(NewMaterialForm);\r\n\r\n"]},"metadata":{},"sourceType":"module"}