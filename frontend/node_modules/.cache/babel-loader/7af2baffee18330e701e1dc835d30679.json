{"ast":null,"code":"var _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\admin\\\\Division\\\\newdivision.js\";\nimport React, { Component } from 'react';\nimport './newdivision.css';\nimport { Form, Input, Button, Select } from 'antd';\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport { connect } from 'react-redux';\nimport { ChangeDivisionConfirmDirty, ChangeDivisionModalState, ChangeDivisionTableData } from '../../../actions/adminAction';\nimport Alert from '../../../components/common/alert';\nimport LocalizedStrings from 'react-localization';\nlet strings = new LocalizedStrings({\n  ru: {\n    AddForm: \"Полученные значения формы: \",\n    Reg: \"Регистрация\",\n    Succes: \"Успешно\",\n    Warning: \"Предупреждение\",\n    Error: \"Ошибка\",\n    ErrorServer: \"Ошибка сервера\",\n    Name: \"Название\",\n    AddName: \"Пожалуйста, введите название подразделения!\",\n    Description: \"Описание\",\n    Company: \"Компания\",\n    AddCompany: \"Пожалуйста, введите название компании!\",\n    SelectCompany: \"Выберите компанию\"\n  },\n  kz: {\n    AddForm: \"\",\n    Reg: \"\",\n    Succes: \"\",\n    Warning: \"\",\n    Error: \"\",\n    ErrorServer: \"\",\n    Name: \"\",\n    AddName: \"\",\n    Description: \"\",\n    Company: \"\",\n    AddCompany: \"\",\n    SelectCompany: \"\"\n  }\n});\nconst Option = Select.Option;\n\nclass NewDivision extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          console.log(strings.AddForm, values);\n          SecurePost({\n            url: \"\".concat(apis.CREATE_DIVISION),\n            data: {\n              _id: this.props.admin.divisionId,\n              name: values.name,\n              description: values.description,\n              company: values.company\n            }\n          }).then(response => {\n            if (response.data.success) {\n              this.props.ChangeDivisionModalState(false, null, strings.Reg);\n              Alert('success', strings.Succes, response.data.message);\n              this.props.ChangeDivisionTableData();\n            } else {\n              console.log(response.data);\n              this.props.ChangeDivisionModalState(false, null, strings.Reg);\n              return Alert('warning', strings.Warning, response.data.message);\n            }\n          }).catch(error => {\n            this.props.ChangeDivisionModalState(false, null, strings.Reg);\n            return Alert('error', strings.Error, strings.ErrorServer);\n          });\n        }\n      });\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register-division-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register-division-form-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      label: strings.Name,\n      hasFeedback: true,\n      className: \"input-admin-division\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, getFieldDecorator('name', {\n      initialValue: this.props.admin.divisiondetails.name,\n      rules: [{\n        required: true,\n        message: strings.AddName,\n        whitespace: true\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: strings.Description,\n      hasFeedback: true,\n      className: \"input-admin-division\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, getFieldDecorator('description', {\n      initialValue: this.props.admin.divisiondetails.description,\n      rules: [{\n        required: false,\n        message: strings.Description,\n        whitespace: true\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: strings.Company,\n      hasFeedback: true,\n      className: \"input-admin-division\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, getFieldDecorator('company', {\n      initialValue: this.props.admin.divisiondetails.company,\n      rules: [{\n        required: false,\n        message: strings.AddCompany\n      }]\n    })( /*#__PURE__*/React.createElement(Select, {\n      showSearch: true,\n      style: {\n        width: '100%'\n      },\n      placeholder: strings.SelectCompany,\n      optionFilterProp: \"s\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, this.props.admin.companyTableData.map((d, i) => /*#__PURE__*/React.createElement(Option, {\n      key: d._id,\n      s: d.name,\n      value: d._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, d.name))))), /*#__PURE__*/React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, this.props.admin.Divisionmode)))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  admin: state.admin\n});\n\nconst NewDivisionForm = Form.create({\n  name: 'register'\n})(NewDivision);\nexport default connect(mapStateToProps, {\n  ChangeDivisionConfirmDirty,\n  ChangeDivisionModalState,\n  ChangeDivisionTableData\n})(NewDivisionForm);","map":{"version":3,"names":["React","Component","Form","Input","Button","Select","SecurePost","apis","connect","ChangeDivisionConfirmDirty","ChangeDivisionModalState","ChangeDivisionTableData","Alert","LocalizedStrings","strings","ru","AddForm","Reg","Succes","Warning","Error","ErrorServer","Name","AddName","Description","Company","AddCompany","SelectCompany","kz","Option","NewDivision","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","console","log","url","CREATE_DIVISION","data","_id","admin","divisionId","name","description","company","then","response","success","message","catch","error","render","getFieldDecorator","initialValue","divisiondetails","rules","required","whitespace","width","companyTableData","map","d","i","Divisionmode","mapStateToProps","state","NewDivisionForm","create"],"sources":["C:/React_project/EduTest/frontend/src/components/admin/Division/newdivision.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport './newdivision.css';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Select\r\n} from 'antd';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    ChangeDivisionConfirmDirty,\r\n    ChangeDivisionModalState,\r\n    ChangeDivisionTableData\r\n} from '../../../actions/adminAction';\r\nimport Alert from '../../../components/common/alert';\r\nimport  LocalizedStrings  from  'react-localization' ;\r\nlet strings = new LocalizedStrings({\r\n  ru:{\r\n    AddForm: \"Полученные значения формы: \",\r\n    Reg: \"Регистрация\",\r\n    Succes: \"Успешно\",\r\n    Warning: \"Предупреждение\",\r\n    Error: \"Ошибка\",\r\n    ErrorServer: \"Ошибка сервера\",\r\n    Name: \"Название\",\r\n    AddName: \"Пожалуйста, введите название подразделения!\",\r\n    Description: \"Описание\",\r\n    Company: \"Компания\",\r\n    AddCompany: \"Пожалуйста, введите название компании!\",\r\n    SelectCompany: \"Выберите компанию\"\r\n  },\r\n  kz: {\r\n    AddForm: \"\",\r\n    Reg: \"\",\r\n    Succes: \"\",\r\n    Warning: \"\",\r\n    Error: \"\",\r\n    ErrorServer: \"\",\r\n    Name: \"\",\r\n    AddName: \"\",\r\n    Description: \"\",\r\n    Company: \"\",\r\n    AddCompany: \"\",\r\n    SelectCompany: \"\"\r\n  }\r\n });\r\n\r\n\r\nconst { Option } = Select;\r\nclass NewDivision extends Component {\r\n\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                console.log(strings.AddForm, values);\r\n                \r\n                    SecurePost({\r\n                        url : `${apis.CREATE_DIVISION}`,\r\n                        data : {\r\n                            _id : this.props.admin.divisionId,\r\n                            name : values.name,                            \r\n                            description : values.description,\r\n                            company : values.company\r\n                        }\r\n                    }).then((response)=>{\r\n                        if(response.data.success){\r\n                            this.props.ChangeDivisionModalState(false,null,strings.Reg);\r\n                            Alert('success',strings.Succes,response.data.message);\r\n                            this.props.ChangeDivisionTableData();\r\n                        }\r\n                        else{\r\n                            console.log(response.data);\r\n                            this.props.ChangeDivisionModalState(false,null,strings.Reg);\r\n                            return Alert('warning',strings.Warning,response.data.message);\r\n                        }\r\n                    }).catch((error)=>{\r\n                        this.props.ChangeDivisionModalState(false,null,strings.Reg);\r\n                        return Alert('error',strings.Error,strings.ErrorServer);\r\n                    })\r\n                \r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div className=\"register-division-form\">\r\n                <div className=\"register-division-form-body\">\r\n                    <Form  onSubmit={this.handleSubmit}>\r\n                        <Form.Item label={strings.Name} hasFeedback className=\"input-admin-division\">\r\n                            {getFieldDecorator('name', {\r\n                                initialValue : this.props.admin.divisiondetails.name,\r\n                                rules: [{ required: true, message: strings.AddName, whitespace: true }],\r\n                            })(<Input />)}\r\n                        </Form.Item>\r\n                    \r\n                        <Form.Item label={strings.Description} hasFeedback className=\"input-admin-division\">\r\n                            {getFieldDecorator('description', {\r\n                                initialValue : this.props.admin.divisiondetails.description,\r\n                                rules: [\r\n                                    {\r\n                                        required: false,\r\n                                        message: strings.Description,\r\n                                        whitespace: true\r\n                                    },\r\n                                ],\r\n                            })(<Input />)}\r\n                        </Form.Item> \r\n\r\n                        <Form.Item label={strings.Company} hasFeedback className=\"input-admin-division\">\r\n                            {getFieldDecorator('company', {\r\n                                initialValue : this.props.admin.divisiondetails.company,\r\n                                rules: [{ required: false, message: strings.AddCompany}],\r\n                            })(\r\n                            <Select \r\n                                showSearch\r\n                                style = {{width:'100%'}}\r\n                                placeholder={strings.SelectCompany}\r\n                                optionFilterProp= \"s\"\r\n                            >\r\n                                {\r\n                                    this.props.admin.companyTableData.map((d,i)=><Option key={d._id} s={d.name} value={d._id}>{d.name}</Option>)\r\n                                }\r\n\r\n                            </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        \r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                {this.props.admin.Divisionmode}\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin : state.admin\r\n});\r\n\r\nconst NewDivisionForm = Form.create({ name: 'register' })(NewDivision);\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeDivisionConfirmDirty,\r\n    ChangeDivisionModalState,\r\n    ChangeDivisionTableData\r\n})(NewDivisionForm);\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}