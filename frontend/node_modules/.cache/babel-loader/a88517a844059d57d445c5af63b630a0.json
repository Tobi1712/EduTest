{"ast":null,"code":"import _objectSpread from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nconst initialState = {\n  NewQuestionmodalOpened: false,\n  QuestionmodalOpened: false,\n  AllQuestionconfirmDirty: false,\n  QuestionsearchText: '',\n  QuestionTableLoading: false,\n  QuestionTableData: [],\n  questionId: null,\n  Questionmode: \"Создать вопрос\",\n  questiondetails: {},\n  //selectedSubjects:[],\n  // selectedChapter:[],\n  // selectedMaterials:[],\n  QuestionFormData: {},\n  // fifthoptioAddButtonVisible:true,\n  TestTableLoading: false,\n  TestTableData: [],\n  DataActiveTestDetails: {\n    testDetailsId: null,\n    testquestions: []\n  },\n  NewTestmodalOpened: false,\n  Createtestmode: 'Создать',\n  OptionmodalOpened: false,\n  optionId: null,\n  Optionmode: 'Создать',\n  optiondetails: {},\n  OptionconfirmDirty: false,\n  OptionsearchText: '',\n  OptionTableLoading: false,\n  OptionTableData: []\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    // case 'CHANGE_QUESTION_MODAL_STATE':\n    //     return {\n    //         ...state,\n    //         NewQuestionmodalOpened : action.payload1,\n    //     }\n    case 'CHANGE_QUESTION_MODAL_STATE':\n      return _objectSpread({}, state, {\n        QuestionmodalOpened: action.payload1,\n        questionId: action.payload2,\n        Questionmode: action.payload3,\n        questioneditdetails: action.payload4\n      });\n\n    case 'CHANGE_QUESTION_FORM_CONFIRMDIRTY':\n      return _objectSpread({}, state, {\n        AllQuestionconfirmDirty: action.payload\n      });\n\n    case 'CHANGE_QUESTION_SEARCH_TEXT':\n      return _objectSpread({}, state, {\n        QuestionsearchText: action.payload\n      });\n\n    case 'CHANGE_QUESTION_TABLE_LOADING_STATUS':\n      return _objectSpread({}, state, {\n        QuestionTableLoading: action.payload1,\n        QuestionTableData: action.payload2 // case 'ADD_FIFTH_OPTION':\n        //     return {\n        //         ...state,\n        //         QuestionFormData:{\n        //             ...state.QuestionFormData,\n        //             options:[\n        //                 ...state.QuestionFormData.options,\n        //                 {\n        //                     image :null,\n        //                     body : null,\n        //                     isAnswer :false\n        //                 }\n        //             ]\n        //         },\n        //         // fifthoptioAddButtonVisible:false\n        //     }\n        // case 'CHANGE_SELECTED_SUBJECT':\n        //     return {\n        //         ...state,\n        //         selectedSubjects : action.payload\n        //     }\n        // case 'CHANGE_SELECTED_CHAPTER':\n        //     return {\n        //         ...state,\n        //         selectedChapter : action.payload\n        //     }\n        //     case 'CHANGE_SELECTED_MATERIAL':\n        //         return {\n        //             ...state,\n        //             selectedMaterials : action.payload\n        //         }\n\n      });\n\n    case 'CHANGE_QUESTION_FORM_DATA':\n      return _objectSpread({}, state, {\n        QuestionFormData: action.payload\n      });\n\n    case 'CHANGE_TEST_DETAILS_MODAL_STATE':\n      return _objectSpread({}, state, {\n        TestDetailsmodalOpened: action.payload1,\n        DataActiveTestDetails: _objectSpread({}, state.DataActiveTestDetails, {\n          testDetailsId: action.payload2\n        })\n      });\n\n    case 'NEW_TEST_MODAL_STATE':\n      return _objectSpread({}, state, {\n        NewTestmodalOpened: action.payload1,\n        Createtestmode: action.payload2\n      });\n\n    case 'CHANGE_TEST_SEARCH_TEXT':\n      return _objectSpread({}, state, {\n        TestsearchText: action.payload\n      });\n\n    case 'CHANGE_TEST_TABLE_LOADING_STATUS':\n      return _objectSpread({}, state, {\n        TestTableLoading: action.payload1,\n        TestTableData: action.payload2\n      });\n\n    case 'CHANGE_CURRENT_ACTIVE_TEST_QUESTION':\n      return _objectSpread({}, state, {\n        DataActiveTestDetails: _objectSpread({}, state.DataActiveTestDetails, {\n          testquestions: action.payload\n        })\n      });\n\n    case 'CHANGE_OPTION_MODAL_STATE':\n      return _objectSpread({}, state, {\n        OptionmodalOpened: action.payload1,\n        optionId: action.payload2,\n        Optionmode: action.payload3,\n        optiondetails: action.payload4\n      });\n\n    case 'CHANGE_OPTION_FORM_CONFIRMDIRTY':\n      return _objectSpread({}, state, {\n        OptionconfirmDirty: action.payload\n      });\n\n    case 'CHANGE_OPTION_SEARCH_TEXT':\n      return _objectSpread({}, state, {\n        OptionsearchText: action.payload\n      });\n\n    case 'CHANGE_OPTION_TABLE_LOADING_STATUS':\n      return _objectSpread({}, state, {\n        optionTableLoadingStatus: action.payload1,\n        optionTableData: action.payload2\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:\\React_project\\EduTest\\frontend\\src\\reducers\\trainer.js"],"names":["initialState","NewQuestionmodalOpened","QuestionmodalOpened","AllQuestionconfirmDirty","QuestionsearchText","QuestionTableLoading","QuestionTableData","questionId","Questionmode","questiondetails","QuestionFormData","TestTableLoading","TestTableData","DataActiveTestDetails","testDetailsId","testquestions","NewTestmodalOpened","Createtestmode","OptionmodalOpened","optionId","Optionmode","optiondetails","OptionconfirmDirty","OptionsearchText","OptionTableLoading","OptionTableData","state","action","type","payload1","payload2","payload3","questioneditdetails","payload4","payload","TestDetailsmodalOpened","TestsearchText","optionTableLoadingStatus","optionTableData"],"mappings":"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","sourcesContent":["const initialState = {\r\n    NewQuestionmodalOpened : false,\r\n    QuestionmodalOpened : false,\r\n    AllQuestionconfirmDirty: false,\r\n    QuestionsearchText : '',\r\n    QuestionTableLoading : false, \r\n    QuestionTableData : [],\r\n    questionId : null,\r\n    Questionmode : \"Создать вопрос\",\r\n    questiondetails : {},\r\n    //selectedSubjects:[],\r\n    // selectedChapter:[],\r\n    // selectedMaterials:[],\r\n    QuestionFormData:{},\r\n    // fifthoptioAddButtonVisible:true,\r\n    TestTableLoading:false,\r\n    TestTableData:[],\r\n    DataActiveTestDetails : {\r\n        testDetailsId : null,\r\n        testquestions :[]\r\n    },\r\n    NewTestmodalOpened : false,\r\n    Createtestmode : 'Создать',\r\n\r\n    OptionmodalOpened : false,\r\n    optionId : null,\r\n    Optionmode : 'Создать',\r\n    optiondetails : {},\r\n    OptionconfirmDirty: false,\r\n    OptionsearchText : '',\r\n    OptionTableLoading : false, \r\n    OptionTableData : [],\r\n\r\n}\r\n\r\n\r\nexport default (state = initialState, action )=>{\r\n    switch(action.type){\r\n        // case 'CHANGE_QUESTION_MODAL_STATE':\r\n        //     return {\r\n        //         ...state,\r\n        //         NewQuestionmodalOpened : action.payload1,\r\n        //     }\r\n        case 'CHANGE_QUESTION_MODAL_STATE':\r\n            return {\r\n                ...state,\r\n                QuestionmodalOpened : action.payload1,\r\n                questionId : action.payload2,\r\n                Questionmode : action.payload3,\r\n                questioneditdetails : action.payload4\r\n            }\r\n\r\n        case 'CHANGE_QUESTION_FORM_CONFIRMDIRTY':\r\n            return {\r\n                ...state,\r\n                AllQuestionconfirmDirty : action.payload\r\n            }\r\n        case 'CHANGE_QUESTION_SEARCH_TEXT':\r\n            return {\r\n                ...state,\r\n                QuestionsearchText : action.payload\r\n            }\r\n        case 'CHANGE_QUESTION_TABLE_LOADING_STATUS':\r\n            return {\r\n                ...state,\r\n                QuestionTableLoading : action.payload1,\r\n                QuestionTableData : action.payload2\r\n            }\r\n        // case 'ADD_FIFTH_OPTION':\r\n        //     return {\r\n        //         ...state,\r\n        //         QuestionFormData:{\r\n        //             ...state.QuestionFormData,\r\n        //             options:[\r\n        //                 ...state.QuestionFormData.options,\r\n        //                 {\r\n        //                     image :null,\r\n        //                     body : null,\r\n        //                     isAnswer :false\r\n        //                 }\r\n        //             ]\r\n        //         },\r\n        //         // fifthoptioAddButtonVisible:false\r\n        //     }\r\n        // case 'CHANGE_SELECTED_SUBJECT':\r\n        //     return {\r\n        //         ...state,\r\n        //         selectedSubjects : action.payload\r\n        //     }\r\n        // case 'CHANGE_SELECTED_CHAPTER':\r\n        //     return {\r\n        //         ...state,\r\n        //         selectedChapter : action.payload\r\n        //     }\r\n        //     case 'CHANGE_SELECTED_MATERIAL':\r\n        //         return {\r\n        //             ...state,\r\n        //             selectedMaterials : action.payload\r\n        //         }\r\n        case 'CHANGE_QUESTION_FORM_DATA':\r\n            return{\r\n                ...state,\r\n                QuestionFormData : action.payload\r\n            }\r\n        case 'CHANGE_TEST_DETAILS_MODAL_STATE':\r\n            return {\r\n                ...state,\r\n                TestDetailsmodalOpened : action.payload1,\r\n                DataActiveTestDetails :{\r\n                    ...state.DataActiveTestDetails,\r\n                    testDetailsId : action.payload2\r\n                }\r\n            }\r\n\r\n        case 'NEW_TEST_MODAL_STATE':\r\n            return{\r\n                ...state,\r\n                NewTestmodalOpened : action.payload1,\r\n                Createtestmode : action.payload2\r\n            }\r\n\r\n        case 'CHANGE_TEST_SEARCH_TEXT':\r\n            return {\r\n                ...state,\r\n                TestsearchText : action.payload\r\n            }\r\n        case 'CHANGE_TEST_TABLE_LOADING_STATUS':\r\n            return {\r\n                ...state,\r\n                TestTableLoading : action.payload1,\r\n                TestTableData :action.payload2\r\n            }\r\n        case 'CHANGE_CURRENT_ACTIVE_TEST_QUESTION':\r\n            return{\r\n                ...state,\r\n                DataActiveTestDetails:{\r\n                    ...state.DataActiveTestDetails,\r\n                    testquestions:action.payload\r\n                }\r\n            }\r\n\r\n                    \r\n            case 'CHANGE_OPTION_MODAL_STATE':\r\n                return {\r\n                    ...state,\r\n                    OptionmodalOpened : action.payload1,\r\n                    optionId : action.payload2,\r\n                    Optionmode : action.payload3,\r\n                    optiondetails : action.payload4\r\n                }\r\n    \r\n            case 'CHANGE_OPTION_FORM_CONFIRMDIRTY':\r\n                return {\r\n                    ...state,\r\n                    OptionconfirmDirty : action.payload\r\n                }\r\n    \r\n            case 'CHANGE_OPTION_SEARCH_TEXT':\r\n                return {\r\n                    ...state,\r\n                    OptionsearchText : action.payload\r\n                }\r\n            \r\n            case 'CHANGE_OPTION_TABLE_LOADING_STATUS':\r\n                return {\r\n                    ...state,\r\n                    optionTableLoadingStatus : action.payload1,\r\n                    optionTableData : action.payload2,\r\n                }  \r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}