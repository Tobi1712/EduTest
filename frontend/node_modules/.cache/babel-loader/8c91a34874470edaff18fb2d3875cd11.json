{"ast":null,"code":"import apis from '../services/Apis';\nimport Alert from '../components/common/alert';\nimport { SecurePost, SecureGet } from '../services/axiosCall'; // export const ChangeQuestionModalState = (d1)=> dispatch =>{\n//         dispatch({\n//             type : 'CHANGE_QUESTION_MODAL_STATE',\n//             payload1 : d1,\n//         })\n//     }\n\nexport const ChangeQuestionModalState = (d1, d2, d3) => dispatch => {\n  if (d3 === 'Сохранить') {\n    SecureGet({\n      url: \"\".concat(apis.FETCH_SINGLE_QUESTION, \"/\").concat(d2)\n    }).then(response => {\n      console.log(response);\n\n      if (response.data.success) {\n        dispatch({\n          type: 'CHANGE_QUESTION_MODAL_STATE',\n          payload1: true,\n          payload2: d2,\n          payload3: 'Сохранить',\n          payload4: response.data.data[0]\n        });\n      } else {\n        return Alert('warning', 'Предупреждение!', response.data.message);\n      }\n    }).catch(error => {\n      return Alert('error', 'Ошибка!', 'Ошибка сервера');\n    });\n  } else {\n    dispatch({\n      type: 'CHANGE_QUESTION_MODAL_STATE',\n      payload1: d1,\n      payload2: d2,\n      payload3: d3,\n      payload4: {\n        body: null,\n        quesimg: null,\n        material: null,\n        answer1: null,\n        trueans1: false,\n        answer2: null,\n        trueans2: false,\n        answer3: null,\n        trueans3: false,\n        answer4: null,\n        trueans4: false,\n        answer5: null,\n        trueans5: false\n      }\n    });\n  }\n};\nexport const ChangeQuestionConfirmDirty = d => dispatch => {\n  dispatch({\n    type: 'CHANGE_QUESTION_FORM_CONFIRMDIRTY',\n    payload: d\n  });\n};\nexport const ChangeQuestionSearchText = d => dispatch => {\n  dispatch({\n    type: 'CHANGE_QUESTION_SEARCH_TEXT',\n    payload: d\n  });\n};\nexport const ChangeQuestionTableData = materialId => dispatch => {\n  dispatch({\n    type: 'CHANGE_QUESTION_TABLE_LOADING_STATUS',\n    payload1: true,\n    payload2: []\n  });\n  SecurePost({\n    url: \"\".concat(apis.GET_ALL_QUESTIONS, \"/\").concat(materialId),\n    data: {\n      //chapter : d,\n      material: materialId // SecureGet({\n      //     url:  `${apis.GET_ALL_QUESTIONS}/${materialId}`\n\n    }\n  }).then(response => {\n    console.log(response);\n\n    if (response.data.success) {\n      dispatch({\n        type: 'CHANGE_QUESTION_TABLE_LOADING_STATUS',\n        payload1: false,\n        payload2: response.data.data\n      });\n    } else {\n      Alert('error', 'Ошибкаsd!', response.data.message);\n      dispatch({\n        type: 'CHANGE_QUESTION_TABLE_LOADING_STATUS',\n        payload1: false,\n        payload2: []\n      });\n    }\n  }).catch(error => {\n    Alert('error', 'Ошибка!', 'Ошибка сервера');\n    dispatch({\n      type: 'CHANGE_QUESTION_TABLE_LOADING_STATUS',\n      payload1: false,\n      payload2: []\n    });\n  });\n}; // export const ChangeSelectedChapter = (d)=> dispatch =>{\n//     dispatch({\n//        type : 'CHANGE_SELECTED_CHAPTER',\n//        payload : d\n//     })\n// }\n// export const ChangeSelectedMaterials = (d)=> dispatch =>{\n//     dispatch({\n//        type : 'CHANGE_SELECTED_MATERIAL',\n//        payload : d\n//     })\n// }\n\nexport const ChangeQuestionFormData = d => dispatch => {\n  dispatch({\n    type: 'CHANGE_QUESTION_FORM_DATA',\n    payload: d\n  });\n}; // export const AddFifthOptionInQuestion = ()=> dispatch =>{\n//     dispatch({\n//        type : 'ADD_FIFTH_OPTION'\n//     })\n// }\n\nexport const ChangeTestDetailsModalState = (d1, d2) => dispatch => {\n  dispatch({\n    type: 'CHANGE_TEST_DETAILS_MODAL_STATE',\n    payload1: d1,\n    payload2: d2\n  });\n};\nexport const NewTestModalState = (d1, d2) => dispatch => {\n  dispatch({\n    type: 'NEW_TEST_MODAL_STATE',\n    payload1: d1,\n    payload2: d2\n  });\n};\nexport const ChangeTestSearchText = d => dispatch => {\n  dispatch({\n    type: 'CHANGE_TEST_SEARCH_TEXT',\n    payload: d\n  });\n};\nexport const ChangeTestTableData = () => dispatch => {\n  dispatch({\n    type: 'CHANGE_TEST_TABLE_LOADING_STATUS',\n    payload1: true,\n    payload2: []\n  });\n  SecurePost({\n    url: \"\".concat(apis.GET_ALL_TESTS)\n  }).then(response => {\n    console.log(response.data);\n\n    if (response.data.success) {\n      dispatch({\n        type: 'CHANGE_TEST_TABLE_LOADING_STATUS',\n        payload1: false,\n        payload2: response.data.data\n      });\n    } else {\n      Alert('error', 'Ошибка!', response.data.message);\n      dispatch({\n        type: 'CHANGE_TEST_TABLE_LOADING_STATUS',\n        payload1: false,\n        payload2: []\n      });\n    }\n  }).catch(error => {\n    console.log(error);\n    Alert('error', 'Ошибка!', 'Ошибка сервера');\n    dispatch({\n      type: 'CHANGE_TEST_TABLE_LOADING_STATUS',\n      payload1: false,\n      payload2: []\n    });\n  });\n};\nexport const updateQuestiosnActiveTest = d => {\n  return {\n    type: 'CHANGE_CURRENT_ACTIVE_TEST_QUESTION',\n    payload: d\n  };\n};\nexport const ChangeOptionModalState = (d1, d2, d3) => dispatch => {\n  if (d3 === 'Сохранить') {\n    SecureGet({\n      url: \"\".concat(apis.GET_SINGLE_OPTION_DETAILS, \"/\").concat(d2)\n    }).then(response => {\n      console.log(response);\n\n      if (response.data.success) {\n        dispatch({\n          type: 'CHANGE_OPTION_MODAL_STATE',\n          payload1: true,\n          payload2: d2,\n          payload3: 'Сохранить',\n          payload4: response.data.data[0]\n        });\n      } else {\n        return Alert('warning', 'Предупреждение!', response.data.message);\n      }\n    }).catch(error => {\n      return Alert('error', 'Ошибка!', 'Ошибка сервера');\n    });\n  } else {\n    dispatch({\n      type: 'CHANGE_OPTION_MODAL_STATE',\n      payload1: d1,\n      payload2: d2,\n      payload3: d3,\n      payload4: {\n        optbody: null,\n        isAnswer: false\n      }\n    });\n  }\n};\nexport const ChangeOptionConfirmDirty = d => dispatch => {\n  dispatch({\n    type: 'CHANGE_OPTION_FORM_CONFIRMDIRTY',\n    payload: d\n  });\n};\nexport const ChangeOptionSearchText = d => dispatch => {\n  dispatch({\n    type: 'CHANGE_OPTION_SEARCH_TEXT',\n    payload: d\n  });\n};\nexport const ChangeOptionTableData = questionId => dispatch => {\n  dispatch({\n    type: 'CHANGE_OPTION_TABLE_LOADING_STATUS',\n    payload1: true,\n    payload2: []\n  });\n  SecureGet({\n    url: \"\".concat(apis.GET_ALL_OPTION, \"/\").concat(questionId)\n  }).then(response => {\n    console.log(response);\n\n    if (response.data.success) {\n      dispatch({\n        type: 'CHANGE_OPTION_TABLE_LOADING_STATUS',\n        payload1: false,\n        payload2: response.data.data\n      });\n    } else {\n      Alert('error', 'Ошибка!', response.data.message);\n      dispatch({\n        type: 'CHANGE_OPTION_TABLE_LOADING_STATUS',\n        payload1: false,\n        payload2: []\n      });\n    }\n  }).catch(error => {\n    Alert('error', 'Ошибка!', 'Ошибка сервера');\n    dispatch({\n      type: 'CHANGE_OPTION_TABLE_LOADING_STATUS',\n      payload1: false,\n      payload2: []\n    });\n  });\n};","map":{"version":3,"sources":["C:\\React_project\\EduTest\\frontend\\src\\actions\\trainerAction.js"],"names":["apis","Alert","SecurePost","SecureGet","ChangeQuestionModalState","d1","d2","d3","dispatch","url","FETCH_SINGLE_QUESTION","then","response","console","log","data","success","type","payload1","payload2","payload3","payload4","message","catch","error","body","quesimg","material","answer1","trueans1","answer2","trueans2","answer3","trueans3","answer4","trueans4","answer5","trueans5","ChangeQuestionConfirmDirty","d","payload","ChangeQuestionSearchText","ChangeQuestionTableData","materialId","GET_ALL_QUESTIONS","ChangeQuestionFormData","ChangeTestDetailsModalState","NewTestModalState","ChangeTestSearchText","ChangeTestTableData","GET_ALL_TESTS","updateQuestiosnActiveTest","ChangeOptionModalState","GET_SINGLE_OPTION_DETAILS","optbody","isAnswer","ChangeOptionConfirmDirty","ChangeOptionSearchText","ChangeOptionTableData","questionId","GET_ALL_OPTION"],"mappings":"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","sourcesContent":["import apis from '../services/Apis';\r\nimport Alert from '../components/common/alert';\r\nimport { SecurePost, SecureGet } from '../services/axiosCall';\r\n\r\n// export const ChangeQuestionModalState = (d1)=> dispatch =>{\r\n//         dispatch({\r\n//             type : 'CHANGE_QUESTION_MODAL_STATE',\r\n//             payload1 : d1,\r\n//         })\r\n//     }\r\n    \r\n\r\n    export const ChangeQuestionModalState = (d1,d2,d3)=> dispatch =>{\r\n        if(d3==='Сохранить'){\r\n            SecureGet({\r\n                url : `${apis.FETCH_SINGLE_QUESTION}/${d2}`\r\n            }).then((response)=>{\r\n                console.log(response);\r\n                if(response.data.success){\r\n                    dispatch({\r\n                        type : 'CHANGE_QUESTION_MODAL_STATE',\r\n                        payload1 : true,\r\n                        payload2 : d2,\r\n                        payload3 : 'Сохранить',\r\n                        payload4 : response.data.data[0],\r\n                        \r\n                    })\r\n                }\r\n                else{\r\n                    return Alert('warning','Предупреждение!',response.data.message);\r\n                }\r\n            }).catch((error)=>{\r\n                return Alert('error','Ошибка!','Ошибка сервера');\r\n            })\r\n        }\r\n        else{\r\n            dispatch({\r\n                type : 'CHANGE_QUESTION_MODAL_STATE',\r\n                payload1 : d1,\r\n                payload2 : d2,\r\n                payload3 : d3,\r\n                payload4: {\r\n                    body: null,\r\n                    quesimg : null,\r\n                    material:null,\r\n                    answer1 : null,\r\n                    trueans1 : false,\r\n                    answer2 : null,\r\n                    trueans2 : false,\r\n                    answer3 : null,\r\n                    trueans3 : false,\r\n                    answer4 : null,\r\n                    trueans4 : false,\r\n                    answer5 : null,\r\n                    trueans5 : false,\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\nexport const ChangeQuestionConfirmDirty = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_QUESTION_FORM_CONFIRMDIRTY',\r\n       payload : d\r\n    })\r\n}\r\n\r\n\r\nexport const ChangeQuestionSearchText = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_QUESTION_SEARCH_TEXT',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const ChangeQuestionTableData = (materialId)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_QUESTION_TABLE_LOADING_STATUS',\r\n       payload1 : true,\r\n       payload2:[]\r\n    });\r\n    SecurePost({\r\n        url : `${apis.GET_ALL_QUESTIONS}/${materialId}`,\r\n        data:{\r\n            //chapter : d,\r\n            material : materialId,\r\n        }\r\n    // SecureGet({\r\n    //     url:  `${apis.GET_ALL_QUESTIONS}/${materialId}`\r\n    }).then((response)=>{\r\n        console.log(response);\r\n        if(response.data.success){\r\n            dispatch({\r\n                type : 'CHANGE_QUESTION_TABLE_LOADING_STATUS',\r\n                payload1 : false,\r\n                payload2 : response.data.data\r\n            })\r\n        }\r\n        else{\r\n            Alert('error','Ошибкаsd!',response.data.message);\r\n            dispatch({\r\n                type : 'CHANGE_QUESTION_TABLE_LOADING_STATUS',\r\n                payload1 : false,\r\n                payload2 : []\r\n            })\r\n        }\r\n    }).catch((error)=>{\r\n        Alert('error','Ошибка!','Ошибка сервера');\r\n        dispatch({\r\n            type : 'CHANGE_QUESTION_TABLE_LOADING_STATUS',\r\n            payload1 : false,\r\n            payload2 : []\r\n        })\r\n    })\r\n\r\n}\r\n\r\n// export const ChangeSelectedChapter = (d)=> dispatch =>{\r\n//     dispatch({\r\n//        type : 'CHANGE_SELECTED_CHAPTER',\r\n//        payload : d\r\n//     })\r\n// }\r\n\r\n// export const ChangeSelectedMaterials = (d)=> dispatch =>{\r\n//     dispatch({\r\n//        type : 'CHANGE_SELECTED_MATERIAL',\r\n//        payload : d\r\n//     })\r\n// }\r\n\r\nexport const ChangeQuestionFormData = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_QUESTION_FORM_DATA',\r\n       payload : d\r\n    })\r\n}\r\n\r\n// export const AddFifthOptionInQuestion = ()=> dispatch =>{\r\n//     dispatch({\r\n//        type : 'ADD_FIFTH_OPTION'\r\n//     })\r\n// }\r\n\r\n\r\n\r\n\r\n\r\nexport const ChangeTestDetailsModalState = (d1,d2)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_TEST_DETAILS_MODAL_STATE',\r\n       payload1 : d1,\r\n       payload2 : d2\r\n    })\r\n}\r\n\r\nexport const NewTestModalState = (d1,d2)=> dispatch =>{\r\n    dispatch({\r\n       type : 'NEW_TEST_MODAL_STATE',\r\n       payload1 : d1,\r\n       payload2 : d2\r\n    })\r\n}\r\n\r\nexport const ChangeTestSearchText = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_TEST_SEARCH_TEXT',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const ChangeTestTableData = ()=> dispatch =>{\r\n    dispatch({\r\n        type : 'CHANGE_TEST_TABLE_LOADING_STATUS',\r\n        payload1 : true,\r\n        payload2:[]\r\n    });\r\n    SecurePost({\r\n        url : `${apis.GET_ALL_TESTS}`,\r\n    }).then((response)=>{\r\n        console.log(response.data);\r\n        if(response.data.success){\r\n            dispatch({\r\n                type : 'CHANGE_TEST_TABLE_LOADING_STATUS',\r\n                payload1 : false,\r\n                payload2 : response.data.data\r\n            })\r\n        }\r\n        else{\r\n            Alert('error','Ошибка!',response.data.message);\r\n            dispatch({\r\n                type : 'CHANGE_TEST_TABLE_LOADING_STATUS',\r\n                payload1 : false,\r\n                payload2 : []\r\n            })\r\n    }\r\n    }).catch((error)=>{\r\n        console.log(error);\r\n        Alert('error','Ошибка!','Ошибка сервера');\r\n        dispatch({\r\n            type : 'CHANGE_TEST_TABLE_LOADING_STATUS',\r\n            payload1 : false,\r\n            payload2 : []\r\n        })\r\n    })\r\n}\r\n\r\nexport const updateQuestiosnActiveTest = (d)=>{\r\n    return{\r\n        type:'CHANGE_CURRENT_ACTIVE_TEST_QUESTION',\r\n        payload:d\r\n    }\r\n}\r\n\r\n\r\nexport const ChangeOptionModalState = (d1,d2,d3)=> dispatch =>{\r\n    if(d3==='Сохранить'){\r\n        SecureGet({\r\n            url : `${apis.GET_SINGLE_OPTION_DETAILS}/${d2}`\r\n        }).then((response)=>{\r\n            console.log(response);\r\n            if(response.data.success){\r\n                dispatch({\r\n                    type : 'CHANGE_OPTION_MODAL_STATE',\r\n                    payload1 : true,\r\n                    payload2 : d2,\r\n                    payload3 : 'Сохранить',\r\n                    payload4: response.data.data[0]\r\n                })\r\n            }\r\n            else{\r\n                return Alert('warning','Предупреждение!',response.data.message);\r\n            }\r\n        }).catch((error)=>{\r\n            return Alert('error','Ошибка!','Ошибка сервера');\r\n        })\r\n    }\r\n    else{\r\n        dispatch({\r\n            type : 'CHANGE_OPTION_MODAL_STATE',\r\n            payload1 : d1,\r\n            payload2 : d2,\r\n            payload3 : d3,\r\n            payload4: {\r\n                optbody : null,\r\n                isAnswer : false,\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const ChangeOptionConfirmDirty = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_OPTION_FORM_CONFIRMDIRTY',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const ChangeOptionSearchText = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_OPTION_SEARCH_TEXT',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const ChangeOptionTableData = (questionId)=> dispatch =>{\r\n    dispatch({\r\n        type : 'CHANGE_OPTION_TABLE_LOADING_STATUS',\r\n        payload1 : true,\r\n        payload2 : []\r\n    })\r\n    SecureGet({\r\n        url:  `${apis.GET_ALL_OPTION}/${questionId}`\r\n    }).then((response)=>{\r\n        console.log(response);\r\n\r\n        if(response.data.success){\r\n            dispatch({\r\n                type : 'CHANGE_OPTION_TABLE_LOADING_STATUS',\r\n                payload1 : false,\r\n                payload2 : response.data.data\r\n            })\r\n        }\r\n        else{\r\n            Alert('error','Ошибка!' ,response.data.message);\r\n            dispatch({\r\n                type : 'CHANGE_OPTION_TABLE_LOADING_STATUS',\r\n                payload1 : false,\r\n                payload2 : []\r\n            })\r\n        }\r\n      }).catch((error)=>{\r\n        Alert('error','Ошибка!','Ошибка сервера');\r\n        dispatch({\r\n            type : 'CHANGE_OPTION_TABLE_LOADING_STATUS',\r\n            payload1 : false,\r\n            payload2 : []\r\n        })\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}