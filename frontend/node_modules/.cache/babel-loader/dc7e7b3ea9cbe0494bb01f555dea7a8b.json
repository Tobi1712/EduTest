{"ast":null,"code":"import _slicedToArray from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport { css as _css } from \"styled-components\";\nvar _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\customer\\\\Testing\\\\test.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n          left: 25rem;\\n        \"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n          right: 25rem;\\n        \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'antd';\nimport { ChangeTestSearchText, ChangeTestTableData, ChangeAnswersSearchText, ChangeAnswersTableData } from '../../../actions/chapterAction';\nimport Alert from '../../../components/common/alert';\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport TestPage from './testpage';\nimport styled from \"styled-components\";\nimport \"react-multi-carousel/lib/styles.css\"; //import Counter from './Counter';\n\nimport LocalizedStrings from 'react-localization';\nlet strings = new LocalizedStrings({\n  ru: {\n    Succes: \"Успешно\",\n    Warning: \"Предупреждение!\",\n    Err: \"Ошибка!\",\n    ErrorServer: \"Ошибка сервера\",\n    Testing: \"Тестирование\",\n    GoTest: \"Начать тест\",\n    ContTest: \"Продолжить тест\"\n  },\n  kz: {\n    Succes: \"Сәтті\",\n    Warning: \"Ескерту!\",\n    Err: \"Қате!\",\n    ErrorServer: \"Сервердің қатесі\",\n    Testing: \"Тестілеу\",\n    GoTest: \"Тесттi бастау\",\n    ContTest: \"Тесттi жалғастыру\"\n  }\n});\nconst Container = styled.div.withConfig({\n  displayName: \"test__Container\",\n  componentId: \"sc-13myauf-0\"\n})([\"display:flex;justify-content:center;align-items:center;min-height:80vh;width:100%;\"]);\nconst ScreenQuiz = styled.div.withConfig({\n  displayName: \"test__ScreenQuiz\",\n  componentId: \"sc-13myauf-1\"\n})([\"display:flex;justify-content:\", \";align-items:center;flex-direction:column;max-width:1200px;padding:\", \";width:100%;height:80vh;background:#fff;border-radius:5px;box-shadow:0px 5px 40px -20px #000;\"], props => props.screen ? \"space-between\" : \"center\", props => props.screen ? \"5rem\" : \".5rem\");\nconst Title = styled.h1.withConfig({\n  displayName: \"test__Title\",\n  componentId: \"sc-13myauf-2\"\n})([\"font-size:2.5rem;margin-bottom:0.5rem;text-align:center;max-width:90%;\"]); // const Paragraph = styled.p`\n//   font-size: 1.5rem;\n// `;\n// const Button = styled.button`\n//   font-size: 1.2rem;\n//   font-weight: bold;\n//   width: 40%;\n//   height: 3rem;\n//   // color: #fff;\n//   border: none;\n//   // background: #7159c1;\n//   border-radius: 5px;\n//   box-shadow: 0px 3px 3px 0px #666;\n//   @-webkit-keyframes pulsate {\n//     0% {transform: scale(0.1, 0.1); opacity: 0.0;}\n//     50% {opacity: 1.0;}\n//     100% {transform: scale(7, 7); opacity: 0.0;}\n// }\n// `;\n\nconst ButtonScr = styled.button.withConfig({\n  displayName: \"test__ButtonScr\",\n  componentId: \"sc-13myauf-3\"\n})([\"font-size:1.4rem;z-index:10;position:fixed;top:15%;\", \"\"], props => props.right ? _css(_templateObject()) : _css(_templateObject2()));\nconst ContainerLabel = styled.div.withConfig({\n  displayName: \"test__ContainerLabel\",\n  componentId: \"sc-13myauf-4\"\n})([\"display:flex;align-items:flex-start;flex-direction:column;margin:0 auto 0.5rem auto;\"]);\nconst Label = styled.label.withConfig({\n  displayName: \"test__Label\",\n  componentId: \"sc-13myauf-5\"\n})([\"display:flex;justify-content:center;align-items:center;\"]);\nconst Radio = styled.input.attrs({\n  type: 'checkbox'\n}).withConfig({\n  displayName: \"test__Radio\",\n  componentId: \"sc-13myauf-6\"\n})([\"display:flex;justify-content:center;align-items:center;width:15px;height:15px;border-radius:50%;border:7.5px solid black;margin:0 0.5rem 0 0;background:\", \";\"], props => props.clickedLabel ? \"#7159c1\" : \"#fff\"); // const IntoRadio = styled.div`\n//   width: 5px;\n//   height: 5px;\n//   border-radius: 3px;\n//   background: #fff;\n// `;\n// const Error = styled.div`\n//   top: 22rem;\n//   color: red;\n//   position: absolute;\n//   font-weight: bold;\n// `;\n\nfunction Test(props) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        screen = _useState4[0],\n        setScreen = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        count = _useState6[0],\n        setCount = _useState6[1];\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        answer = _useState8[0],\n        setAnswer = _useState8[1];\n\n  const _useState9 = useState(props.id),\n        _useState10 = _slicedToArray(_useState9, 2),\n        matId = _useState10[0],\n        setMatId = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        disableButton = _useState12[0],\n        setDisableButton = _useState12[1];\n\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        testStarted = _useState14[0],\n        setTestStarted = _useState14[1];\n\n  const _useState15 = useState(false),\n        _useState16 = _slicedToArray(_useState15, 2),\n        testEnded = _useState16[0],\n        setTestEnded = _useState16[1];\n\n  const _useState17 = useState(true),\n        _useState18 = _slicedToArray(_useState17, 2),\n        testDidNotStart = _useState18[0],\n        setTestDidNotStart = _useState18[1];\n\n  const _useState19 = useState(false),\n        _useState20 = _slicedToArray(_useState19, 2),\n        testCreated = _useState20[0],\n        setTestCreated = _useState20[1];\n\n  const _useState21 = useState(Date()),\n        _useState22 = _slicedToArray(_useState21, 2),\n        startDate = _useState22[0],\n        setStartDate = _useState22[1];\n\n  useEffect(() => {\n    props.ChangeTestTableData(matId);\n    props.ChangeAnswersTableData(matId); // if(props.chapter.testTableData!==undefined){\n    //   console.log(\"INIF\",props.chapter.testTableData)\n    //   if(props.chapter.testTableData.startTest==='true'){\n    //     setTestStarted(true);\n    //   }\n    // }\n  }, []);\n\n  const renderInitial = () => {\n    // setScreen(false);\n    // // setLoading(false);\n    // setCount(1);\n    if (props.chapter.testTableData !== null || props.chapter.testTableData !== undefined) {\n      console.log(new Date(props.chapter.testTableData.complationDate).getTime());\n      console.log(new Date().getTime());\n      new Date(props.chapter.testTableData.complationDate).getTime() < new Date().getTime() ? setScreen(true) : setScreen(false);\n\n      if (screen === true) {\n        Alert('warning', 'Время вышло. Тест завершен');\n      } // setLoading(false);\n\n\n      setCount(1);\n      SecurePost({\n        url: \"\".concat(apis.UPDATE_TEST),\n        data: {\n          _id: props.chapter.testTableData._id,\n          // chapterid : props.chid,\n          // materialid : props.id,\n          // startDate : startDate,\n          // complationDate : startDate,\n          startTest: true,\n          endTest: props.chapter.testTableData.complationDate < new Date() ? true : false,\n          result: 15\n        }\n      }); // setTestStarted(true);\n    }\n\n    ; // setTestStarted(true);\n    // setTestEnded(false);\n    // setTestDidNotStart(false);\n    // setStartDate(new Date());\n    // return createTestData();\n  };\n\n  const createTestData = () => {\n    if (props.chapter.testTableData === undefined) {\n      SecurePost({\n        url: \"\".concat(apis.CREATE_TEST),\n        data: {\n          _id: props.chapter.testId,\n          chapterid: props.chid,\n          materialid: props.id,\n          startDate: startDate,\n          complationDate: startDate,\n          startTest: testStarted,\n          endTest: testEnded,\n          result: 0\n        }\n      });\n    } // else if(props.chapter.testTableData!==null || props.chapter.testTableData!==undefined) {\n    //   SecurePost({\n    //     url : `${apis.UPDATE_TEST}`,\n    //     data : {\n    //       _id: props.chapter.testTableData._id,\n    //       // chapterid : props.chid,\n    //       // materialid : props.id,\n    //       // startDate : startDate,\n    //       // complationDate : startDate,\n    //       startTest: true,\n    //       endTest: props.chapter.testTableData.complationDate<new Date() ? true : false,\n    //       result: 15\n    //     }\n    //   })\n    // };\n\n\n    SecurePost({\n      url: \"\".concat(apis.CREATE_ANSWERS),\n      data: {\n        materialId: props.id,\n        testid: props.chapter.testTableData !== null || props.chapter.testTableData !== undefined ? null : props.chapter.testTableData._id\n      }\n    }); // if(props.chapter.testTableData!==undefined){\n    //   console.log(\"INIF\",props.chapter.testTableData)\n    //   if(props.chapter.testTableData.startTest===true){\n    //     setTestStarted(true);\n    //   }\n    // }\n\n    console.log(\"A:\", props.chapter.testTableData);\n    return renderScreenInitial();\n  };\n\n  const renderScreenInitial = () => {\n    console.log(\"B:\", props.chapter.testTableData);\n    console.log(\"testStarted:\", testStarted);\n\n    if (testStarted == false) {\n      return /*#__PURE__*/React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(ScreenQuiz, {\n        screen: screen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, \"\\u0422\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: renderInitial,\n        style: {\n          fontSize: \"1.2rem\",\n          fontWeight: \"bold\",\n          width: \"40%\",\n          height: \"3rem\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          boxShadow: \"0px 3px 3px 0px #666\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\")));\n    } else if (testStarted == true) {\n      return /*#__PURE__*/React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(ScreenQuiz, {\n        screen: screen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, \"\\u0422\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: renderInitial,\n        style: {\n          fontSize: \"1.2rem\",\n          fontWeight: \"bold\",\n          width: \"40%\",\n          height: \"3rem\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          boxShadow: \"0px 3px 3px 0px #666\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"\\u041F\\u0440\\u043E\\u0434\\u043E\\u043B\\u0436\\u0438\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\")));\n    }\n  };\n\n  console.log(\"Screen\", screen);\n  return screen ? createTestData() : /*#__PURE__*/React.createElement(TestPage, {\n    t: props.chapter.testTableData,\n    q: props.chapter.AnswerTableData,\n    id: props.id,\n    count: count,\n    screen: screen,\n    answer: answer,\n    chid: props.chid,\n    tend: testEnded,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317\n    },\n    __self: this\n  });\n}\n\nconst mapStateToProps = state => ({\n  chapter: state.chapter\n});\n\nexport default connect(mapStateToProps, {\n  ChangeTestSearchText,\n  ChangeTestTableData,\n  ChangeAnswersSearchText,\n  ChangeAnswersTableData\n})(Test);","map":{"version":3,"names":["React","Component","useState","useEffect","connect","Button","ChangeTestSearchText","ChangeTestTableData","ChangeAnswersSearchText","ChangeAnswersTableData","Alert","SecurePost","apis","TestPage","styled","LocalizedStrings","strings","ru","Succes","Warning","Err","ErrorServer","Testing","GoTest","ContTest","kz","Container","div","ScreenQuiz","props","screen","Title","h1","ButtonScr","button","right","css","ContainerLabel","Label","label","Radio","input","attrs","type","clickedLabel","Test","loading","setLoading","setScreen","count","setCount","answer","setAnswer","id","matId","setMatId","disableButton","setDisableButton","testStarted","setTestStarted","testEnded","setTestEnded","testDidNotStart","setTestDidNotStart","testCreated","setTestCreated","Date","startDate","setStartDate","renderInitial","chapter","testTableData","undefined","console","log","complationDate","getTime","url","UPDATE_TEST","data","_id","startTest","endTest","result","createTestData","CREATE_TEST","testId","chapterid","chid","materialid","CREATE_ANSWERS","materialId","testid","renderScreenInitial","fontSize","fontWeight","width","height","border","borderRadius","boxShadow","AnswerTableData","mapStateToProps","state"],"sources":["C:/React_project/EduTest/frontend/src/components/customer/Testing/test.js"],"sourcesContent":["import React, { Component, useState,useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Button } from 'antd';\r\nimport  { css } from 'styled-components/macro'\r\nimport { \r\n  ChangeTestSearchText,\r\n  ChangeTestTableData,\r\n  ChangeAnswersSearchText,\r\n  ChangeAnswersTableData,\r\n} from '../../../actions/chapterAction';\r\nimport Alert from '../../../components/common/alert';\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport TestPage from './testpage';\r\nimport styled from \"styled-components\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\n//import Counter from './Counter';\r\n\r\nimport  LocalizedStrings  from  'react-localization' ;\r\nlet strings = new LocalizedStrings({\r\n  ru:{\r\n    Succes:\"Успешно\",\r\n    Warning:\"Предупреждение!\",\r\n    Err:\"Ошибка!\",\r\n    ErrorServer:\"Ошибка сервера\",\r\n    Testing:\"Тестирование\",\r\n    GoTest:\"Начать тест\",\r\n    ContTest:\"Продолжить тест\",\r\n  },\r\n  kz: {\r\n    Succes:\"Сәтті\",\r\n    Warning:\"Ескерту!\",\r\n    Err:\"Қате!\",\r\n    ErrorServer:\"Сервердің қатесі\",\r\n    Testing:\"Тестілеу\",\r\n    GoTest:\"Тесттi бастау\",\r\n    ContTest:\"Тесттi жалғастыру\",\r\n  }\r\n });\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 80vh;\r\n  width: 100%;\r\n  /*background: #7159c1;*/\r\n`;\r\n\r\nconst ScreenQuiz = styled.div`\r\n  display: flex;\r\n  justify-content: ${props => (props.screen ? \"space-between\" : \"center\")};\r\n  align-items: center;\r\n  flex-direction: column;\r\n  max-width: 1200px;\r\n  padding: ${props => (props.screen ? \"5rem\" : \".5rem\")};\r\n  width: 100%;\r\n  height: 80vh;\r\n  background: #fff;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 5px 40px -20px #000;\r\n\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 2.5rem;\r\n  // color: #7159c1;\r\n  margin-bottom: 0.5rem;\r\n  text-align: center;\r\n  max-width: 90%;\r\n`;\r\n\r\n// const Paragraph = styled.p`\r\n//   font-size: 1.5rem;\r\n// `;\r\n\r\n// const Button = styled.button`\r\n//   font-size: 1.2rem;\r\n//   font-weight: bold;\r\n//   width: 40%;\r\n//   height: 3rem;\r\n//   // color: #fff;\r\n//   border: none;\r\n//   // background: #7159c1;\r\n//   border-radius: 5px;\r\n//   box-shadow: 0px 3px 3px 0px #666;\r\n\r\n//   @-webkit-keyframes pulsate {\r\n//     0% {transform: scale(0.1, 0.1); opacity: 0.0;}\r\n//     50% {opacity: 1.0;}\r\n//     100% {transform: scale(7, 7); opacity: 0.0;}\r\n// }\r\n// `;\r\n\r\nconst ButtonScr = styled.button`\r\n  font-size: 1.4rem;\r\n  z-index: 10;\r\n  position: fixed;\r\n  top: 15%;\r\n  ${(props) =>\r\n    props.right\r\n      ? css`\r\n          right: 25rem;\r\n        `\r\n      : css`\r\n          left: 25rem;\r\n        `}\r\n`\r\n\r\nconst ContainerLabel = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  margin: 0 auto 0.5rem auto;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Radio = styled.input.attrs({ type: 'checkbox' })`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 15px;\r\n  height: 15px;\r\n  border-radius: 50%;\r\n  border: 7.5px solid black;\r\n  margin: 0 0.5rem 0 0;\r\n  background: ${props => (props.clickedLabel ? \"#7159c1\" : \"#fff\")};\r\n`;\r\n\r\n// const IntoRadio = styled.div`\r\n//   width: 5px;\r\n//   height: 5px;\r\n//   border-radius: 3px;\r\n//   background: #fff;\r\n// `;\r\n\r\n// const Error = styled.div`\r\n//   top: 22rem;\r\n//   color: red;\r\n//   position: absolute;\r\n//   font-weight: bold;\r\n// `;\r\n\r\n\r\nfunction Test(props){\r\n  const [loading, setLoading] = useState(false)\r\n  const [screen, setScreen] = useState(true);\r\n  const [count, setCount] = useState(0)\r\n  const [answer, setAnswer] = useState(0);\r\n  const [matId, setMatId] = useState(props.id);\r\n  const [disableButton, setDisableButton] = useState(false);\r\n  const [testStarted, setTestStarted] = useState(false);\r\n  const [testEnded, setTestEnded] = useState(false);\r\n  const [testDidNotStart, setTestDidNotStart] = useState(true);\r\n  const [testCreated, setTestCreated] = useState(false);\r\n  const [startDate, setStartDate] = useState(Date());\r\n\r\n  useEffect(()=>{\r\n    props.ChangeTestTableData(matId);\r\n    props.ChangeAnswersTableData(matId);\r\n    // if(props.chapter.testTableData!==undefined){\r\n    //   console.log(\"INIF\",props.chapter.testTableData)\r\n    //   if(props.chapter.testTableData.startTest==='true'){\r\n    //     setTestStarted(true);\r\n    //   }\r\n    // }\r\n  }, [])\r\n\r\n  const renderInitial = () => {\r\n\r\n    // setScreen(false);\r\n\r\n    // // setLoading(false);\r\n    // setCount(1);\r\n    if(props.chapter.testTableData!==null || props.chapter.testTableData!==undefined) {\r\n      console.log(new Date(props.chapter.testTableData.complationDate).getTime())\r\n      console.log(new Date().getTime())\r\n      new Date(props.chapter.testTableData.complationDate).getTime() < new Date().getTime() ? setScreen(true) : setScreen(false);\r\n      if(screen===true){\r\n        Alert('warning', 'Время вышло. Тест завершен')\r\n      }\r\n\r\n      // setLoading(false);\r\n      setCount(1);\r\n      SecurePost({\r\n        url : `${apis.UPDATE_TEST}`,\r\n        data : {\r\n          _id: props.chapter.testTableData._id,\r\n          // chapterid : props.chid,\r\n          // materialid : props.id,\r\n          // startDate : startDate,\r\n          // complationDate : startDate,\r\n          startTest: true,\r\n          endTest: props.chapter.testTableData.complationDate<new Date() ? true : false,\r\n          result: 15\r\n        }\r\n      })\r\n      // setTestStarted(true);\r\n    };\r\n    // setTestStarted(true);\r\n    // setTestEnded(false);\r\n    // setTestDidNotStart(false);\r\n    // setStartDate(new Date());\r\n    // return createTestData();\r\n  };\r\n\r\n  const createTestData = () => {\r\n    if((props.chapter.testTableData === undefined)){\r\n      SecurePost({\r\n        url : `${apis.CREATE_TEST}`,\r\n        data : {\r\n          _id: props.chapter.testId,\r\n          chapterid : props.chid,\r\n          materialid : props.id,\r\n          startDate : startDate,\r\n          complationDate : startDate,\r\n          startTest: testStarted,\r\n          endTest: testEnded,\r\n          result: 0\r\n        }\r\n      })\r\n    }\r\n    // else if(props.chapter.testTableData!==null || props.chapter.testTableData!==undefined) {\r\n    //   SecurePost({\r\n    //     url : `${apis.UPDATE_TEST}`,\r\n    //     data : {\r\n    //       _id: props.chapter.testTableData._id,\r\n    //       // chapterid : props.chid,\r\n    //       // materialid : props.id,\r\n    //       // startDate : startDate,\r\n    //       // complationDate : startDate,\r\n    //       startTest: true,\r\n    //       endTest: props.chapter.testTableData.complationDate<new Date() ? true : false,\r\n    //       result: 15\r\n    //     }\r\n    //   })\r\n\r\n    // };\r\n    SecurePost({\r\n      url : `${apis.CREATE_ANSWERS}`,\r\n      data : {\r\n        materialId : props.id,\r\n        testid : (props.chapter.testTableData!==null || props.chapter.testTableData!==undefined) ? null : props.chapter.testTableData._id,\r\n      }\r\n    });\r\n    // if(props.chapter.testTableData!==undefined){\r\n    //   console.log(\"INIF\",props.chapter.testTableData)\r\n    //   if(props.chapter.testTableData.startTest===true){\r\n    //     setTestStarted(true);\r\n    //   }\r\n    // }\r\n    console.log(\"A:\",props.chapter.testTableData)\r\n    return renderScreenInitial();\r\n  }\r\n\r\n  const renderScreenInitial = ()=>{\r\n    console.log(\"B:\",props.chapter.testTableData)\r\n    console.log(\"testStarted:\",testStarted)\r\n    if (testStarted==false){\r\n      \r\n      return (\r\n        <Container>\r\n          <ScreenQuiz screen={screen}>\r\n            <Title>Тестирование</Title>\r\n            <Button \r\n              onClick={\r\n                renderInitial\r\n              } \r\n              style={{\r\n                fontSize: \"1.2rem\", \r\n                fontWeight: \"bold\",\r\n                width: \"40%\",\r\n                height: \"3rem\",\r\n                border: \"none\",\r\n                borderRadius: \"5px\",\r\n                boxShadow: \"0px 3px 3px 0px #666\"\r\n              }}\r\n              >\r\n                Начать тест\r\n            </Button>\r\n            \r\n          </ScreenQuiz>\r\n        </Container>\r\n      );\r\n    } \r\n    else if (testStarted==true){\r\n      return (\r\n        <Container>\r\n          <ScreenQuiz screen={screen}>\r\n            <Title>Тестирование</Title>\r\n            <Button \r\n              onClick={renderInitial} \r\n              style={{\r\n                fontSize: \"1.2rem\", \r\n                fontWeight: \"bold\",\r\n                width: \"40%\",\r\n                height: \"3rem\",\r\n                border: \"none\",\r\n                borderRadius: \"5px\",\r\n                boxShadow: \"0px 3px 3px 0px #666\"\r\n              }}\r\n              >\r\n                Продолжить тест\r\n            </Button>\r\n          </ScreenQuiz>\r\n        </Container>\r\n      );\r\n    }\r\n  }\r\n\r\n  console.log(\"Screen\",screen);\r\n  return screen ? createTestData() : \r\n    <TestPage t={props.chapter.testTableData} q={props.chapter.AnswerTableData} id={props.id} count={count} screen={screen} answer={answer} chid={props.chid} tend={testEnded}/>\r\n  }\r\n\r\nconst mapStateToProps = state => ({\r\n    chapter : state.chapter\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeTestSearchText,\r\n    ChangeTestTableData,\r\n    ChangeAnswersSearchText,\r\n    ChangeAnswersTableData\r\n})(Test);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}