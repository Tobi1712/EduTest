{"ast":null,"code":"var _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\admin\\\\Materials\\\\newmaterials.js\";\nimport React, { Component } from 'react';\nimport './newmaterials.css';\nimport { Form, Input, Button, Select } from 'antd';\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport { connect } from 'react-redux';\nimport { ChangeMaterialConfirmDirty, ChangeMaterialModalState, ChangeMaterialTableData } from '../../../actions/chapterAction';\nimport Alert from '../../../components/common/alert';\nimport auth from '../../../services/AuthServices';\nconst Option = Select.Option;\n\nclass NewMaterial extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          console.log('Полученные значения формы: ', values);\n          SecurePost({\n            url: \"\".concat(apis.CREATE_MATERIAL),\n            data: {\n              _id: this.props.chapter.materialId,\n              topic: values.topic //slides : this.state.materialDetails.materialimage,\n\n            }\n          }).then(response => {\n            if (response.data.success) {\n              this.props.ChangeMaterialModalState(false, null, 'Регистрация');\n              Alert('success', 'Успешно', response.data.message);\n              this.props.ChangeMaterialTableData();\n            } else {\n              console.log(response.data);\n              this.props.ChangeMaterialModalState(false, null, 'Регистрация');\n              return Alert('warning', 'Предупреждение!', response.data.message);\n            }\n          }).catch(error => {\n            this.props.ChangeMaterialModalState(false, null, 'Регистрация');\n            return Alert('error', 'Ошибка!', 'Ошибка сервера');\n          });\n        }\n      });\n    };\n  }\n\n  // changeqImage = (f)=>{\n  //     this.setState((ps,pp)=>{\n  //         return({\n  //             materialDetails:{\n  //                 ...ps.materialDetails,\n  //                 materialimage:(f.link ?`${apis.BASE}/${f.link}`:null)\n  //             },\n  //             submitDisabled:false\n  //         })\n  //     })\n  // }\n  // upl=()=>{\n  //     this.setState({\n  //         submitDisabled: false\n  //     })\n  // }\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    var MaterialImageprops = {\n      name: 'file',\n      action: \"\".concat(apis.BASE).concat(apis.FILE_UPLOAD, \"?Token=\").concat(auth.retriveToken()),\n      listType: 'picture'\n    };\n    return React.createElement(\"div\", {\n      className: \"register-company-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"register-company-form-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"\\u2116\",\n      hasFeedback: true,\n      className: \"input-admin-company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, getFieldDecorator('num', {\n      initialValue: this.props.chapter.materialdetails.num,\n      rules: [{\n        required: false,\n        message: 'Пожалуйста, введите название!',\n        whitespace: true\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n      hasFeedback: true,\n      className: \"input-admin-company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, getFieldDecorator('topic', {\n      initialValue: this.props.chapter.materialdetails.topic,\n      rules: [{\n        required: true,\n        message: 'Пожалуйста, введите название!',\n        whitespace: true\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, this.props.chapter.Materialmode)))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  chapter: state.chapter\n});\n\nconst NewMaterialForm = Form.create({\n  name: 'register'\n})(NewMaterial);\nexport default connect(mapStateToProps, {\n  ChangeMaterialConfirmDirty,\n  ChangeMaterialModalState,\n  ChangeMaterialTableData\n})(NewMaterialForm);","map":{"version":3,"sources":["C:\\React_project\\EduTest\\frontend\\src\\components\\admin\\Materials\\newmaterials.js"],"names":["React","Component","Form","Input","Button","Select","SecurePost","apis","connect","ChangeMaterialConfirmDirty","ChangeMaterialModalState","ChangeMaterialTableData","Alert","auth","Option","NewMaterial","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","console","log","url","CREATE_MATERIAL","data","_id","chapter","materialId","topic","then","response","success","message","catch","error","render","getFieldDecorator","MaterialImageprops","name","action","BASE","FILE_UPLOAD","retriveToken","listType","initialValue","materialdetails","num","rules","required","whitespace","Materialmode","mapStateToProps","state","NewMaterialForm","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport './newmaterials.css';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Select\r\n} from 'antd';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    ChangeMaterialConfirmDirty,\r\n    ChangeMaterialModalState,\r\n    ChangeMaterialTableData\r\n} from '../../../actions/chapterAction';\r\nimport Alert from '../../../components/common/alert';\r\nimport auth from '../../../services/AuthServices';\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nclass NewMaterial extends Component {\r\n\r\n\r\n    // SlidesTextChange =(e,i)=>{\r\n    //     var newSlides = [...this.state.materialDetails.slides]\r\n    //     newSlides[i]={\r\n    //         ...this.state.materialDetails.slides[i],\r\n    //         slidebody : e.target.value\r\n    //     }\r\n    //     if((newSlides[i].image==='undefined' || newSlides[i].image===undefined || newSlides[i].image===null || newSlides[i].image==='null') && \r\n    //         (newSlides[i].body==='undefined' || newSlides[i].body===undefined || newSlides[i].body==='null' || newSlides[i].body==='' || newSlides[i].body===null)){\r\n    //             newSlides[i]={\r\n    //                 ...this.state.materialDetails.slides[i],\r\n    //             }\r\n    //             this.setState((ps,pp)=>{\r\n    //                 return({\r\n    //                     materialDetails:{\r\n    //                         ...ps.materialDetails,\r\n    //                         slides:newSlides\r\n    //                     }\r\n    //                 })\r\n    //             })\r\n    //     }\r\n    //     this.setState((ps,pp)=>{\r\n    //         return({\r\n    //             materialDetails:{\r\n    //                 ...ps.materialDetails,\r\n    //                 slides:newSlides\r\n    //             }\r\n    //         })\r\n    //     })     \r\n    // }\r\n\r\n   \r\n\r\n    // MaterialImageonChange = (f)=>{\r\n    //     var newslide = this.state.materialDetails.materialimage\r\n    //     if(!f){\r\n    //         newslide=null\r\n    //     }\r\n    //     else{\r\n    //         newslide=`${apis.BASE}/${f.link}`\r\n    //     }\r\n    //     this.setState({\r\n    //         submitDisabled:false\r\n    //     })\r\n    //     if(newslide==='undefined' || newslide===undefined || newslide===null || newslide==='null') {\r\n    //         //(newOptions[i].body==='undefined' || newOptions[i].body===undefined || newOptions[i].body==='null' || newOptions[i].body==='' || newOptions[i].body===null)){\r\n    //         newslide=this.state.materialDetails.materialimage;    \r\n    //     }\r\n    //     this.setState((ps,pp)=>{\r\n    //         return({\r\n    //             materialDetails:{\r\n    //                 ...ps.materialDetails,\r\n    //                 materialimage:newslide\r\n    //             }\r\n    //         })\r\n    //     })\r\n    // }\r\n\r\n\r\n    \r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                console.log('Полученные значения формы: ', values);\r\n                \r\n                    SecurePost({\r\n                        url : `${apis.CREATE_MATERIAL}`,\r\n                        data : {\r\n                            _id : this.props.chapter.materialId,\r\n                            topic :values.topic,\r\n\r\n                            //slides : this.state.materialDetails.materialimage,\r\n                        }\r\n                    }).then((response)=>{\r\n                        if(response.data.success){\r\n                            this.props.ChangeMaterialModalState(false,null,'Регистрация');\r\n                            Alert('success','Успешно',response.data.message);\r\n                            this.props.ChangeMaterialTableData();\r\n                        }\r\n                        else{\r\n                            console.log(response.data);\r\n                            this.props.ChangeMaterialModalState(false,null,'Регистрация');\r\n                            return Alert('warning','Предупреждение!',response.data.message);\r\n                        }\r\n                    }).catch((error)=>{\r\n                        this.props.ChangeMaterialModalState(false,null,'Регистрация');\r\n                        return Alert('error','Ошибка!','Ошибка сервера');\r\n                    })\r\n                \r\n            }\r\n        });\r\n    };\r\n\r\n    // changeqImage = (f)=>{\r\n    //     this.setState((ps,pp)=>{\r\n    //         return({\r\n    //             materialDetails:{\r\n    //                 ...ps.materialDetails,\r\n    //                 materialimage:(f.link ?`${apis.BASE}/${f.link}`:null)\r\n    //             },\r\n    //             submitDisabled:false\r\n    //         })\r\n    //     })\r\n    // }\r\n    // upl=()=>{\r\n    //     this.setState({\r\n    //         submitDisabled: false\r\n    //     })\r\n    // }\r\n\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        var MaterialImageprops={\r\n            name: 'file',\r\n            action: `${apis.BASE}${apis.FILE_UPLOAD}?Token=${auth.retriveToken()}`,\r\n            listType: 'picture',\r\n        }\r\n        \r\n        return (\r\n            <div className=\"register-company-form\">\r\n                <div className=\"register-company-form-body\">\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Item label=\"№\" hasFeedback className=\"input-admin-company\">\r\n                            {getFieldDecorator('num', {\r\n                                initialValue : this.props.chapter.materialdetails.num,\r\n                                rules: [{ required: false, message: 'Пожалуйста, введите название!', whitespace: true }],\r\n                            })(<Input />)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Название\" hasFeedback className=\"input-admin-company\">\r\n                            {getFieldDecorator('topic', {\r\n                                initialValue : this.props.chapter.materialdetails.topic,\r\n                                rules: [{ required: true, message: 'Пожалуйста, введите название!', whitespace: true }],\r\n                            })(<Input />)}\r\n                        </Form.Item>\r\n                        \r\n                        {/* <Form.Item label=\"Material\">\r\n                        <Upload {...MaterialImageprops} beforeUpload={this.upl} onRemove={(f)=>this.MaterialImageonChange(null)} onSuccess={(f)=>this.MaterialImageonChange(f)}>\r\n                                {getFieldDecorator('slides', {\r\n                                    initialValue : this.props.chapter.materialdetails.slides,\r\n                                    rules: [{ required: false, message: 'Пожалуйста, загрузите логотип вашей компании!', whitespace: true }],\r\n                                })(<img src={this.props.chapter.materialdetails.slides} style={{width: \"60px\",height: \"60px\",}}/>)\r\n                                }\r\n                                \r\n                                <Button style={{marginLeft: '100px'}}>\r\n                                    <Icon type=\"upload\" /> Загрузить\r\n                                </Button>\r\n                                \r\n                            </Upload>\r\n                        </Form.Item> */}\r\n                        \r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                {this.props.chapter.Materialmode}\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    chapter : state.chapter\r\n});\r\n\r\n\r\n\r\nconst NewMaterialForm = Form.create({ name: 'register' })(NewMaterial);\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeMaterialConfirmDirty,\r\n    ChangeMaterialModalState,\r\n    ChangeMaterialTableData\r\n})(NewMaterialForm);\r\n\r\n"]},"metadata":{},"sourceType":"module"}