{"ast":null,"code":"var _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\basic\\\\login\\\\login.js\";\nimport React from \"react\";\nimport { Form, Input, Icon, Button } from 'antd';\nimport './login.css';\nimport { connect } from 'react-redux';\nimport { login, logout } from '../../../actions/loginAction';\nimport auth from '../../../services/AuthServices';\nimport Alert from '../../common/alert';\nimport { Redirect } from 'react-router-dom';\nimport LocalizedStrings from 'react-localization';\nlet strings = new LocalizedStrings({\n  ru: {\n    Error: \"Ошибка!\",\n    ErrorLabel: \"Ошибка сервера\",\n    EmailMsg1: \"Введен неверный адрес электронной почты!\",\n    EmailMsg2: \"Пожалуйста, введите свой адрес электронной почты!\",\n    User: \"Пользователь\",\n    Password: \"Пароль\",\n    PassMsg: \"Пожалуйста, введите свой пароль!\"\n  },\n  kz: {\n    Error: \"Қате!\",\n    ErrorLabel: \"Серведегі қателік\",\n    EmailMsg1: \"Электронды адрес дұрыс енгізілмеді!\",\n    EmailMsg2: \"Өтініш, өз электронды почтаңызды енгізіңіз!\",\n    User: \"Қолданушы\",\n    Password: \"Құпиясөз\",\n    PassMsg: \"Өтініш, өз құпиясөзіңізді енгізіңіз!\"\n  }\n});\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Полученные значения формы: ', values);\n          auth.LoginAuth(values.email, values.password).then(response => {\n            console.log(response);\n\n            if (response.data.success) {\n              this.props.login(response.data.user);\n              auth.storeToken(response.data.token);\n              this.setState({\n                isLoggedIn: true\n              });\n            } else {\n              return Alert('error', strings.Error, response.data.message);\n            }\n          }).catch(error => {\n            console.log(error);\n            return Alert('error', strings.Error, strings.ErrorLabel);\n          });\n        }\n      });\n    };\n\n    this.state = {\n      isLoggedIn: false\n    };\n  }\n\n  render() {\n    // console.log(\"DDDDDDDD:\", this.props)\n    // strings.setLanguage(this.props.lang);\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n\n    if (this.state.isLoggedIn) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: this.props.user.userOptions[0].link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"login-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"login-inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: \"Email\",\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, getFieldDecorator('email', {\n        rules: [{\n          type: 'email',\n          message: strings.EmailMsg1\n        }, {\n          required: true,\n          message: strings.EmailMsg2\n        }]\n      })( /*#__PURE__*/React.createElement(Input, {\n        prefix: /*#__PURE__*/React.createElement(Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }),\n        placeholder: strings.User,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }))), /*#__PURE__*/React.createElement(Form.Item, {\n        label: strings.Password,\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: strings.PassMsg\n        }]\n      })( /*#__PURE__*/React.createElement(Input, {\n        prefix: /*#__PURE__*/React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: strings.Password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }))), /*#__PURE__*/React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        block: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Login\")))));\n    }\n  }\n\n}\n\nconst LoginForm = Form.create({\n  name: 'login'\n})(Login);\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps, {\n  login,\n  logout\n})(LoginForm);","map":{"version":3,"names":["React","Form","Input","Icon","Button","connect","login","logout","auth","Alert","Redirect","LocalizedStrings","strings","ru","Error","ErrorLabel","EmailMsg1","EmailMsg2","User","Password","PassMsg","kz","Login","Component","constructor","props","handleSubmit","e","preventDefault","form","validateFields","err","values","console","log","LoginAuth","email","password","then","response","data","success","user","storeToken","token","setState","isLoggedIn","message","catch","error","state","render","getFieldDecorator","userOptions","link","rules","type","required","color","LoginForm","create","name","mapStateToProps"],"sources":["C:/React_project/EduTest/frontend/src/components/basic/login/login.js"],"sourcesContent":["import React from \"react\";\r\nimport { Form, Input, Icon, Button } from 'antd';\r\nimport './login.css';\r\nimport { connect } from 'react-redux';\r\nimport { login, logout } from '../../../actions/loginAction';\r\nimport auth from '../../../services/AuthServices';\r\nimport Alert from '../../common/alert';\r\nimport { Redirect } from 'react-router-dom';\r\nimport LocalizedStrings from 'react-localization';\r\n\r\nlet strings = new LocalizedStrings({\r\n    ru:{\r\n      Error:\"Ошибка!\",\r\n      ErrorLabel:\"Ошибка сервера\",\r\n      EmailMsg1:\"Введен неверный адрес электронной почты!\",\r\n      EmailMsg2:\"Пожалуйста, введите свой адрес электронной почты!\",\r\n      User:\"Пользователь\",\r\n      Password:\"Пароль\",\r\n      PassMsg:\"Пожалуйста, введите свой пароль!\",\r\n    },\r\n    kz: {\r\n        Error:\"Қате!\",\r\n        ErrorLabel:\"Серведегі қателік\",\r\n        EmailMsg1:\"Электронды адрес дұрыс енгізілмеді!\",\r\n        EmailMsg2:\"Өтініш, өз электронды почтаңызды енгізіңіз!\",\r\n        User:\"Қолданушы\",\r\n        Password:\"Құпиясөз\",\r\n        PassMsg:\"Өтініш, өз құпиясөзіңізді енгізіңіз!\",\r\n    }\r\n   });\r\n\r\nclass Login extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isLoggedIn :false\r\n        }\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log('Полученные значения формы: ', values);\r\n                auth.LoginAuth(values.email, values.password).then((response)=>{\r\n                    console.log(response);\r\n                    if(response.data.success){\r\n                        this.props.login(response.data.user)\r\n                        auth.storeToken(response.data.token);\r\n                        this.setState({\r\n                            isLoggedIn : true\r\n                        })\r\n                    }\r\n                    else{\r\n                        return Alert('error',strings.Error,response.data.message);\r\n                    }\r\n                }).catch((error)=>{\r\n                    console.log(error);\r\n                    return Alert('error',strings.Error,strings.ErrorLabel);\r\n                })              \r\n            }\r\n        });\r\n    };\r\n\r\n    render(){\r\n        // console.log(\"DDDDDDDD:\", this.props)\r\n        // strings.setLanguage(this.props.lang);\r\n        const { getFieldDecorator } = this.props.form;\r\n        if(this.state.isLoggedIn){\r\n            return <Redirect to={this.props.user.userOptions[0].link} />\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"login-container\">\r\n                    <div className=\"login-inner\">\r\n                        <Form  onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"Email\" hasFeedback>\r\n                                {getFieldDecorator('email', {\r\n                                    rules: [\r\n                                        {\r\n                                            type: 'email',\r\n                                            message: strings.EmailMsg1,\r\n                                        },\r\n                                        {\r\n                                            required: true,\r\n                                            message: strings.EmailMsg2,\r\n                                        },\r\n                                    ],\r\n                                })(<Input \r\n                                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                    placeholder={strings.User}/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label={strings.Password} hasFeedback>\r\n                                {getFieldDecorator('password', {\r\n                                    rules: [\r\n                                        { \r\n                                            required: true, message: strings.PassMsg\r\n                                        }\r\n                                    ],\r\n                                })(\r\n                                    <Input\r\n                                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                    type=\"password\"\r\n                                    placeholder={strings.Password}\r\n                                    />,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                    Login\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </div>  \r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst LoginForm = Form.create({ name: 'login' })(Login);\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    user : state.user\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    login, \r\n    logout\r\n})(LoginForm);"],"mappings":"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"},"metadata":{},"sourceType":"module"}