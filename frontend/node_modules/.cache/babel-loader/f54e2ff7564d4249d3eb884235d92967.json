{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport { css as _css } from \"styled-components\";\nvar _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\customer\\\\Testing\\\\testpage.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n          left: 25rem;\\n        \"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n          right: 25rem;\\n        \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'antd'; // import Highlighter from 'react-highlight-words';\n\nimport { ChangeAnswersSearchText, ChangeAnswersTableData } from '../../../actions/chapterAction';\nimport Alert from '../../../components/common/alert';\nimport { SecurePost, SecureGet } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport styled from \"styled-components\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport Counter from './Counter';\nconst Container = styled.div.withConfig({\n  displayName: \"testpage__Container\",\n  componentId: \"sc-1thigeq-0\"\n})([\"display:flex;justify-content:center;align-items:center;min-height:80vh;width:100%;\"]);\nconst ScreenQuiz = styled.div.withConfig({\n  displayName: \"testpage__ScreenQuiz\",\n  componentId: \"sc-1thigeq-1\"\n})([\"display:flex;justify-content:\", \";align-items:center;flex-direction:column;max-width:1200px;padding:\", \";width:100%;height:80vh;background:#fff;border-radius:5px;box-shadow:0px 5px 40px -20px #000;\"], props => props.screen ? \"space-between\" : \"center\", props => props.screen ? \"5rem\" : \".5rem\");\nconst Title = styled.h1.withConfig({\n  displayName: \"testpage__Title\",\n  componentId: \"sc-1thigeq-2\"\n})([\"font-size:2.5rem;margin-bottom:0.5rem;text-align:center;max-width:90%;\"]);\nconst Paragraph = styled.p.withConfig({\n  displayName: \"testpage__Paragraph\",\n  componentId: \"sc-1thigeq-3\"\n})([\"font-size:1.5rem;\"]); // const Button = styled.button`\n//   font-size: 1.2rem;\n//   font-weight: bold;\n//   width: 40%;\n//   height: 3rem;\n//   // color: #fff;\n//   border: none;\n//   // background: #7159c1;\n//   border-radius: 5px;\n//   box-shadow: 0px 3px 3px 0px #666;\n//   @-webkit-keyframes pulsate {\n//     0% {transform: scale(0.1, 0.1); opacity: 0.0;}\n//     50% {opacity: 1.0;}\n//     100% {transform: scale(7, 7); opacity: 0.0;}\n// }\n// `;\n\nconst ButtonScr = styled.button.withConfig({\n  displayName: \"testpage__ButtonScr\",\n  componentId: \"sc-1thigeq-4\"\n})([\"font-size:1.4rem;z-index:10;position:fixed;top:15%;\", \"\"], props => props.right ? _css(_templateObject()) : _css(_templateObject2()));\nconst ContainerLabel = styled.div.withConfig({\n  displayName: \"testpage__ContainerLabel\",\n  componentId: \"sc-1thigeq-5\"\n})([\"display:flex;align-items:flex-start;flex-direction:column;margin:0 auto 0.5rem auto;\"]);\nconst Label = styled.label.withConfig({\n  displayName: \"testpage__Label\",\n  componentId: \"sc-1thigeq-6\"\n})([\"display:flex;justify-content:center;align-items:center;\"]);\nconst Radio = styled.input.attrs({\n  type: 'checkbox'\n}).withConfig({\n  displayName: \"testpage__Radio\",\n  componentId: \"sc-1thigeq-7\"\n})([\"display:flex;justify-content:center;align-items:center;width:15px;height:15px;border-radius:50%;border:7.5px solid black;margin:0 0.5rem 0 0;background:\", \";\"], props => props.clickedLabel ? \"#7159c1\" : \"#fff\"); // const IntoRadio = styled.div`\n//   width: 5px;\n//   height: 5px;\n//   border-radius: 3px;\n//   background: #fff;\n// `;\n// const Error = styled.div`\n//   top: 22rem;\n//   color: red;\n//   position: absolute;\n//   font-weight: bold;\n// `;\n\nclass TestPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNextClick = c => {\n      const count = this.state.count;\n      this.setState({\n        count: count + 1,\n        checked: false\n      });\n    };\n\n    this.handlePrevClick = () => {\n      const _this$state = this.state,\n            count = _this$state.count,\n            questions = _this$state.questions;\n\n      if (questions.length >= count && count > 0) {\n        this.setState({\n          count: count - 1,\n          checked: false\n        });\n      }\n    };\n\n    this.handleClick = c => {\n      const _this$state2 = this.state,\n            count = _this$state2.count,\n            questions = _this$state2.questions,\n            clickedLabel = _this$state2.clickedLabel,\n            answer = _this$state2.answer; // questions[c].question=questions[c].question+'fg';\n\n      if (questions.length >= count && clickedLabel.answerText) {\n        this.setState({\n          questions: questions,\n          count: c + 1,\n          clickedLabel: {},\n          answer: clickedLabel.correctAnswer ? answer + 1 : answer,\n          error: false,\n          checked: false\n        });\n      }\n    };\n\n    this.handleEndClick = c => {\n      const _this$state3 = this.state,\n            count = _this$state3.count,\n            questions = _this$state3.questions,\n            clickedLabel = _this$state3.clickedLabel;\n\n      if (questions.length === count) {\n        this.setState({\n          screenFinish: true,\n          testEnded: true,\n          testStarted: false\n        });\n      }\n    };\n\n    this.renderInitial = () => {\n      const count = this.state.count;\n      this.setState({\n        screen: false,\n        loading: false,\n        count: 1,\n        testStarted: true,\n        testEnded: false,\n        testDidNotStart: false\n      });\n      console.log(\"1  CREATE_TEST\");\n      SecurePost({\n        url: \"\".concat(apis.CREATE_TEST),\n        data: {\n          _id: this.props.chapter.testid,\n          chapterid: this.props.chid,\n          materialid: this.props.id,\n          startDate: Date().toLocaleString(),\n          complationDate: Date().toLocaleString(),\n          startTest: true,\n          endTest: false,\n          result: count\n        }\n      }).then(response => {\n        if (response.data.success) {\n          this.props.ChangeTestModalState(false, null, 'Save');\n          Alert('success', 'Успешно', response.data.message);\n        } else {\n          this.props.ChangeTestModalState(false, null, 'Save');\n          return Alert('warning', 'Предупреждение!', response.data.message);\n        }\n      }).catch(error => {\n        this.props.ChangeTestModalState(false, null, 'Save');\n        return Alert('error', 'Ошибка!', 'Ошибка сервера');\n      });\n      SecurePost({\n        url: \"\".concat(apis.CREATE_TST),\n        data: {\n          materialId: this.props.id,\n          testid: this.props.chapter.testid\n        }\n      });\n    };\n\n    this.renderScreenInitial = () => {\n      return /*#__PURE__*/React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(ScreenQuiz, {\n        screen: this.state.screen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, \"\\u0422\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: this.renderInitial,\n        style: {\n          fontSize: \"1.2rem\",\n          fontWeight: \"bold\",\n          width: \"40%\",\n          height: \"3rem\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          boxShadow: \"0px 3px 3px 0px #666\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\")));\n    };\n\n    this.handleOptions = (answerOptions, c) => {\n      const _this$state4 = this.state,\n            clickedLabel = _this$state4.clickedLabel,\n            questions = _this$state4.questions;\n      return answerOptions.map((a, i) => {\n        return /*#__PURE__*/React.createElement(Label, {\n          key: i,\n          onClick: () => {\n            this.setState({\n              questions: questions,\n              clickedLabel: a,\n              error: false\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322\n          },\n          __self: this\n        }, questions[c].isOneTrueAnswer === false ? /*#__PURE__*/React.createElement(Radio, {\n          checked: a.UserAnswer,\n          onChange: e => this.handleChange(e, answerOptions, c, i),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334\n          },\n          __self: this\n        }) : /*#__PURE__*/React.createElement(Radio, {\n          checked: a.UserAnswer,\n          onChange: e => this.handleChange2(e, answerOptions, c, i),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 339\n          },\n          __self: this\n        }), /*#__PURE__*/React.createElement(Paragraph, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344\n          },\n          __self: this\n        }, a.answerText));\n      });\n    };\n\n    this.handleChange = (e, answerOptions, c, i) => {\n      const questions = this.state.questions;\n      questions[c].answerOptions[i].UserAnswer = true;\n      this.setState({\n        questions: questions\n      });\n    };\n\n    this.handleChange2 = (e, answerOptions, c, i) => {\n      const questions = this.state.questions;\n      questions[c].answerOptions[i].UserAnswer = true;\n\n      if (questions[c].answerOptions[i].UserAnswer === true) {\n        answerOptions.map((d, j) => {\n          if (i !== j) {\n            questions[c].answerOptions[j].UserAnswer = false;\n          }\n        });\n      }\n\n      this.setState({\n        questions: questions\n      });\n    };\n\n    this.renderQuestions = () => {\n      const _this$state5 = this.state,\n            count = _this$state5.count,\n            questions = _this$state5.questions;\n      const NewQuestions = Array.from(questions);\n      const removeQuestions = NewQuestions.slice(count - 1, count);\n      return removeQuestions.map((q, i) => /*#__PURE__*/React.createElement(Container, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(ScreenQuiz, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Counter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }), /*#__PURE__*/React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, count, \"/\", questions.length), /*#__PURE__*/React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, q.question), /*#__PURE__*/React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, count), /*#__PURE__*/React.createElement(ContainerLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, this.handleOptions(q.answerOptions, count - 1)), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.handleClick(count - 1),\n        style: {\n          fontSize: \"1.2rem\",\n          fontWeight: \"bold\",\n          width: \"40%\",\n          height: \"3rem\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          boxShadow: \"0px 3px 3px 0px #666\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), count === questions.length ? /*#__PURE__*/React.createElement(Button, {\n        onClick: this.handleEndClick,\n        style: {\n          marginTop: '30px',\n          fontSize: \"1.2rem\",\n          fontWeight: \"bold\",\n          width: \"40%\",\n          height: \"3rem\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          boxShadow: \"0px 3px 3px 0px #666\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }, \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\") : null, /*#__PURE__*/React.createElement(ButtonScr, {\n        onClick: () => this.handleNextClick(count),\n        right: true,\n        disabled: count === questions.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, \"\\u0421\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u0438\\u0439\"), /*#__PURE__*/React.createElement(ButtonScr, {\n        onClick: this.handlePrevClick,\n        left: true,\n        disabled: count === 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }, \"\\u041F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u0438\\u0439\"))));\n    };\n\n    this.renderResult = () => {\n      const _this$state6 = this.state,\n            answer = _this$state6.answer,\n            questions = _this$state6.questions,\n            screenFinish = _this$state6.screenFinish;\n      return /*#__PURE__*/React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(ScreenQuiz, {\n        screen: screenFinish,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        },\n        __self: this\n      }, \"\\u0412\\u044B \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u043E \\u043E\\u0442\\u0432\\u0435\\u0442\\u0438\\u043B\\u0438 \", answer, \" \\u0438\\u0437 \", questions.length, \" \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u043E\\u0432\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.setState({\n          count: 0,\n          screenFinish: false,\n          screen: true,\n          answer: 0\n        }),\n        style: {\n          fontSize: \"1.2rem\",\n          fontWeight: \"bold\",\n          width: \"40%\",\n          height: \"3rem\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          boxShadow: \"0px 3px 3px 0px #666\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }, \"\\u0422\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E\")));\n    };\n\n    this.state = {\n      questions: [],\n      loading: false,\n      screen: true,\n      count: 0,\n      clickedLabel: [],\n      answer: 0,\n      error: false,\n      screenFinish: false,\n      second: 60,\n      time: {},\n      checked: false,\n      testStarted: false,\n      testEnded: false,\n      testDidNotStart: true,\n      details: []\n    };\n  }\n\n  componentWillMount() {\n    console.log(\"1 - componentDidMount\");\n    this.props.ChangeTestTableData(this.props.id); // this.props.ChangeAnswersTableData(this.props.id);\n\n    SecureGet({\n      url: \"\".concat(apis.GET_ALL_ANSWERS, \"/\").concat(this.props.id)\n    }).then(response => {\n      console.log('EEEEEEEEEEEEEEEEEEEEEEEEEEEEEE:', response.data.data[0]);\n      this.setState({\n        details: response.data.data[0],\n        loading: false\n      });\n      console.log(this.state.details);\n    }).catch(error => {\n      console.log(error);\n    });\n    console.log(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\", this.state.details);\n    var questions = [];\n\n    if (this.state.details.length === 0) {\n      return Alert('warning', \"Сперва пройдите материалы\");\n    } else {\n      this.state.details.chosenOption.map((d, i) => {\n        questions[i] = {\n          question: d.questionText,\n          isOneTrueAnswer: d.options[0].isAnswer + d.options[1].isAnswer + d.options[2].isAnswer + d.options[3].isAnswer + d.options[4].isAnswer === 1 ? true : false,\n          // questionImage : d.quesimg,\n          answerOptions: [{\n            answerText: d.options[0].answers,\n            UserAnswer: d.options[0].userAnswer,\n            correctAnswer: d.options[0].isAnswer\n          }, {\n            answerText: d.options[1].answers,\n            UserAnswer: d.options[1].userAnswer,\n            correctAnswer: d.options[1].isAnswer\n          }, {\n            answerText: d.options[2].answers,\n            UserAnswer: d.options[2].userAnswer,\n            correctAnswer: d.options[2].isAnswer\n          }, {\n            answerText: d.options[3].answers,\n            UserAnswer: d.options[3].userAnswer,\n            correctAnswer: d.options[3].isAnswer\n          }, {\n            answerText: d.options[4].answers,\n            UserAnswer: d.options[4].userAnswer,\n            correctAnswer: d.options[4].isAnswer\n          }]\n        };\n      });\n    }\n\n    console.log(\"1 - End cDM\");\n    this.setState({\n      questions: questions,\n      loading: true\n    });\n  }\n\n  render() {\n    const _this$state7 = this.state,\n          screenFinish = _this$state7.screenFinish,\n          questions = _this$state7.questions,\n          screen = _this$state7.screen;\n    return !screenFinish && questions ? /*#__PURE__*/React.createElement(React.Fragment, null, screen ? this.renderScreenInitial() : this.renderQuestions()) : this.renderResult();\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  chapter: state.chapter,\n  trainer: state.trainer\n});\n\nexport default connect(mapStateToProps, {\n  ChangeAnswersSearchText,\n  ChangeAnswersTableData // ChangeAnswersModalState\n\n})(Test);","map":{"version":3,"names":["React","Component","useState","useEffect","connect","Button","ChangeAnswersSearchText","ChangeAnswersTableData","Alert","SecurePost","SecureGet","apis","styled","Counter","Container","div","ScreenQuiz","props","screen","Title","h1","Paragraph","p","ButtonScr","button","right","css","ContainerLabel","Label","label","Radio","input","attrs","type","clickedLabel","TestPage","constructor","handleNextClick","c","count","state","setState","checked","handlePrevClick","questions","length","handleClick","answer","answerText","correctAnswer","error","handleEndClick","screenFinish","testEnded","testStarted","renderInitial","loading","testDidNotStart","console","log","url","CREATE_TEST","data","_id","chapter","testid","chapterid","chid","materialid","id","startDate","Date","toLocaleString","complationDate","startTest","endTest","result","then","response","success","ChangeTestModalState","message","catch","CREATE_TST","materialId","renderScreenInitial","fontSize","fontWeight","width","height","border","borderRadius","boxShadow","handleOptions","answerOptions","map","a","i","isOneTrueAnswer","UserAnswer","e","handleChange","handleChange2","d","j","renderQuestions","NewQuestions","Array","from","removeQuestions","slice","q","question","marginTop","renderResult","second","time","details","componentWillMount","ChangeTestTableData","GET_ALL_ANSWERS","chosenOption","questionText","options","isAnswer","answers","userAnswer","render","mapStateToProps","trainer","Test"],"sources":["C:/React_project/EduTest/frontend/src/components/customer/Testing/testpage.js"],"sourcesContent":["import React, { Component, useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Button } from 'antd';\r\n// import Highlighter from 'react-highlight-words';\r\nimport  { css } from 'styled-components/macro'\r\nimport { \r\n  ChangeAnswersSearchText,\r\n  ChangeAnswersTableData,\r\n} from '../../../actions/chapterAction';\r\nimport Alert from '../../../components/common/alert';\r\nimport { SecurePost, SecureGet } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport styled from \"styled-components\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport Counter from './Counter';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 80vh;\r\n  width: 100%;\r\n  /*background: #7159c1;*/\r\n`;\r\n\r\nconst ScreenQuiz = styled.div`\r\n  display: flex;\r\n  justify-content: ${props => (props.screen ? \"space-between\" : \"center\")};\r\n  align-items: center;\r\n  flex-direction: column;\r\n  max-width: 1200px;\r\n  padding: ${props => (props.screen ? \"5rem\" : \".5rem\")};\r\n  width: 100%;\r\n  height: 80vh;\r\n  background: #fff;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 5px 40px -20px #000;\r\n\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 2.5rem;\r\n  // color: #7159c1;\r\n  margin-bottom: 0.5rem;\r\n  text-align: center;\r\n  max-width: 90%;\r\n`;\r\n\r\nconst Paragraph = styled.p`\r\n  font-size: 1.5rem;\r\n`;\r\n\r\n// const Button = styled.button`\r\n//   font-size: 1.2rem;\r\n//   font-weight: bold;\r\n//   width: 40%;\r\n//   height: 3rem;\r\n//   // color: #fff;\r\n//   border: none;\r\n//   // background: #7159c1;\r\n//   border-radius: 5px;\r\n//   box-shadow: 0px 3px 3px 0px #666;\r\n\r\n//   @-webkit-keyframes pulsate {\r\n//     0% {transform: scale(0.1, 0.1); opacity: 0.0;}\r\n//     50% {opacity: 1.0;}\r\n//     100% {transform: scale(7, 7); opacity: 0.0;}\r\n// }\r\n// `;\r\n\r\nconst ButtonScr = styled.button`\r\n  font-size: 1.4rem;\r\n  z-index: 10;\r\n  position: fixed;\r\n  top: 15%;\r\n  ${(props) =>\r\n    props.right\r\n      ? css`\r\n          right: 25rem;\r\n        `\r\n      : css`\r\n          left: 25rem;\r\n        `}\r\n`\r\n\r\nconst ContainerLabel = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  margin: 0 auto 0.5rem auto;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Radio = styled.input.attrs({ type: 'checkbox' })`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 15px;\r\n  height: 15px;\r\n  border-radius: 50%;\r\n  border: 7.5px solid black;\r\n  margin: 0 0.5rem 0 0;\r\n  background: ${props => (props.clickedLabel ? \"#7159c1\" : \"#fff\")};\r\n`;\r\n\r\n// const IntoRadio = styled.div`\r\n//   width: 5px;\r\n//   height: 5px;\r\n//   border-radius: 3px;\r\n//   background: #fff;\r\n// `;\r\n\r\n// const Error = styled.div`\r\n//   top: 22rem;\r\n//   color: red;\r\n//   position: absolute;\r\n//   font-weight: bold;\r\n// `;\r\n\r\n\r\nclass TestPage extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state={\r\n        questions:[],\r\n        loading:false,\r\n        screen: true,\r\n        count: 0,\r\n        clickedLabel: [],\r\n        answer: 0,\r\n        error:false,\r\n        screenFinish:false,\r\n        second:60,\r\n        time:{},\r\n        checked:false,\r\n        testStarted:false,\r\n        testEnded:false,\r\n        testDidNotStart:true,\r\n        details:[],\r\n      }\r\n    }\r\n  \r\n    componentWillMount(){\r\n      console.log(\"1 - componentDidMount\")\r\n      this.props.ChangeTestTableData(this.props.id);\r\n      // this.props.ChangeAnswersTableData(this.props.id);\r\n      SecureGet({\r\n        url: `${apis.GET_ALL_ANSWERS}/${this.props.id}`,\r\n      }).then((response)=>{\r\n          console.log('EEEEEEEEEEEEEEEEEEEEEEEEEEEEEE:',response.data.data[0]);\r\n          this.setState({\r\n              details : response.data.data[0],\r\n              loading : false\r\n          })\r\n          console.log(this.state.details)\r\n      }).catch((error)=>{\r\n          console.log(error);\r\n      })\r\n\r\n    \r\n      console.log(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\", this.state.details)\r\n      var questions=[];\r\n      if(this.state.details.length === 0){\r\n        return Alert('warning',\"Сперва пройдите материалы\")\r\n      }\r\n      else{\r\n        this.state.details.chosenOption.map((d,i)=>{\r\n          questions[i]=(\r\n                {\r\n                  question : d.questionText,\r\n                  isOneTrueAnswer : (d.options[0].isAnswer + d.options[1].isAnswer + d.options[2].isAnswer + d.options[3].isAnswer \r\n                    + d.options[4].isAnswer)===1 ? true : false,\r\n                  // questionImage : d.quesimg,\r\n                  answerOptions: [\r\n                    { answerText: d.options[0].answers, UserAnswer: d.options[0].userAnswer, correctAnswer: d.options[0].isAnswer },\r\n                    { answerText: d.options[1].answers, UserAnswer: d.options[1].userAnswer, correctAnswer: d.options[1].isAnswer },\r\n                    { answerText: d.options[2].answers, UserAnswer: d.options[2].userAnswer, correctAnswer: d.options[2].isAnswer },\r\n                    { answerText: d.options[3].answers, UserAnswer: d.options[3].userAnswer, correctAnswer: d.options[3].isAnswer },\r\n                    { answerText: d.options[4].answers, UserAnswer: d.options[4].userAnswer, correctAnswer: d.options[4].isAnswer }\r\n                  ]\r\n                }\r\n              )\r\n        })\r\n      }\r\n      console.log(\"1 - End cDM\")\r\n      this.setState({\r\n        questions:questions,\r\n        loading:true\r\n      })\r\n    }\r\n\r\n    handleNextClick=(c)=>{\r\n      const { count} = this.state;\r\n        this.setState({\r\n          count: count+1,\r\n          checked:false,\r\n        });\r\n    }\r\n\r\n    handlePrevClick=()=>{\r\n      const { count, questions} = this.state;\r\n      if (questions.length >= count && count>0) {\r\n        this.setState({\r\n          count: count - 1,\r\n          checked:false,\r\n        });\r\n      } \r\n    }\r\n\r\n    handleClick = (c)=> {\r\n      const { count, questions, clickedLabel, answer} = this.state;\r\n      // questions[c].question=questions[c].question+'fg';\r\n      if (questions.length >= count && clickedLabel.answerText) {\r\n        this.setState({\r\n          questions:questions,\r\n          count: c+1,\r\n          clickedLabel: {},\r\n          answer: clickedLabel.correctAnswer ? answer + 1 : answer,\r\n          error: false,\r\n          checked:false,\r\n        });\r\n      }\r\n    }\r\n\r\n    handleEndClick = (c)=> {\r\n      const { count, questions, clickedLabel } = this.state;\r\n      if (questions.length === count) {\r\n        this.setState({\r\n          screenFinish: true,\r\n          testEnded:true,\r\n          testStarted:false,\r\n        });\r\n      }\r\n\r\n\r\n    }\r\n\r\n    renderInitial = () => {\r\n      const { count } = this.state;\r\n\r\n      this.setState({\r\n        screen: false,\r\n        loading:false,\r\n        count: 1,\r\n        testStarted:true,\r\n        testEnded:false,\r\n        testDidNotStart:false,\r\n      });\r\n\r\n      console.log(\"1  CREATE_TEST\")\r\n      SecurePost({\r\n        url : `${apis.CREATE_TEST}`,\r\n        data : {\r\n          _id: this.props.chapter.testid,\r\n            chapterid : this.props.chid,\r\n            materialid : this.props.id,\r\n            startDate : Date().toLocaleString(),\r\n            complationDate : Date().toLocaleString(),\r\n            startTest: true,\r\n            endTest: false,\r\n            result: count\r\n          }\r\n        })\r\n        .then((response)=>{\r\n          if(response.data.success){\r\n              this.props.ChangeTestModalState(false,null, 'Save'); \r\n              Alert('success','Успешно',response.data.message);\r\n          }\r\n          else{\r\n              this.props.ChangeTestModalState(false,null, 'Save');\r\n              return Alert('warning','Предупреждение!',response.data.message);\r\n          }\r\n        })\r\n        .catch((error)=>{\r\n            this.props.ChangeTestModalState(false,null, 'Save');\r\n            return Alert('error','Ошибка!','Ошибка сервера');\r\n        })\r\n    \r\n        \r\n      SecurePost({\r\n        url : `${apis.CREATE_TST}`,\r\n        data : {\r\n          materialId : this.props.id,\r\n          testid : this.props.chapter.testid,\r\n        }\r\n      })\r\n    };\r\n\r\n    renderScreenInitial = () => {\r\n      return (\r\n        <Container>\r\n          <ScreenQuiz screen={this.state.screen}>\r\n            <Title>Тестирование</Title>\r\n            <Button \r\n              onClick={this.renderInitial} \r\n              style={{\r\n                fontSize: \"1.2rem\", \r\n                fontWeight: \"bold\",\r\n                width: \"40%\",\r\n                height: \"3rem\",\r\n                border: \"none\",\r\n                borderRadius: \"5px\",\r\n                boxShadow: \"0px 3px 3px 0px #666\"\r\n              }}\r\n              >\r\n                Начать тест\r\n            </Button>\r\n          </ScreenQuiz>\r\n        </Container>\r\n      );\r\n    };\r\n  \r\n    handleOptions = (answerOptions,c) => {\r\n      const { clickedLabel,questions } = this.state;\r\n      return answerOptions.map((a, i) => {\r\n        return (\r\n          <Label\r\n            key={i}\r\n            onClick={() =>{\r\n              this.setState({\r\n                questions:questions,\r\n                clickedLabel: a,\r\n\r\n                error: false\r\n              })}\r\n            }\r\n          >\r\n            { questions[c].isOneTrueAnswer===false ?\r\n            <Radio \r\n              checked={a.UserAnswer} \r\n              onChange={e => this.handleChange(e,answerOptions, c,i)}\r\n            />\r\n            :\r\n            <Radio  \r\n              checked={a.UserAnswer}\r\n              onChange={e => this.handleChange2(e,answerOptions, c,i)}\r\n            />\r\n            }\r\n            <Paragraph>{a.answerText}</Paragraph>\r\n          </Label>\r\n          \r\n        );\r\n      });\r\n    };\r\n\r\n    handleChange = (e,answerOptions, c, i) => {\r\n      const { questions } = this.state\r\n        questions[c].answerOptions[i].UserAnswer=true;\r\n        \r\n        this.setState({\r\n          questions:questions,\r\n        });\r\n    };\r\n\r\n    handleChange2 = (e,answerOptions, c, i) => {\r\n      const { questions } = this.state\r\n      questions[c].answerOptions[i].UserAnswer=true;\r\n\r\n      if(questions[c].answerOptions[i].UserAnswer===true){\r\n        answerOptions.map((d,j) =>{\r\n          if(i!==j){\r\n            questions[c].answerOptions[j].UserAnswer=false;\r\n          }\r\n        })\r\n      }\r\n        this.setState({\r\n          questions:questions,\r\n        });\r\n    };\r\n\r\n\r\n  \r\n  \r\n    renderQuestions = () => {\r\n      const { count,questions } = this.state;\r\n      const NewQuestions = Array.from(questions);\r\n      const removeQuestions = NewQuestions.slice(count - 1, count);\r\n      return removeQuestions.map((q, i) => (\r\n\r\n        <Container key={i}>\r\n          <ScreenQuiz>\r\n            <Counter/>\r\n\r\n            <h3>{count}/{questions.length}</h3>\r\n            <Title>{q.question}</Title>         \r\n            <label>{count}</label>\r\n            <ContainerLabel>\r\n              {this.handleOptions(q.answerOptions, count-1)}\r\n            </ContainerLabel>\r\n            <Button onClick={()=>this.handleClick(count-1)}\r\n                          style={{\r\n                            fontSize: \"1.2rem\", \r\n                            fontWeight: \"bold\",\r\n                            width: \"40%\",\r\n                            height: \"3rem\",\r\n                            border: \"none\",\r\n                            borderRadius: \"5px\",\r\n                            boxShadow: \"0px 3px 3px 0px #666\"\r\n                          }}\r\n            >\r\n                Сохранить\r\n            </Button>\r\n            { count===questions.length ?\r\n            <Button onClick={this.handleEndClick}\r\n              style={{\r\n                marginTop: '30px',\r\n                fontSize: \"1.2rem\", \r\n                fontWeight: \"bold\",\r\n                width: \"40%\",\r\n                height: \"3rem\",\r\n                border: \"none\",\r\n                borderRadius: \"5px\",\r\n                boxShadow: \"0px 3px 3px 0px #666\"\r\n              }}\r\n            >\r\n                Завершить тест\r\n            </Button>\r\n              : null\r\n          }\r\n            <ButtonScr onClick={()=>this.handleNextClick(count)} right disabled={count === questions.length}>Следующий</ButtonScr>\r\n            <ButtonScr onClick={this.handlePrevClick} left disabled={count===1}>Предыдущий</ButtonScr>\r\n          </ScreenQuiz>\r\n        </Container>\r\n\r\n      ));\r\n    };\r\n  \r\n    renderResult = () => {\r\n      const { answer,questions, screenFinish } = this.state;\r\n  \r\n      return (\r\n        <Container>\r\n          <ScreenQuiz screen={screenFinish}>\r\n            <Title>Вы правильно ответили {answer} из {questions.length} вопросов</Title>\r\n            <Button\r\n              onClick={() =>\r\n                this.setState({\r\n                  count: 0,\r\n                  screenFinish: false,\r\n                  screen: true,\r\n                  answer: 0\r\n                })\r\n              }\r\n\r\n              style={{\r\n                fontSize: \"1.2rem\", \r\n                fontWeight: \"bold\",\r\n                width: \"40%\",\r\n                height: \"3rem\",\r\n                border: \"none\",\r\n                borderRadius: \"5px\",\r\n                boxShadow: \"0px 3px 3px 0px #666\"\r\n              }}\r\n            >\r\n              Тестировать заново\r\n            </Button>\r\n          </ScreenQuiz>\r\n        </Container>\r\n      );\r\n    };\r\n\r\n\r\n    render() {\r\n      const { screenFinish, questions, screen } = this.state;\r\n\r\n      return !screenFinish && questions ? (\r\n        <>{screen ? this.renderScreenInitial() : this.renderQuestions()}</>\r\n      ) : (\r\n        this.renderResult()\r\n      );\r\n    }\r\n  }\r\n  \r\n  const mapStateToProps = state => ({\r\n      chapter : state.chapter,\r\n      trainer : state.trainer\r\n  });\r\n  \r\n  export default connect(mapStateToProps,{\r\n      ChangeAnswersSearchText,\r\n      ChangeAnswersTableData,\r\n      // ChangeAnswersModalState\r\n  })(Test);\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}