{"ast":null,"code":"import _objectSpread from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\admin\\\\Questions\\\\newquestion.js\";\nimport React, { Component } from 'react'; //import './newquestion.css';\n\nimport auth from '../../../services/AuthServices';\nimport { Form, Input, Button, Select, Row, Col, Checkbox, Modal, Upload, Icon } from 'antd';\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport { connect } from 'react-redux';\nimport { ChangeQuestionConfirmDirty, ChangeQuestionTableData, ChangeQuestionModalState } from '../../../actions/trainerAction';\nimport Alert from '../../../components/common/alert'; //const { Option } = Select;\n\nimport NewOptionForm from '../options/newoptions';\n\nclass NewQuestion extends Component {\n  constructor(props) {\n    super(props);\n\n    this.Customalert = () => {\n      Modal.confirm({\n        title: 'Подтверждать',\n        content: 'пустой параметр не может быть установлен в качестве ответа',\n        okText: 'Ok',\n        cancelText: null\n      });\n    };\n\n    this.QuestionImageonChange = f => {\n      var newQuestion = this.state.questionDetails.questionimage;\n\n      if (!f) {\n        newQuestion = null;\n      } else {\n        newQuestion = \"\".concat(apis.BASE, \"/\").concat(f.link);\n      }\n\n      this.setState({\n        submitDisabled: false\n      });\n\n      if (newQuestion === 'undefined' || newQuestion === undefined || newQuestion === null || newQuestion === 'null') {\n        //(newOptions[i].body==='undefined' || newOptions[i].body===undefined || newOptions[i].body==='null' || newOptions[i].body==='' || newOptions[i].body===null)){\n        newQuestion = this.state.questionDetails.questionimage;\n      }\n\n      this.setState((ps, pp) => {\n        return {\n          questionDetails: _objectSpread({}, ps.questionDetails, {\n            questionimage: newQuestion\n          })\n        };\n      });\n    };\n\n    this.OptionTextChange = e => {\n      var newOption1 = this.props.trainer.questioneditdetails.answer1;\n      newOption1 = _objectSpread({}, this.props.trainer.questioneditdetails.answer1, {\n        answer1: e.target.value\n      });\n\n      if (newOption1 === 'undefined' || newOption1 === undefined || newOption1 === 'null' || newOption1 === '' || newOption1 === null) {\n        newOption1 = _objectSpread({}, this.props.trainer.questioneditdetails, {\n          trueans1: false\n        });\n        this.setState((ps, pp) => {\n          return {\n            questioneditsetails: _objectSpread({}, pp.trainer.questioneditdetails, {\n              answer1: newOption1\n            })\n          };\n        });\n      }\n\n      this.setState((ps, pp) => {\n        return {\n          questioneditdetails: _objectSpread({}, pp.trainer.questioneditdetails, {\n            answer1: newOption1\n          })\n        };\n      });\n    };\n\n    this.AnswerOptionSwitch1 = e => {\n      if (this.state.questionDetails.answer1 !== '' && this.state.questionDetails.answer1 !== null) {\n        var newOption1 = this.state.questionDetails.trueans1;\n        newOption1 = e.target.checked;\n        this.setState((ps, pp) => {\n          return {\n            questionDetails: _objectSpread({}, ps.questionDetails, {\n              trueans1: newOption1\n            })\n          };\n        });\n      } else {\n        this.Customalert();\n        return;\n      }\n    };\n\n    this.AnswerOptionSwitch2 = e => {\n      if (this.state.questionDetails.answer2 !== '' && this.state.questionDetails.answer2 !== null) {\n        var newOption2 = this.state.questionDetails.trueans2;\n        newOption2 = e.target.checked;\n        this.setState((ps, pp) => {\n          return {\n            questionDetails: _objectSpread({}, ps.questionDetails, {\n              trueans2: newOption2\n            })\n          };\n        });\n      } else {\n        this.Customalert();\n        return;\n      }\n    };\n\n    this.AnswerOptionSwitch3 = e => {\n      if (this.state.questionDetails.answer3 !== '' && this.state.questionDetails.answer3 !== null) {\n        var newOption3 = this.state.questionDetails.trueans3;\n        newOption3 = e.target.checked;\n        this.setState((ps, pp) => {\n          return {\n            questionDetails: _objectSpread({}, ps.questionDetails, {\n              trueans3: newOption3\n            })\n          };\n        });\n      } else {\n        this.Customalert();\n        return;\n      }\n    };\n\n    this.AnswerOptionSwitch4 = e => {\n      if (this.state.questionDetails.answer4 !== '' && this.state.questionDetails.answer4 !== null) {\n        var newOption4 = this.state.questionDetails.trueans4;\n        newOption4 = e.target.checked;\n        this.setState((ps, pp) => {\n          return {\n            questionDetails: _objectSpread({}, ps.questionDetails, {\n              trueans4: newOption4\n            })\n          };\n        });\n      } else {\n        this.Customalert();\n        return;\n      }\n    };\n\n    this.AnswerOptionSwitch5 = e => {\n      if (this.props.trainer.questioneditdetails.answer5 !== '' && this.props.trainer.questioneditdetails.answer5 !== null) {\n        var newOption5 = this.state.questionDetails.trueans5;\n        newOption5 = !e.target.checked;\n        this.setState((ps, pp) => {\n          return {\n            questionDetails: _objectSpread({}, ps.questionDetails, {\n              trueans5: newOption5\n            })\n          };\n        });\n      } else {\n        this.Customalert();\n        return;\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          console.log(this.state.materialId);\n          console.log('Полученные значения формы: ', values);\n          SecurePost({\n            url: \"\".concat(apis.CREATE_QUESTIONS),\n            data: {\n              _id: this.props.trainer.questionId,\n              body: values.questionbody,\n              quesimg: this.state.questionDetails.quesimg,\n              material: this.state.materialId,\n              answer1: values.answer1,\n              trueans1: values.trueans1,\n              answer2: values.answer2,\n              trueans2: values.trueans2,\n              answer3: values.answer3,\n              trueans3: values.trueans3,\n              answer4: values.answer4,\n              trueans4: values.trueans4,\n              answer5: values.answer5,\n              trueans5: this.state.questionDetails.trueans5\n            }\n          }).then(response => {\n            if (response.data.success) {\n              this.props.ChangeQuestionModalState(false, null, 'Регистрация');\n              Alert('success', 'Успешно', response.data.message); // this.props.ChangeSlideTableData();\n            } else {\n              console.log(response.data);\n              this.props.ChangeQuestionModalState(false, null, 'Регистрация');\n              return Alert('warning', 'Предупреждение!', response.data.message);\n            }\n          }).catch(error => {\n            this.props.ChangeQuestionModalState(false, null, 'Регистрация');\n            return Alert('error', 'Ошибка!', 'Ошибка сервера');\n          });\n        }\n      });\n    };\n\n    this.changeqImage = f => {\n      this.setState((ps, pp) => {\n        return {\n          questionDetails: _objectSpread({}, ps.questionDetails, {\n            questionimage: f.link ? \"\".concat(apis.BASE, \"/\").concat(f.link) : null\n          }),\n          submitDisabled: false\n        };\n      });\n    };\n\n    this.upl = () => {\n      this.setState({\n        submitDisabled: true\n      });\n    };\n\n    this.state = {\n      questionDetails: {\n        questionimage: this.props.trainer.questioneditdetails.quesimg,\n        answer1: this.props.trainer.questioneditdetails.answer1,\n        trueans1: this.props.trainer.questioneditdetails.trueans1,\n        answer2: this.props.trainer.questioneditdetails.answer2,\n        trueans2: this.props.trainer.questioneditdetails.trueans2,\n        answer3: this.props.trainer.questioneditdetails.answer3,\n        trueans3: this.props.trainer.questioneditdetails.trueans3,\n        answer4: this.props.trainer.questioneditdetails.answer4,\n        trueans4: this.props.trainer.questioneditdetails.trueans4,\n        answer5: this.props.trainer.questioneditdetails.answer5,\n        trueans5: this.props.trainer.questioneditdetails.trueans5\n      },\n      adding: false,\n      submitDisabled: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      materialId: this.props.qnid\n    });\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const Option = Select.Option;\n    const TextArea = Input.TextArea;\n    console.log('QAS', this.state.questionDetails);\n    var QuestionImageprops = {\n      name: 'file',\n      action: \"\".concat(apis.BASE).concat(apis.FILE_UPLOAD, \"?Token=\").concat(auth.retriveToken()),\n      listType: 'picture'\n    };\n    return React.createElement(\"div\", {\n      className: \"register-subject-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"register-trainer-form-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 18,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"\\u0412\\u043E\\u043F\\u0440\\u043E\\u0441\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, getFieldDecorator('questionbody', {\n      initialValue: this.props.trainer.questioneditdetails.body,\n      rules: [{\n        required: true,\n        message: 'Пожалуйста, введите вопрос!'\n      }]\n    })(React.createElement(TextArea, {\n      rows: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      span: 6,\n      style: {\n        padding: '0px 20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"\\u0418\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(Upload, Object.assign({}, QuestionImageprops, {\n      beforeUpload: this.upl,\n      onRemove: this.changeqImage,\n      onSuccess: this.changeqImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }), \" \\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C\"))))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(Col, {\n      offset: 1,\n      span: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"\\u0412\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442 1\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, getFieldDecorator('answer1', {\n      initialValue: this.props.trainer.questioneditdetails.answer1,\n      rules: [{\n        required: false,\n        message: 'Пожалуйста, введите вариант 1!'\n      }]\n    })(React.createElement(TextArea, {\n      rows: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      span: 2,\n      style: {\n        paddingTop: '45px',\n        paddingLeft: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: this.props.trainer.questioneditdetails.trueans1,\n      onChange: e => this.AnswerOptionSwitch1(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(Col, {\n      offset: 1,\n      span: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"\\u0412\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442 2\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, getFieldDecorator('answer2', {\n      initialValue: this.props.trainer.questioneditdetails.answer2,\n      rules: [{\n        required: false,\n        message: 'Пожалуйста, введите вариант 2!'\n      }]\n    })(React.createElement(TextArea, {\n      rows: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      span: 2,\n      style: {\n        paddingTop: '45px',\n        paddingLeft: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: this.props.trainer.questioneditdetails.trueans2,\n      onChange: e => this.AnswerOptionSwitch2(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, React.createElement(Col, {\n      offset: 1,\n      span: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"\\u0412\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442 3\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, getFieldDecorator('answer3', {\n      initialValue: this.props.trainer.questioneditdetails.answer3,\n      rules: [{\n        required: false,\n        message: 'Пожалуйста, введите вариант 3!'\n      }]\n    })(React.createElement(TextArea, {\n      rows: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      span: 2,\n      style: {\n        paddingTop: '45px',\n        paddingLeft: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: this.props.trainer.questioneditdetails.trueans3,\n      onChange: e => this.AnswerOptionSwitch3(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(Col, {\n      offset: 1,\n      span: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"\\u0412\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442 4\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, getFieldDecorator('answer4', {\n      initialValue: this.props.trainer.questioneditdetails.answer4,\n      rules: [{\n        required: false,\n        message: 'Пожалуйста, введите вариант 4!'\n      }]\n    })(React.createElement(TextArea, {\n      rows: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      span: 2,\n      style: {\n        paddingTop: '45px',\n        paddingLeft: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: this.props.trainer.questioneditdetails.trueans4,\n      onChange: e => this.AnswerOptionSwitch4(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, React.createElement(Col, {\n      offset: 1,\n      span: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"\\u0412\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442 5\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, getFieldDecorator('answer5', {\n      initialValue: this.props.trainer.questioneditdetails.answer5,\n      rules: [{\n        required: false,\n        message: 'Пожалуйста, введите вариант 5!'\n      }]\n    })(React.createElement(TextArea, {\n      rows: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      span: 2,\n      style: {\n        paddingTop: '45px',\n        paddingLeft: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: this.props.trainer.questioneditdetails.trueans5,\n      onChange: e => this.AnswerOptionSwitch5(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, React.createElement(Col, {\n      offset: 20,\n      span: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, this.props.trainer.Questionmode))))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  admin: state.admin,\n  trainer: state.trainer,\n  chapter: state.chapter\n});\n\nconst NewQuestionForm = Form.create({\n  name: 'newQuestion'\n})(NewQuestion);\nexport default connect(mapStateToProps, {\n  ChangeQuestionConfirmDirty,\n  ChangeQuestionModalState,\n  ChangeQuestionTableData\n})(NewQuestionForm);","map":{"version":3,"sources":["C:\\React_project\\EduTest\\frontend\\src\\components\\admin\\Questions\\newquestion.js"],"names":["React","Component","auth","Form","Input","Button","Select","Row","Col","Checkbox","Modal","Upload","Icon","SecurePost","apis","connect","ChangeQuestionConfirmDirty","ChangeQuestionTableData","ChangeQuestionModalState","Alert","NewOptionForm","NewQuestion","constructor","props","Customalert","confirm","title","content","okText","cancelText","QuestionImageonChange","f","newQuestion","state","questionDetails","questionimage","BASE","link","setState","submitDisabled","undefined","ps","pp","OptionTextChange","e","newOption1","trainer","questioneditdetails","answer1","target","value","trueans1","questioneditsetails","AnswerOptionSwitch1","checked","AnswerOptionSwitch2","answer2","newOption2","trueans2","AnswerOptionSwitch3","answer3","newOption3","trueans3","AnswerOptionSwitch4","answer4","newOption4","trueans4","AnswerOptionSwitch5","answer5","newOption5","trueans5","handleSubmit","preventDefault","form","validateFieldsAndScroll","err","values","console","log","materialId","url","CREATE_QUESTIONS","data","_id","questionId","body","questionbody","quesimg","material","then","response","success","message","catch","error","changeqImage","upl","adding","componentDidMount","qnid","render","getFieldDecorator","Option","TextArea","QuestionImageprops","name","action","FILE_UPLOAD","retriveToken","listType","initialValue","rules","required","padding","paddingTop","paddingLeft","Questionmode","mapStateToProps","admin","chapter","NewQuestionForm","create"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,IAAP,MAAiB,gCAAjB;AACA,SACIC,IADJ,EAEIC,KAFJ,EAGIC,MAHJ,EAIIC,MAJJ,EAKIC,GALJ,EAMIC,GANJ,EAOIC,QAPJ,EAQIC,KARJ,EASIC,MATJ,EAUIC,IAVJ,QAWO,MAXP;AAYA,SAAQC,UAAR,QAAyB,6BAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACIC,0BADJ,EAEIC,uBAFJ,EAGIC,wBAHJ,QAIO,gCAJP;AAKA,OAAOC,KAAP,MAAkB,kCAAlB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,uBAA1B;;AACA,MAAMC,WAAN,SAA0BpB,SAA1B,CAAoC;AAChCqB,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SA2BlBC,WA3BkB,GA2BJ,MAAI;AACdd,MAAAA,KAAK,CAACe,OAAN,CAAc;AACVC,QAAAA,KAAK,EAAE,cADG;AAEVC,QAAAA,OAAO,EAAE,4DAFC;AAGVC,QAAAA,MAAM,EAAE,IAHE;AAIVC,QAAAA,UAAU,EAAE;AAJF,OAAd;AAMH,KAlCiB;;AAAA,SAoClBC,qBApCkB,GAoCOC,CAAD,IAAK;AACzB,UAAIC,WAAW,GAAG,KAAKC,KAAL,CAAWC,eAAX,CAA2BC,aAA7C;;AACA,UAAG,CAACJ,CAAJ,EAAM;AACFC,QAAAA,WAAW,GAAC,IAAZ;AACH,OAFD,MAGI;AACAA,QAAAA,WAAW,aAAIlB,IAAI,CAACsB,IAAT,cAAiBL,CAAC,CAACM,IAAnB,CAAX;AAEH;;AACD,WAAKC,QAAL,CAAc;AACVC,QAAAA,cAAc,EAAC;AADL,OAAd;;AAGA,UAAGP,WAAW,KAAG,WAAd,IAA6BA,WAAW,KAAGQ,SAA3C,IAAwDR,WAAW,KAAG,IAAtE,IAA8EA,WAAW,KAAG,MAA/F,EAAuG;AACnG;AACIA,QAAAA,WAAW,GAAC,KAAKC,KAAL,CAAWC,eAAX,CAA2BC,aAAvC;AACP;;AACD,WAAKG,QAAL,CAAc,CAACG,EAAD,EAAIC,EAAJ,KAAS;AACnB,eAAO;AACHR,UAAAA,eAAe,oBACRO,EAAE,CAACP,eADK;AAEXC,YAAAA,aAAa,EAACH;AAFH;AADZ,SAAP;AAMH,OAPD;AAQH,KA5DiB;;AAAA,SA8DlBW,gBA9DkB,GA8DCC,CAAD,IAAK;AACnB,UAAIC,UAAU,GAAG,KAAKtB,KAAL,CAAWuB,OAAX,CAAmBC,mBAAnB,CAAuCC,OAAxD;AACAH,MAAAA,UAAU,qBACH,KAAKtB,KAAL,CAAWuB,OAAX,CAAmBC,mBAAnB,CAAuCC,OADpC;AAENA,QAAAA,OAAO,EAAGJ,CAAC,CAACK,MAAF,CAASC;AAFb,QAAV;;AAIA,UAAIL,UAAU,KAAG,WAAb,IAA4BA,UAAU,KAAGL,SAAzC,IAAsDK,UAAU,KAAG,MAAnE,IAA6EA,UAAU,KAAG,EAA1F,IAAgGA,UAAU,KAAG,IAAjH,EAAuH;AAC/GA,QAAAA,UAAU,qBACH,KAAKtB,KAAL,CAAWuB,OAAX,CAAmBC,mBADhB;AAENI,UAAAA,QAAQ,EAAG;AAFL,UAAV;AAIA,aAAKb,QAAL,CAAc,CAACG,EAAD,EAAIC,EAAJ,KAAS;AACnB,iBAAO;AACHU,YAAAA,mBAAmB,oBACZV,EAAE,CAACI,OAAH,CAAWC,mBADC;AAEfC,cAAAA,OAAO,EAACH;AAFO;AADhB,WAAP;AAMH,SAPD;AAQP;;AACD,WAAKP,QAAL,CAAc,CAACG,EAAD,EAAIC,EAAJ,KAAS;AACnB,eAAO;AACHK,UAAAA,mBAAmB,oBACZL,EAAE,CAACI,OAAH,CAAWC,mBADC;AAEfC,YAAAA,OAAO,EAACH;AAFO;AADhB,SAAP;AAMH,OAPD;AAQH,KA1FiB;;AAAA,SA4FlBQ,mBA5FkB,GA4FKT,CAAD,IAAK;AACvB,UAAI,KAAKX,KAAL,CAAWC,eAAX,CAA2Bc,OAA3B,KAAqC,EAArC,IAA2C,KAAKf,KAAL,CAAWC,eAAX,CAA2Bc,OAA3B,KAAqC,IAApF,EAA0F;AACtF,YAAIH,UAAU,GAAG,KAAKZ,KAAL,CAAWC,eAAX,CAA2BiB,QAA5C;AACAN,QAAAA,UAAU,GAAGD,CAAC,CAACK,MAAF,CAASK,OAAtB;AACA,aAAKhB,QAAL,CAAc,CAACG,EAAD,EAAIC,EAAJ,KAAS;AACnB,iBAAO;AACHR,YAAAA,eAAe,oBACRO,EAAE,CAACP,eADK;AAEXiB,cAAAA,QAAQ,EAACN;AAFE;AADZ,WAAP;AAMH,SAPD;AAQH,OAXD,MAYI;AACA,aAAKrB,WAAL;AACA;AACH;AACJ,KA7GiB;;AAAA,SA+GlB+B,mBA/GkB,GA+GKX,CAAD,IAAK;AACvB,UAAI,KAAKX,KAAL,CAAWC,eAAX,CAA2BsB,OAA3B,KAAqC,EAArC,IAA2C,KAAKvB,KAAL,CAAWC,eAAX,CAA2BsB,OAA3B,KAAqC,IAApF,EAA0F;AACtF,YAAIC,UAAU,GAAG,KAAKxB,KAAL,CAAWC,eAAX,CAA2BwB,QAA5C;AACAD,QAAAA,UAAU,GAAGb,CAAC,CAACK,MAAF,CAASK,OAAtB;AACA,aAAKhB,QAAL,CAAc,CAACG,EAAD,EAAIC,EAAJ,KAAS;AACnB,iBAAO;AACHR,YAAAA,eAAe,oBACRO,EAAE,CAACP,eADK;AAEXwB,cAAAA,QAAQ,EAACD;AAFE;AADZ,WAAP;AAMH,SAPD;AAQH,OAXD,MAYI;AACA,aAAKjC,WAAL;AACA;AACH;AACJ,KAhIiB;;AAAA,SAkIlBmC,mBAlIkB,GAkIKf,CAAD,IAAK;AACvB,UAAI,KAAKX,KAAL,CAAWC,eAAX,CAA2B0B,OAA3B,KAAqC,EAArC,IAA2C,KAAK3B,KAAL,CAAWC,eAAX,CAA2B0B,OAA3B,KAAqC,IAApF,EAA0F;AACtF,YAAIC,UAAU,GAAG,KAAK5B,KAAL,CAAWC,eAAX,CAA2B4B,QAA5C;AACAD,QAAAA,UAAU,GAAGjB,CAAC,CAACK,MAAF,CAASK,OAAtB;AACA,aAAKhB,QAAL,CAAc,CAACG,EAAD,EAAIC,EAAJ,KAAS;AACnB,iBAAO;AACHR,YAAAA,eAAe,oBACRO,EAAE,CAACP,eADK;AAEX4B,cAAAA,QAAQ,EAACD;AAFE;AADZ,WAAP;AAMH,SAPD;AAQH,OAXD,MAYI;AACA,aAAKrC,WAAL;AACA;AACH;AACJ,KAnJiB;;AAAA,SAqJlBuC,mBArJkB,GAqJKnB,CAAD,IAAK;AACvB,UAAI,KAAKX,KAAL,CAAWC,eAAX,CAA2B8B,OAA3B,KAAqC,EAArC,IAA2C,KAAK/B,KAAL,CAAWC,eAAX,CAA2B8B,OAA3B,KAAqC,IAApF,EAA0F;AACtF,YAAIC,UAAU,GAAG,KAAKhC,KAAL,CAAWC,eAAX,CAA2BgC,QAA5C;AACAD,QAAAA,UAAU,GAAGrB,CAAC,CAACK,MAAF,CAASK,OAAtB;AACA,aAAKhB,QAAL,CAAc,CAACG,EAAD,EAAIC,EAAJ,KAAS;AACnB,iBAAO;AACHR,YAAAA,eAAe,oBACRO,EAAE,CAACP,eADK;AAEXgC,cAAAA,QAAQ,EAACD;AAFE;AADZ,WAAP;AAMH,SAPD;AAQH,OAXD,MAYI;AACA,aAAKzC,WAAL;AACA;AACH;AACJ,KAtKiB;;AAAA,SAwKlB2C,mBAxKkB,GAwKKvB,CAAD,IAAK;AACvB,UAAI,KAAKrB,KAAL,CAAWuB,OAAX,CAAmBC,mBAAnB,CAAuCqB,OAAvC,KAAiD,EAAjD,IAAuD,KAAK7C,KAAL,CAAWuB,OAAX,CAAmBC,mBAAnB,CAAuCqB,OAAvC,KAAiD,IAA5G,EAAkH;AAC9G,YAAIC,UAAU,GAAG,KAAKpC,KAAL,CAAWC,eAAX,CAA2BoC,QAA5C;AACAD,QAAAA,UAAU,GAAG,CAACzB,CAAC,CAACK,MAAF,CAASK,OAAvB;AACA,aAAKhB,QAAL,CAAc,CAACG,EAAD,EAAIC,EAAJ,KAAS;AACnB,iBAAO;AACHR,YAAAA,eAAe,oBACRO,EAAE,CAACP,eADK;AAEXoC,cAAAA,QAAQ,EAACD;AAFE;AADZ,WAAP;AAMH,SAPD;AAQH,OAXD,MAYI;AACA,aAAK7C,WAAL;AACA;AACH;AACJ,KAzLiB;;AAAA,SA2LlB+C,YA3LkB,GA2LH3B,CAAC,IAAI;AAChBA,MAAAA,CAAC,CAAC4B,cAAF;AACA,WAAKjD,KAAL,CAAWkD,IAAX,CAAgBC,uBAAhB,CAAwC,CAACC,GAAD,EAAMC,MAAN,KAAiB;AACrD,YAAI,CAACD,GAAL,EAAU;AACNE,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAK7C,KAAL,CAAW8C,UAAvB;AACAF,UAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CF,MAA3C;AAEI/D,UAAAA,UAAU,CAAC;AACPmE,YAAAA,GAAG,YAAMlE,IAAI,CAACmE,gBAAX,CADI;AAEPC,YAAAA,IAAI,EAAG;AACHC,cAAAA,GAAG,EAAG,KAAK5D,KAAL,CAAWuB,OAAX,CAAmBsC,UADtB;AAEHC,cAAAA,IAAI,EAAGT,MAAM,CAACU,YAFX;AAGHC,cAAAA,OAAO,EAAG,KAAKtD,KAAL,CAAWC,eAAX,CAA2BqD,OAHlC;AAIHC,cAAAA,QAAQ,EAAG,KAAKvD,KAAL,CAAW8C,UAJnB;AAKH/B,cAAAA,OAAO,EAAG4B,MAAM,CAAC5B,OALd;AAMHG,cAAAA,QAAQ,EAAGyB,MAAM,CAACzB,QANf;AAOHK,cAAAA,OAAO,EAAGoB,MAAM,CAACpB,OAPd;AAQHE,cAAAA,QAAQ,EAAGkB,MAAM,CAAClB,QARf;AASHE,cAAAA,OAAO,EAAGgB,MAAM,CAAChB,OATd;AAUHE,cAAAA,QAAQ,EAAGc,MAAM,CAACd,QAVf;AAWHE,cAAAA,OAAO,EAAGY,MAAM,CAACZ,OAXd;AAYHE,cAAAA,QAAQ,EAAGU,MAAM,CAACV,QAZf;AAaHE,cAAAA,OAAO,EAAGQ,MAAM,CAACR,OAbd;AAcHE,cAAAA,QAAQ,EAAG,KAAKrC,KAAL,CAAWC,eAAX,CAA2BoC;AAdnC;AAFA,WAAD,CAAV,CAkBGmB,IAlBH,CAkBSC,QAAD,IAAY;AAChB,gBAAGA,QAAQ,CAACR,IAAT,CAAcS,OAAjB,EAAyB;AACrB,mBAAKpE,KAAL,CAAWL,wBAAX,CAAoC,KAApC,EAA0C,IAA1C,EAA+C,aAA/C;AACAC,cAAAA,KAAK,CAAC,SAAD,EAAW,SAAX,EAAqBuE,QAAQ,CAACR,IAAT,CAAcU,OAAnC,CAAL,CAFqB,CAGrB;AACH,aAJD,MAKI;AACAf,cAAAA,OAAO,CAACC,GAAR,CAAYY,QAAQ,CAACR,IAArB;AACA,mBAAK3D,KAAL,CAAWL,wBAAX,CAAoC,KAApC,EAA0C,IAA1C,EAA+C,aAA/C;AACA,qBAAOC,KAAK,CAAC,SAAD,EAAW,iBAAX,EAA6BuE,QAAQ,CAACR,IAAT,CAAcU,OAA3C,CAAZ;AACH;AACJ,WA7BD,EA6BGC,KA7BH,CA6BUC,KAAD,IAAS;AACd,iBAAKvE,KAAL,CAAWL,wBAAX,CAAoC,KAApC,EAA0C,IAA1C,EAA+C,aAA/C;AACA,mBAAOC,KAAK,CAAC,OAAD,EAAS,SAAT,EAAmB,gBAAnB,CAAZ;AACH,WAhCD;AAkCP;AACJ,OAxCD;AAyCH,KAtOiB;;AAAA,SAwOlB4E,YAxOkB,GAwOFhE,CAAD,IAAK;AAChB,WAAKO,QAAL,CAAc,CAACG,EAAD,EAAIC,EAAJ,KAAS;AACnB,eAAO;AACHR,UAAAA,eAAe,oBACRO,EAAE,CAACP,eADK;AAEXC,YAAAA,aAAa,EAAEJ,CAAC,CAACM,IAAF,aAAWvB,IAAI,CAACsB,IAAhB,cAAwBL,CAAC,CAACM,IAA1B,IAAiC;AAFrC,YADZ;AAKHE,UAAAA,cAAc,EAAC;AALZ,SAAP;AAOH,OARD;AASH,KAlPiB;;AAAA,SAoPlByD,GApPkB,GAoPd,MAAI;AACJ,WAAK1D,QAAL,CAAc;AACVC,QAAAA,cAAc,EAAE;AADN,OAAd;AAGH,KAxPiB;;AAEd,SAAKN,KAAL,GAAW;AACPC,MAAAA,eAAe,EAAC;AACZC,QAAAA,aAAa,EAAC,KAAKZ,KAAL,CAAWuB,OAAX,CAAmBC,mBAAnB,CAAuCwC,OADzC;AAEZvC,QAAAA,OAAO,EAAE,KAAKzB,KAAL,CAAWuB,OAAX,CAAmBC,mBAAnB,CAAuCC,OAFpC;AAGZG,QAAAA,QAAQ,EAAE,KAAK5B,KAAL,CAAWuB,OAAX,CAAmBC,mBAAnB,CAAuCI,QAHrC;AAIZK,QAAAA,OAAO,EAAE,KAAKjC,KAAL,CAAWuB,OAAX,CAAmBC,mBAAnB,CAAuCS,OAJpC;AAKZE,QAAAA,QAAQ,EAAE,KAAKnC,KAAL,CAAWuB,OAAX,CAAmBC,mBAAnB,CAAuCW,QALrC;AAMZE,QAAAA,OAAO,EAAE,KAAKrC,KAAL,CAAWuB,OAAX,CAAmBC,mBAAnB,CAAuCa,OANpC;AAOZE,QAAAA,QAAQ,EAAE,KAAKvC,KAAL,CAAWuB,OAAX,CAAmBC,mBAAnB,CAAuCe,QAPrC;AAQZE,QAAAA,OAAO,EAAE,KAAKzC,KAAL,CAAWuB,OAAX,CAAmBC,mBAAnB,CAAuCiB,OARpC;AASZE,QAAAA,QAAQ,EAAE,KAAK3C,KAAL,CAAWuB,OAAX,CAAmBC,mBAAnB,CAAuCmB,QATrC;AAUZE,QAAAA,OAAO,EAAE,KAAK7C,KAAL,CAAWuB,OAAX,CAAmBC,mBAAnB,CAAuCqB,OAVpC;AAWZE,QAAAA,QAAQ,EAAE,KAAK/C,KAAL,CAAWuB,OAAX,CAAmBC,mBAAnB,CAAuCuB;AAXrC,OADT;AAcP2B,MAAAA,MAAM,EAAC,KAdA;AAeP1D,MAAAA,cAAc,EAAC;AAfR,KAAX;AAiBH;;AAED2D,EAAAA,iBAAiB,GAAE;AACf,SAAK5D,QAAL,CAAc;AACVyC,MAAAA,UAAU,EAAC,KAAKxD,KAAL,CAAW4E;AADZ,KAAd;AAGH;;AAiODC,EAAAA,MAAM,GAAG;AAAA,UACGC,iBADH,GACyB,KAAK9E,KAAL,CAAWkD,IADpC,CACG4B,iBADH;AAAA,UAEGC,MAFH,GAEchG,MAFd,CAEGgG,MAFH;AAAA,UAGGC,QAHH,GAGgBnG,KAHhB,CAGGmG,QAHH;AAIL1B,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkB,KAAK7C,KAAL,CAAWC,eAA7B;AACA,QAAIsE,kBAAkB,GAAC;AACnBC,MAAAA,IAAI,EAAE,MADa;AAEnBC,MAAAA,MAAM,YAAK5F,IAAI,CAACsB,IAAV,SAAiBtB,IAAI,CAAC6F,WAAtB,oBAA2CzG,IAAI,CAAC0G,YAAL,EAA3C,CAFa;AAGnBC,MAAAA,QAAQ,EAAE;AAHS,KAAvB;AAMA,WACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAO,MAAA,QAAQ,EAAE,KAAKtC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,sCAAjB;AAA0B,MAAA,WAAW,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK8B,iBAAiB,CAAC,cAAD,EAAiB;AAC/BS,MAAAA,YAAY,EAAG,KAAKvF,KAAL,CAAWuB,OAAX,CAAmBC,mBAAnB,CAAuCsC,IADvB;AAE/B0B,MAAAA,KAAK,EAAE,CAAC;AAAEC,QAAAA,QAAQ,EAAE,IAAZ;AAAkBpB,QAAAA,OAAO,EAAE;AAA3B,OAAD;AAFwB,KAAjB,CAAjB,CAIG,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJH,CADL,CADJ,CADJ,EAWI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAc,MAAA,KAAK,EAAE;AAACqB,QAAAA,OAAO,EAAG;AAAX,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,+GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD,oBAAYT,kBAAZ;AAAgC,MAAA,YAAY,EAAE,KAAKR,GAAnD;AAAwD,MAAA,QAAQ,EAAE,KAAKD,YAAvE;AAAqF,MAAA,SAAS,EAAE,KAAKA,YAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,4DADJ,CADJ,CADJ,CAXJ,CAFJ,EAuBI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,MAAM,EAAE,CAAb;AAAgB,MAAA,IAAI,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,8CAAjB;AAA6B,MAAA,WAAW,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKM,iBAAiB,CAAC,SAAD,EAAY;AAC1BS,MAAAA,YAAY,EAAG,KAAKvF,KAAL,CAAWuB,OAAX,CAAmBC,mBAAnB,CAAuCC,OAD5B;AAE1B+D,MAAAA,KAAK,EAAE,CAAC;AAAEC,QAAAA,QAAQ,EAAE,KAAZ;AAAmBpB,QAAAA,OAAO,EAAE;AAA5B,OAAD;AAFmB,KAAZ,CAAjB,CAIG,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJH,CADL,CADJ,CADJ,EAWI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAc,MAAA,KAAK,EAAE;AAACsB,QAAAA,UAAU,EAAE,MAAb;AAAqBC,QAAAA,WAAW,EAAE;AAAlC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAK5F,KAAL,CAAWuB,OAAX,CAAmBC,mBAAnB,CAAuCI,QAA1D;AAAoE,MAAA,QAAQ,EAAGP,CAAD,IAAK,KAAKS,mBAAL,CAAyBT,CAAzB,CAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CAXJ,CAvBJ,EAwCI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,MAAM,EAAE,CAAb;AAAgB,MAAA,IAAI,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,8CAAjB;AAA6B,MAAA,WAAW,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKyD,iBAAiB,CAAC,SAAD,EAAY;AAC1BS,MAAAA,YAAY,EAAG,KAAKvF,KAAL,CAAWuB,OAAX,CAAmBC,mBAAnB,CAAuCS,OAD5B;AAE1BuD,MAAAA,KAAK,EAAE,CAAC;AAAEC,QAAAA,QAAQ,EAAE,KAAZ;AAAmBpB,QAAAA,OAAO,EAAE;AAA5B,OAAD;AAFmB,KAAZ,CAAjB,CAIG,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJH,CADL,CADJ,CADJ,EAWI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAc,MAAA,KAAK,EAAE;AAACsB,QAAAA,UAAU,EAAE,MAAb;AAAqBC,QAAAA,WAAW,EAAE;AAAlC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAK5F,KAAL,CAAWuB,OAAX,CAAmBC,mBAAnB,CAAuCW,QAA1D;AAAoE,MAAA,QAAQ,EAAGd,CAAD,IAAK,KAAKW,mBAAL,CAAyBX,CAAzB,CAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ,CAXJ,CAxCJ,EAyDI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,MAAM,EAAE,CAAb;AAAgB,MAAA,IAAI,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,8CAAjB;AAA6B,MAAA,WAAW,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKyD,iBAAiB,CAAC,SAAD,EAAY;AAC1BS,MAAAA,YAAY,EAAG,KAAKvF,KAAL,CAAWuB,OAAX,CAAmBC,mBAAnB,CAAuCa,OAD5B;AAE1BmD,MAAAA,KAAK,EAAE,CAAC;AAAEC,QAAAA,QAAQ,EAAE,KAAZ;AAAmBpB,QAAAA,OAAO,EAAE;AAA5B,OAAD;AAFmB,KAAZ,CAAjB,CAIG,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJH,CADL,CADJ,CADJ,EAWI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAc,MAAA,KAAK,EAAE;AAACsB,QAAAA,UAAU,EAAE,MAAb;AAAqBC,QAAAA,WAAW,EAAE;AAAlC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAK5F,KAAL,CAAWuB,OAAX,CAAmBC,mBAAnB,CAAuCe,QAA1D;AAAoE,MAAA,QAAQ,EAAGlB,CAAD,IAAK,KAAKe,mBAAL,CAAyBf,CAAzB,CAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ,CAXJ,CAzDJ,EA0EI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,MAAM,EAAE,CAAb;AAAgB,MAAA,IAAI,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,8CAAjB;AAA6B,MAAA,WAAW,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKyD,iBAAiB,CAAC,SAAD,EAAY;AAC1BS,MAAAA,YAAY,EAAG,KAAKvF,KAAL,CAAWuB,OAAX,CAAmBC,mBAAnB,CAAuCiB,OAD5B;AAE1B+C,MAAAA,KAAK,EAAE,CAAC;AAAEC,QAAAA,QAAQ,EAAE,KAAZ;AAAmBpB,QAAAA,OAAO,EAAE;AAA5B,OAAD;AAFmB,KAAZ,CAAjB,CAIG,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJH,CADL,CADJ,CADJ,EAWI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAc,MAAA,KAAK,EAAE;AAACsB,QAAAA,UAAU,EAAE,MAAb;AAAqBC,QAAAA,WAAW,EAAE;AAAlC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAK5F,KAAL,CAAWuB,OAAX,CAAmBC,mBAAnB,CAAuCmB,QAA1D;AAAoE,MAAA,QAAQ,EAAGtB,CAAD,IAAK,KAAKmB,mBAAL,CAAyBnB,CAAzB,CAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ,CAXJ,CA1EJ,EA2FI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,MAAM,EAAE,CAAb;AAAgB,MAAA,IAAI,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,8CAAjB;AAA6B,MAAA,WAAW,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKyD,iBAAiB,CAAC,SAAD,EAAY;AAC1BS,MAAAA,YAAY,EAAG,KAAKvF,KAAL,CAAWuB,OAAX,CAAmBC,mBAAnB,CAAuCqB,OAD5B;AAE1B2C,MAAAA,KAAK,EAAE,CAAC;AAAEC,QAAAA,QAAQ,EAAE,KAAZ;AAAmBpB,QAAAA,OAAO,EAAE;AAA5B,OAAD;AAFmB,KAAZ,CAAjB,CAIG,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJH,CADL,CADJ,CADJ,EAWI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAc,MAAA,KAAK,EAAE;AAACsB,QAAAA,UAAU,EAAE,MAAb;AAAqBC,QAAAA,WAAW,EAAE;AAAlC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAK5F,KAAL,CAAWuB,OAAX,CAAmBC,mBAAnB,CAAuCuB,QAA1D;AAAoE,MAAA,QAAQ,EAAG1B,CAAD,IAAK,KAAKuB,mBAAL,CAAyBvB,CAAzB,CAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ,CAXJ,CA3FJ,EA4GI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,MAAM,EAAE,EAAb;AAAkB,MAAA,IAAI,EAAE,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AAAyC,MAAA,KAAK,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKrB,KAAL,CAAWuB,OAAX,CAAmBsE,YADxB,CADJ,CADJ,CADJ,CA5GJ,CADJ,CADJ,CADJ,CADJ;AA+HH;;AArY+B;;AAwYpC,MAAMC,eAAe,GAAGpF,KAAK,KAAK;AAC9BqF,EAAAA,KAAK,EAAGrF,KAAK,CAACqF,KADgB;AAE9BxE,EAAAA,OAAO,EAAGb,KAAK,CAACa,OAFc;AAG9ByE,EAAAA,OAAO,EAAGtF,KAAK,CAACsF;AAHc,CAAL,CAA7B;;AAQA,MAAMC,eAAe,GAAGrH,IAAI,CAACsH,MAAL,CAAY;AAAEhB,EAAAA,IAAI,EAAE;AAAR,CAAZ,EAAqCpF,WAArC,CAAxB;AAEA,eAAeN,OAAO,CAACsG,eAAD,EAAiB;AACnCrG,EAAAA,0BADmC;AAEnCE,EAAAA,wBAFmC;AAGnCD,EAAAA;AAHmC,CAAjB,CAAP,CAIZuG,eAJY,CAAf","sourcesContent":["import React, { Component } from 'react'\r\n//import './newquestion.css';\r\nimport auth from '../../../services/AuthServices';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Select,\r\n    Row,\r\n    Col,\r\n    Checkbox,\r\n    Modal,\r\n    Upload,\r\n    Icon\r\n} from 'antd';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    ChangeQuestionConfirmDirty,\r\n    ChangeQuestionTableData,\r\n    ChangeQuestionModalState\r\n} from '../../../actions/trainerAction';\r\nimport Alert from '../../../components/common/alert';\r\n//const { Option } = Select;\r\nimport NewOptionForm from '../options/newoptions';\r\nclass NewQuestion extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            questionDetails:{\r\n                questionimage:this.props.trainer.questioneditdetails.quesimg,\r\n                answer1: this.props.trainer.questioneditdetails.answer1,\r\n                trueans1: this.props.trainer.questioneditdetails.trueans1,\r\n                answer2: this.props.trainer.questioneditdetails.answer2,\r\n                trueans2: this.props.trainer.questioneditdetails.trueans2,\r\n                answer3: this.props.trainer.questioneditdetails.answer3,\r\n                trueans3: this.props.trainer.questioneditdetails.trueans3,\r\n                answer4: this.props.trainer.questioneditdetails.answer4,\r\n                trueans4: this.props.trainer.questioneditdetails.trueans4,\r\n                answer5: this.props.trainer.questioneditdetails.answer5,\r\n                trueans5: this.props.trainer.questioneditdetails.trueans5,\r\n            },\r\n            adding:false,\r\n            submitDisabled:false,\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            materialId:this.props.qnid\r\n        });\r\n    }\r\n\r\n    Customalert = ()=>{\r\n        Modal.confirm({\r\n            title: 'Подтверждать',\r\n            content: 'пустой параметр не может быть установлен в качестве ответа',\r\n            okText: 'Ok',\r\n            cancelText: null,\r\n        });\r\n    }\r\n\r\n    QuestionImageonChange = (f)=>{\r\n        var newQuestion = this.state.questionDetails.questionimage\r\n        if(!f){\r\n            newQuestion=null\r\n        }\r\n        else{\r\n            newQuestion=`${apis.BASE}/${f.link}`\r\n            \r\n        }\r\n        this.setState({\r\n            submitDisabled:false\r\n        })\r\n        if(newQuestion==='undefined' || newQuestion===undefined || newQuestion===null || newQuestion==='null') {\r\n            //(newOptions[i].body==='undefined' || newOptions[i].body===undefined || newOptions[i].body==='null' || newOptions[i].body==='' || newOptions[i].body===null)){\r\n                newQuestion=this.state.questionDetails.questionimage;    \r\n        }\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                questionDetails:{\r\n                    ...ps.questionDetails,\r\n                    questionimage:newQuestion\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    OptionTextChange =(e)=>{\r\n        var newOption1 = this.props.trainer.questioneditdetails.answer1\r\n        newOption1={\r\n            ...this.props.trainer.questioneditdetails.answer1,\r\n            answer1 : e.target.value\r\n        }\r\n        if((newOption1==='undefined' || newOption1===undefined || newOption1==='null' || newOption1==='' || newOption1===null)){\r\n                newOption1={\r\n                    ...this.props.trainer.questioneditdetails,\r\n                    trueans1 : false\r\n                }\r\n                this.setState((ps,pp)=>{\r\n                    return({\r\n                        questioneditsetails:{\r\n                            ...pp.trainer.questioneditdetails,\r\n                            answer1:newOption1\r\n                        }\r\n                    })\r\n                })\r\n        }\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                questioneditdetails:{\r\n                    ...pp.trainer.questioneditdetails,\r\n                    answer1:newOption1\r\n                }\r\n            })\r\n        })     \r\n    }\r\n\r\n    AnswerOptionSwitch1 = (e)=>{\r\n        if((this.state.questionDetails.answer1!=='' && this.state.questionDetails.answer1!==null)){\r\n            var newOption1 = this.state.questionDetails.trueans1\r\n            newOption1 = e.target.checked\r\n            this.setState((ps,pp)=>{\r\n                return({\r\n                    questionDetails:{\r\n                        ...ps.questionDetails,\r\n                        trueans1:newOption1\r\n                    }\r\n                })\r\n            })\r\n        }\r\n        else{   \r\n            this.Customalert()\r\n            return;\r\n        }\r\n    }\r\n\r\n    AnswerOptionSwitch2 = (e)=>{\r\n        if((this.state.questionDetails.answer2!=='' && this.state.questionDetails.answer2!==null)){\r\n            var newOption2 = this.state.questionDetails.trueans2\r\n            newOption2 = e.target.checked\r\n            this.setState((ps,pp)=>{\r\n                return({\r\n                    questionDetails:{\r\n                        ...ps.questionDetails,\r\n                        trueans2:newOption2\r\n                    }\r\n                })\r\n            })\r\n        }\r\n        else{   \r\n            this.Customalert()\r\n            return;\r\n        }\r\n    }\r\n\r\n    AnswerOptionSwitch3 = (e)=>{\r\n        if((this.state.questionDetails.answer3!=='' && this.state.questionDetails.answer3!==null)){\r\n            var newOption3 = this.state.questionDetails.trueans3\r\n            newOption3 = e.target.checked\r\n            this.setState((ps,pp)=>{\r\n                return({\r\n                    questionDetails:{\r\n                        ...ps.questionDetails,\r\n                        trueans3:newOption3\r\n                    }\r\n                })\r\n            })\r\n        }\r\n        else{   \r\n            this.Customalert()\r\n            return;\r\n        }\r\n    }\r\n\r\n    AnswerOptionSwitch4 = (e)=>{\r\n        if((this.state.questionDetails.answer4!=='' && this.state.questionDetails.answer4!==null)){\r\n            var newOption4 = this.state.questionDetails.trueans4\r\n            newOption4 = e.target.checked\r\n            this.setState((ps,pp)=>{\r\n                return({\r\n                    questionDetails:{\r\n                        ...ps.questionDetails,\r\n                        trueans4:newOption4\r\n                    }\r\n                })\r\n            })\r\n        }\r\n        else{   \r\n            this.Customalert()\r\n            return;\r\n        }\r\n    }\r\n\r\n    AnswerOptionSwitch5 = (e)=>{\r\n        if((this.props.trainer.questioneditdetails.answer5!=='' && this.props.trainer.questioneditdetails.answer5!==null)){\r\n            var newOption5 = this.state.questionDetails.trueans5\r\n            newOption5 = !e.target.checked\r\n            this.setState((ps,pp)=>{\r\n                return({\r\n                    questionDetails:{\r\n                        ...ps.questionDetails,\r\n                        trueans5:newOption5\r\n                    }\r\n                })\r\n            })\r\n        }\r\n        else{   \r\n            this.Customalert()\r\n            return;\r\n        }\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                console.log(this.state.materialId);\r\n                console.log('Полученные значения формы: ', values);\r\n                \r\n                    SecurePost({\r\n                        url : `${apis.CREATE_QUESTIONS}`,\r\n                        data : {\r\n                            _id : this.props.trainer.questionId,\r\n                            body : values.questionbody,                            \r\n                            quesimg : this.state.questionDetails.quesimg,\r\n                            material : this.state.materialId,\r\n                            answer1 : values.answer1,\r\n                            trueans1 : values.trueans1,\r\n                            answer2 : values.answer2,\r\n                            trueans2 : values.trueans2,\r\n                            answer3 : values.answer3,\r\n                            trueans3 : values.trueans3,\r\n                            answer4 : values.answer4,\r\n                            trueans4 : values.trueans4,\r\n                            answer5 : values.answer5,\r\n                            trueans5 : this.state.questionDetails.trueans5,\r\n                        }\r\n                    }).then((response)=>{\r\n                        if(response.data.success){\r\n                            this.props.ChangeQuestionModalState(false,null,'Регистрация');\r\n                            Alert('success','Успешно',response.data.message);\r\n                            // this.props.ChangeSlideTableData();\r\n                        }\r\n                        else{\r\n                            console.log(response.data);\r\n                            this.props.ChangeQuestionModalState(false,null,'Регистрация');\r\n                            return Alert('warning','Предупреждение!',response.data.message);\r\n                        }\r\n                    }).catch((error)=>{\r\n                        this.props.ChangeQuestionModalState(false,null,'Регистрация');\r\n                        return Alert('error','Ошибка!','Ошибка сервера');\r\n                    })\r\n                \r\n            }\r\n        });\r\n    };\r\n\r\n    changeqImage = (f)=>{\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                questionDetails:{\r\n                    ...ps.questionDetails,\r\n                    questionimage:(f.link ?`${apis.BASE}/${f.link}`:null)\r\n                },\r\n                submitDisabled:false\r\n            })\r\n        })\r\n    }\r\n\r\n    upl=()=>{\r\n        this.setState({\r\n            submitDisabled: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const { Option } = Select;\r\n        const { TextArea } = Input;\r\n        console.log('QAS',this.state.questionDetails);\r\n        var QuestionImageprops={\r\n            name: 'file',\r\n            action: `${apis.BASE}${apis.FILE_UPLOAD}?Token=${auth.retriveToken()}`,\r\n            listType: 'picture',\r\n        }\r\n        \r\n        return (\r\n            <div className=\"register-subject-form\" >\r\n                <div className=\"register-trainer-form-body\">\r\n                    <Form  onSubmit={this.handleSubmit}>\r\n                        <div>\r\n                            \r\n                            <Row>\r\n                                <Col span={18}>\r\n                                    <Form.Item label=\"Вопрос\" hasFeedback>\r\n                                        {getFieldDecorator('questionbody', {\r\n                                            initialValue : this.props.trainer.questioneditdetails.body,\r\n                                            rules: [{ required: true, message: 'Пожалуйста, введите вопрос!' }],\r\n                                        })(\r\n                                            <TextArea rows={5} />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={6} style={{padding : '0px 20px'}}>\r\n                                    <Form.Item label=\"Изображение вопроса\">\r\n                                        <Upload {...QuestionImageprops} beforeUpload={this.upl} onRemove={this.changeqImage} onSuccess={this.changeqImage}>\r\n                                            <Button>\r\n                                                <Icon type=\"upload\" /> Загрузить\r\n                                            </Button>\r\n                                        </Upload>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col offset={1} span={16}>\r\n                                    <Form.Item label=\"Вариант 1\" hasFeedback>\r\n                                        {getFieldDecorator('answer1', {\r\n                                            initialValue : this.props.trainer.questioneditdetails.answer1,\r\n                                            rules: [{ required: false, message: 'Пожалуйста, введите вариант 1!' }],\r\n                                        })(\r\n                                            <TextArea rows={2} />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={2} style={{paddingTop: '45px', paddingLeft: '20px'}}>\r\n                                    <Form.Item>\r\n                                        <Checkbox checked={this.props.trainer.questioneditdetails.trueans1} onChange={(e)=>this.AnswerOptionSwitch1(e)}></Checkbox>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col offset={1} span={16}>\r\n                                    <Form.Item label=\"Вариант 2\" hasFeedback>\r\n                                        {getFieldDecorator('answer2', {\r\n                                            initialValue : this.props.trainer.questioneditdetails.answer2,\r\n                                            rules: [{ required: false, message: 'Пожалуйста, введите вариант 2!' }],\r\n                                        })(\r\n                                            <TextArea rows={2} />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={2} style={{paddingTop: '45px', paddingLeft: '20px'}}>\r\n                                    <Form.Item>\r\n                                    <Checkbox checked={this.props.trainer.questioneditdetails.trueans2} onChange={(e)=>this.AnswerOptionSwitch2(e)}></Checkbox>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col offset={1} span={16}>\r\n                                    <Form.Item label=\"Вариант 3\" hasFeedback>\r\n                                        {getFieldDecorator('answer3', {\r\n                                            initialValue : this.props.trainer.questioneditdetails.answer3,\r\n                                            rules: [{ required: false, message: 'Пожалуйста, введите вариант 3!' }],\r\n                                        })(\r\n                                            <TextArea rows={2} />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={2} style={{paddingTop: '45px', paddingLeft: '20px'}}>\r\n                                    <Form.Item>\r\n                                    <Checkbox checked={this.props.trainer.questioneditdetails.trueans3} onChange={(e)=>this.AnswerOptionSwitch3(e)}></Checkbox>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col offset={1} span={16}>\r\n                                    <Form.Item label=\"Вариант 4\" hasFeedback>\r\n                                        {getFieldDecorator('answer4', {\r\n                                            initialValue : this.props.trainer.questioneditdetails.answer4,\r\n                                            rules: [{ required: false, message: 'Пожалуйста, введите вариант 4!' }],\r\n                                        })(\r\n                                            <TextArea rows={2} />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={2} style={{paddingTop: '45px', paddingLeft: '20px'}}>\r\n                                    <Form.Item>\r\n                                    <Checkbox checked={this.props.trainer.questioneditdetails.trueans4} onChange={(e)=>this.AnswerOptionSwitch4(e)}></Checkbox>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col offset={1} span={16}>\r\n                                    <Form.Item label=\"Вариант 5\" hasFeedback>\r\n                                        {getFieldDecorator('answer5', {\r\n                                            initialValue : this.props.trainer.questioneditdetails.answer5,\r\n                                            rules: [{ required: false, message: 'Пожалуйста, введите вариант 5!' }],\r\n                                        })(\r\n                                            <TextArea rows={2} />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={2} style={{paddingTop: '45px', paddingLeft: '20px'}}>\r\n                                    <Form.Item>\r\n                                    <Checkbox checked={this.props.trainer.questioneditdetails.trueans5} onChange={(e)=>this.AnswerOptionSwitch5(e)}></Checkbox>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col offset={20}  span={4}>\r\n                                    <Form.Item>\r\n                                        <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                            {this.props.trainer.Questionmode}\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin : state.admin,\r\n    trainer : state.trainer,\r\n    chapter : state.chapter\r\n});\r\n\r\n\r\n\r\nconst NewQuestionForm = Form.create({ name: 'newQuestion' })(NewQuestion);\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeQuestionConfirmDirty,\r\n    ChangeQuestionModalState,\r\n    ChangeQuestionTableData\r\n})(NewQuestionForm);\r\n\r\n"]},"metadata":{},"sourceType":"module"}