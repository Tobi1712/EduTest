{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport { css as _css } from \"styled-components\";\nimport { createGlobalStyle as _createGlobalStyle } from \"styled-components\";\nvar _jsxFileName = \"C:\\\\React_project\\\\EduTest\\\\frontend\\\\src\\\\components\\\\customer\\\\Testing\\\\test.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n          left: 0.5rem;\\n        \"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n          right: 0.5rem;\\n        \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component, useState } from 'react';\nimport Slider from 'react-touch-drag-slider';\nimport { connect } from 'react-redux';\nimport { Table, Input, Typography, Divider, Icon, Modal, Popconfirm } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { ChangeQuestionSearchText, ChangeQuestionTableData, ChangeQuestionModalState } from '../../../actions/trainerAction';\nimport Alert from '../../../components/common/alert';\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport Test2 from './test2';\nimport Test3 from './test3';\nimport styled from \"styled-components\";\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport classnames from 'classnames';\nconst Container = styled.div.withConfig({\n  displayName: \"test__Container\",\n  componentId: \"sc-13myauf-0\"\n})([\"display:flex;justify-content:center;align-items:center;min-height:80vh;width:100%;\"]);\nconst ScreenQuiz = styled.div.withConfig({\n  displayName: \"test__ScreenQuiz\",\n  componentId: \"sc-13myauf-1\"\n})([\"display:flex;justify-content:\", \";align-items:center;flex-direction:column;max-width:1200px;padding:\", \";width:100%;height:80vh;background:#fff;border-radius:5px;box-shadow:0px 5px 40px -20px #000;\"], props => props.screen ? \"space-between\" : \"center\", props => props.screen ? \"5rem\" : \".5rem\");\nconst Title = styled.h1.withConfig({\n  displayName: \"test__Title\",\n  componentId: \"sc-13myauf-2\"\n})([\"font-size:2.5rem;margin-bottom:0.5rem;text-align:center;max-width:90%;\"]);\nconst Paragraph = styled.p.withConfig({\n  displayName: \"test__Paragraph\",\n  componentId: \"sc-13myauf-3\"\n})([\"font-size:1.5rem;\"]);\nconst Button = styled.button.withConfig({\n  displayName: \"test__Button\",\n  componentId: \"sc-13myauf-4\"\n})([\"font-size:1.2rem;font-weight:bold;width:40%;height:3rem;border:none;border-radius:5px;box-shadow:0px 3px 15px 0px #666;\"]);\nconst ButtonScr = styled.button.withConfig({\n  displayName: \"test__ButtonScr\",\n  componentId: \"sc-13myauf-5\"\n})([\"font-size:2rem;z-index:10;position:fixed;top:50%;\", \"\"], props => props.right ? _css(_templateObject()) : _css(_templateObject2()));\nconst ContainerLabel = styled.div.withConfig({\n  displayName: \"test__ContainerLabel\",\n  componentId: \"sc-13myauf-6\"\n})([\"display:flex;align-items:flex-start;flex-direction:column;margin:0 auto 0.5rem auto;\"]);\nconst Label = styled.label.withConfig({\n  displayName: \"test__Label\",\n  componentId: \"sc-13myauf-7\"\n})([\"display:flex;justify-content:center;align-items:center;\"]);\nconst Radio = styled.input.attrs({\n  type: 'checkbox'\n}).withConfig({\n  displayName: \"test__Radio\",\n  componentId: \"sc-13myauf-8\"\n})([\"display:flex;justify-content:center;align-items:center;width:15px;height:15px;border:0.5px solid black;margin:0 0.5rem 0 0;background:\", \";\"], props => props.clickedLabel ? \"#7159c1\" : \"#fff\"); // const IntoRadio = styled.div`\n//   width: 5px;\n//   height: 5px;\n//   border-radius: 3px;\n//   background: #fff;\n// `;\n\nconst Error = styled.div.withConfig({\n  displayName: \"test__Error\",\n  componentId: \"sc-13myauf-9\"\n})([\"top:22rem;color:red;position:absolute;font-weight:bold;\"]);\nconst responsive = {\n  desktop: {\n    breakpoint: {\n      max: 3000,\n      min: 1024\n    },\n    items: 1,\n    slidesToSlide: 1 // optional, default to 1.\n\n  },\n  tablet: {\n    breakpoint: {\n      max: 1024,\n      min: 464\n    },\n    items: 1,\n    slidesToSlide: 1 // optional, default to 1.\n\n  },\n  mobile: {\n    breakpoint: {\n      max: 464,\n      min: 0\n    },\n    items: 1,\n    slidesToSlide: 1 // optional, default to 1.\n\n  }\n};\n\nclass Test extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNextClick = () => {\n      const _this$state = this.state,\n            count = _this$state.count,\n            questions = _this$state.questions,\n            clickedLabel = _this$state.clickedLabel,\n            answer = _this$state.answer;\n\n      if (questions.length >= count) {\n        this.setState({\n          count: count + 1\n        });\n      }\n    };\n\n    this.handlePrevClick = () => {\n      const _this$state2 = this.state,\n            count = _this$state2.count,\n            questions = _this$state2.questions,\n            clickedLabel = _this$state2.clickedLabel,\n            answer = _this$state2.answer;\n\n      if (questions.length >= count && count > 0) {\n        this.setState({\n          count: count - 1\n        });\n      }\n    };\n\n    this.handleClick = () => {\n      const _this$state3 = this.state,\n            count = _this$state3.count,\n            questions = _this$state3.questions,\n            clickedLabel = _this$state3.clickedLabel,\n            answer = _this$state3.answer;\n\n      if (questions.length >= count && clickedLabel.answerText) {\n        this.setState({\n          count: count + 1,\n          clickedLabel: {},\n          answer: clickedLabel.correctAnswer ? answer + 1 : answer,\n          error: false\n        });\n      } else {\n        this.setState({\n          count: count,\n          error: true\n        });\n      }\n\n      if (questions.length === count) {\n        this.setState({\n          screenFinish: true\n        });\n      }\n\n      this.handleCountDown();\n    };\n\n    this.handleCountDown = () => {\n      const _this$state4 = this.state,\n            second = _this$state4.second,\n            count = _this$state4.count;\n      clearInterval(this.timer);\n      let counter = 1;\n      this.timer = setInterval(() => {\n        if (counter >= 10) {\n          clearInterval(this.timer);\n\n          if (second >= 10) {\n            this.setState({\n              count: count + 1\n            });\n          }\n        }\n\n        this.setState({\n          second: counter\n        });\n        console.log(counter++);\n      }, 1000);\n    };\n\n    this.renderInitial = () => {\n      const _this$state5 = this.state,\n            second = _this$state5.second,\n            count = _this$state5.count;\n      this.setState({\n        screen: false,\n        count: 1\n      });\n      this.handleCountDown();\n    };\n\n    this.renderScreenInitial = () => {\n      return /*#__PURE__*/React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(ScreenQuiz, {\n        screen: this.state.screen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"\\u0422\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: this.renderInitial,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\")));\n    };\n\n    this.handleOptions = answerOptions => {\n      const _this$state6 = this.state,\n            clickedLabel = _this$state6.clickedLabel,\n            count = _this$state6.count;\n      console.log('click:', clickedLabel);\n      return answerOptions.map((a, i) => {\n        return /*#__PURE__*/React.createElement(Label, {\n          key: i,\n          onClick: () => this.setState({\n            clickedLabel: a,\n            error: false\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273\n          },\n          __self: this\n        }, /*#__PURE__*/React.createElement(Radio, {\n          clickedLabel: clickedLabel.answerText === a.answerText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282\n          },\n          __self: this\n        }), /*#__PURE__*/React.createElement(Paragraph, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283\n          },\n          __self: this\n        }, a.answerText));\n      });\n    };\n\n    this.startTimer = () => {\n      const countDownTime = Date.now() + 180000;\n      this.interval = setInterval(() => {\n        const now = new Date();\n        const distance = countDownTime - now;\n        const minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n        const seconds = Math.floor(distance % (1000 * 60) / 1000);\n\n        if (distance < 0) {\n          clearInterval(this.interval);\n          this.setState({\n            time: {\n              minutes: 0,\n              seconds: 0\n            }\n          }, () => {\n            this.endGame();\n          });\n        } else {\n          this.setState({\n            time: {\n              minutes,\n              seconds,\n              distance\n            }\n          });\n        }\n      }, 1000);\n    };\n\n    this.renderQuestions = () => {\n      const _this$state7 = this.state,\n            count = _this$state7.count,\n            questions = _this$state7.questions,\n            error = _this$state7.error,\n            second = _this$state7.second,\n            time = _this$state7.time,\n            ind = _this$state7.ind;\n      const NewQuestions = Array.from(questions);\n      const removeQuestions = NewQuestions.slice(count - 1, count);\n      return removeQuestions.map((q, i) => /*#__PURE__*/React.createElement(Container, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(ScreenQuiz, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"timer-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: classnames('right valid', {\n          'warning': time.distance <= 120000,\n          'invalid': time.distance < 30000\n        }),\n        style: {\n          paddingLeft: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, time.minutes, \":\", time.seconds, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"mdi mdi-clock-outline mdi-24px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      })))), /*#__PURE__*/React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, count, \"/\", questions.length), /*#__PURE__*/React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, q.question), /*#__PURE__*/React.createElement(ContainerLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, this.handleOptions(q.answerOptions)), /*#__PURE__*/React.createElement(Button, {\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), error && /*#__PURE__*/React.createElement(Error, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, \"Please check an Options.\"), /*#__PURE__*/React.createElement(ButtonScr, {\n        onClick: this.handleNextClick,\n        right: true,\n        disabled: count === questions.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, \"\\u3009\"), /*#__PURE__*/React.createElement(ButtonScr, {\n        onClick: this.handlePrevClick,\n        left: true,\n        disabled: count === 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, \"\\u3008\"), console.log('Count:', count))));\n    };\n\n    this.renderResult = () => {\n      const _this$state8 = this.state,\n            answer = _this$state8.answer,\n            questions = _this$state8.questions,\n            screenFinish = _this$state8.screenFinish;\n      return /*#__PURE__*/React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(ScreenQuiz, {\n        screen: screenFinish,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, \"you got \", answer, \" out of \", questions.length, \" questions\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.setState({\n          count: 0,\n          screenFinish: false,\n          screen: true,\n          answer: 0\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, \"Play again\")));\n    };\n\n    this.state = {\n      questions: [],\n      screen: true,\n      count: 0,\n      clickedLabel: {},\n      answer: 0,\n      error: false,\n      screenFinish: false,\n      second: 60,\n      time: {}\n    };\n  }\n\n  componentDidMount() {\n    this.props.ChangeQuestionTableData(this.props.id);\n    var questions = [];\n    this.props.trainer.QuestionTableData.map((d, i) => {\n      questions[i] = {\n        question: d.body,\n        // questionImage : d.quesimg,\n        answerOptions: [{\n          answerText: d.answer1,\n          correctAnswer: d.trueans1\n        }, {\n          answerText: d.answer2,\n          correctAnswer: d.trueans2\n        }, {\n          answerText: d.answer3,\n          correctAnswer: d.trueans3\n        }, {\n          answerText: d.answer4,\n          correctAnswer: d.trueans4\n        }, {\n          answerText: d.answer5,\n          correctAnswer: d.trueans5\n        }]\n      };\n    });\n    this.setState({\n      questions: questions\n    });\n  }\n\n  render() {\n    const _this$state9 = this.state,\n          screenFinish = _this$state9.screenFinish,\n          questions = _this$state9.questions,\n          screen = _this$state9.screen;\n    return !screenFinish && questions ? /*#__PURE__*/React.createElement(React.Fragment, null, screen ? this.renderScreenInitial() : this.renderQuestions()) : this.renderResult();\n  } // render() {\n  //   console.log('qas',this.props.trainer.QuestionTableData);\n  //   console.log('qaz',this.state);\n  //   return (\n  //     <div>\n  //       <h1>Тестирование номер 1</h1>\n  //       {this.state.isStarted ? null : (\n  //         <div id=\"button\">\n  //           <Button variant=\"contained\" color=\"secondary\" onClick={()=>this.handleClick}>\n  //             Начать тест\n  //           </Button>\n  //         </div>\n  //       )}\n  //     {this.state.isStarted ? (\n  //     // <Test2  details={this.props.trainer.QuestionTableData}/>\n  //     ) : null}\n  //     </div>\n  //   )\n  // }\n\n\n}\n\nconst mapStateToProps = state => ({\n  chapter: state.chapter,\n  trainer: state.trainer\n});\n\nexport default connect(mapStateToProps, {\n  ChangeQuestionSearchText,\n  ChangeQuestionTableData,\n  ChangeQuestionModalState\n})(Test);","map":{"version":3,"names":["React","Component","useState","Slider","connect","Table","Input","Typography","Divider","Icon","Modal","Popconfirm","Highlighter","ChangeQuestionSearchText","ChangeQuestionTableData","ChangeQuestionModalState","Alert","SecurePost","apis","Test2","Test3","styled","Carousel","classnames","Container","div","ScreenQuiz","props","screen","Title","h1","Paragraph","p","Button","button","ButtonScr","right","css","ContainerLabel","Label","label","Radio","input","attrs","type","clickedLabel","Error","responsive","desktop","breakpoint","max","min","items","slidesToSlide","tablet","mobile","Test","constructor","handleNextClick","state","count","questions","answer","length","setState","handlePrevClick","handleClick","answerText","correctAnswer","error","screenFinish","handleCountDown","second","clearInterval","timer","counter","setInterval","console","log","renderInitial","renderScreenInitial","handleOptions","answerOptions","map","a","i","startTimer","countDownTime","Date","now","interval","distance","minutes","Math","floor","seconds","time","endGame","renderQuestions","ind","NewQuestions","Array","from","removeQuestions","slice","q","paddingLeft","question","renderResult","componentDidMount","id","trainer","QuestionTableData","d","body","answer1","trueans1","answer2","trueans2","answer3","trueans3","answer4","trueans4","answer5","trueans5","render","mapStateToProps","chapter"],"sources":["C:/React_project/EduTest/frontend/src/components/customer/Testing/test.js"],"sourcesContent":["import React, { Component, useState } from 'react'\r\nimport Slider from 'react-touch-drag-slider'\r\nimport { connect } from 'react-redux';\r\nimport { Table, Input,  Typography, Divider, Icon, Modal, Popconfirm } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport  { createGlobalStyle, css } from 'styled-components/macro'\r\nimport { \r\n    ChangeQuestionSearchText,\r\n    ChangeQuestionTableData,\r\n    ChangeQuestionModalState\r\n} from '../../../actions/trainerAction';\r\nimport Alert from '../../../components/common/alert';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Test2 from './test2';\r\nimport Test3 from './test3';\r\nimport styled from \"styled-components\";\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport classnames from 'classnames';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 80vh;\r\n  width: 100%;\r\n  /*background: #7159c1;*/\r\n`;\r\n\r\nconst ScreenQuiz = styled.div`\r\n  display: flex;\r\n  justify-content: ${props => (props.screen ? \"space-between\" : \"center\")};\r\n  align-items: center;\r\n  flex-direction: column;\r\n  max-width: 1200px;\r\n  padding: ${props => (props.screen ? \"5rem\" : \".5rem\")};\r\n  width: 100%;\r\n  height: 80vh;\r\n  background: #fff;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 5px 40px -20px #000;\r\n\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 2.5rem;\r\n  // color: #7159c1;\r\n  margin-bottom: 0.5rem;\r\n  text-align: center;\r\n  max-width: 90%;\r\n`;\r\n\r\nconst Paragraph = styled.p`\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  width: 40%;\r\n  height: 3rem;\r\n  // color: #fff;\r\n  border: none;\r\n  // background: #7159c1;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 3px 15px 0px #666;\r\n`;\r\n\r\nconst ButtonScr = styled.button`\r\n  font-size: 2rem;\r\n  z-index: 10;\r\n  position: fixed;\r\n  top: 50%;\r\n  ${(props) =>\r\n    props.right\r\n      ? css`\r\n          right: 0.5rem;\r\n        `\r\n      : css`\r\n          left: 0.5rem;\r\n        `}\r\n`\r\n\r\nconst ContainerLabel = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  margin: 0 auto 0.5rem auto;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Radio = styled.input.attrs({ type: 'checkbox' })`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 15px;\r\n  height: 15px;\r\n  // border-radius: 7.5px;\r\n  border: 0.5px solid black;\r\n  margin: 0 0.5rem 0 0;\r\n  background: ${props => (props.clickedLabel ? \"#7159c1\" : \"#fff\")};\r\n`;\r\n\r\n// const IntoRadio = styled.div`\r\n//   width: 5px;\r\n//   height: 5px;\r\n//   border-radius: 3px;\r\n//   background: #fff;\r\n// `;\r\n\r\nconst Error = styled.div`\r\n  top: 22rem;\r\n  color: red;\r\n  position: absolute;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst responsive = {\r\n  desktop: {\r\n    breakpoint: { max: 3000, min: 1024 },\r\n    items: 1,\r\n    slidesToSlide: 1 // optional, default to 1.\r\n  },\r\n  tablet: {\r\n    breakpoint: { max: 1024, min: 464 },\r\n    items: 1,\r\n    slidesToSlide: 1 // optional, default to 1.\r\n  },\r\n  mobile: {\r\n    breakpoint: { max: 464, min: 0 },\r\n    items: 1,\r\n    slidesToSlide: 1 // optional, default to 1.\r\n  }\r\n};\r\nclass Test extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state={\r\n        questions:[],\r\n        screen: true,\r\n        count: 0,\r\n        clickedLabel: {},\r\n        answer: 0,\r\n        error:false,\r\n        screenFinish:false,\r\n        second:60,\r\n        time:{},\r\n      }\r\n    }\r\n  \r\n    componentDidMount(){\r\n      this.props.ChangeQuestionTableData(this.props.id);\r\n      var questions=[];\r\n      this.props.trainer.QuestionTableData.map((d,i)=>{\r\n        questions[i]=(\r\n          {\r\n            question : d.body,\r\n            // questionImage : d.quesimg,\r\n            answerOptions: [\r\n              { answerText: d.answer1, correctAnswer: d.trueans1 },\r\n              { answerText: d.answer2, correctAnswer: d.trueans2 },\r\n              { answerText: d.answer3, correctAnswer: d.trueans3 },\r\n              { answerText: d.answer4, correctAnswer: d.trueans4 },\r\n              { answerText: d.answer5, correctAnswer: d.trueans5}\r\n            ]\r\n          }\r\n        )\r\n      });\r\n      this.setState({\r\n        questions:questions\r\n      })\r\n    }\r\n\r\n    handleNextClick=()=>{\r\n      const { count, questions, clickedLabel, answer} = this.state;\r\n      if (questions.length >= count) {\r\n        this.setState({\r\n          count: count + 1,\r\n        });\r\n      } \r\n    }\r\n\r\n    handlePrevClick=()=>{\r\n      const { count,questions, clickedLabel, answer} = this.state;\r\n      if (questions.length >= count && count>0) {\r\n        this.setState({\r\n          count: count - 1,\r\n        });\r\n      } \r\n    }\r\n\r\n    handleClick = ()=> {\r\n      const { count,questions, clickedLabel, answer} = this.state;\r\n      if (questions.length >= count && clickedLabel.answerText) {\r\n        this.setState({\r\n          count: count + 1,\r\n          clickedLabel: {},\r\n          answer: clickedLabel.correctAnswer ? answer + 1 : answer,\r\n          error: false\r\n        });\r\n      } \r\n      else {\r\n        this.setState({\r\n          count: count,\r\n          error: true\r\n        });\r\n      }\r\n\r\n\r\n      if (questions.length === count) {\r\n        this.setState({\r\n          screenFinish: true\r\n        });\r\n      }\r\n      this.handleCountDown();\r\n    }\r\n\r\n    handleCountDown = () => {\r\n      const { second, count } = this.state;\r\n      clearInterval(this.timer);\r\n  \r\n      let counter = 1;\r\n      this.timer = setInterval(() => {\r\n        if (counter >= 10) {\r\n          clearInterval(this.timer);\r\n          if (second >= 10) {\r\n            this.setState({\r\n              count: count + 1\r\n            });\r\n          }\r\n        }\r\n  \r\n        this.setState({\r\n          second: counter\r\n        });\r\n        console.log(counter++);\r\n      }, 1000);\r\n    };\r\n\r\n    renderInitial = () => {\r\n      const { second, count } = this.state;\r\n  \r\n      this.setState({\r\n        screen: false,\r\n        count: 1\r\n      });\r\n      this.handleCountDown();\r\n    };\r\n\r\n    renderScreenInitial = () => {\r\n      return (\r\n        <Container>\r\n          <ScreenQuiz screen={this.state.screen}>\r\n            <Title>Тестирование</Title>\r\n            {/* <Paragraph>Click to start</Paragraph> */}\r\n            <Button onClick={this.renderInitial}>Начать тест</Button>\r\n          </ScreenQuiz>\r\n        </Container>\r\n      );\r\n    };\r\n  \r\n    handleOptions = answerOptions => {\r\n      const { clickedLabel, count } = this.state;\r\n      console.log('click:',clickedLabel);\r\n      return answerOptions.map((a, i) => {\r\n        return (\r\n          <Label\r\n            key={i}\r\n            onClick={() =>\r\n              this.setState({\r\n                clickedLabel: a,\r\n                error: false\r\n              })\r\n            }\r\n          >\r\n            <Radio clickedLabel={clickedLabel.answerText === a.answerText}/>\r\n            <Paragraph>{a.answerText}</Paragraph>\r\n          </Label>\r\n          \r\n        );\r\n      });\r\n    };\r\n\r\n\r\n    startTimer = () => {\r\n      const countDownTime = Date.now() + 180000;\r\n      this.interval = setInterval(() => {\r\n          const now = new Date();\r\n          const distance = countDownTime - now;\r\n\r\n          const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n          const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n          if (distance < 0) {\r\n              clearInterval(this.interval);\r\n              this.setState({\r\n                  time: {\r\n                      minutes: 0,\r\n                      seconds: 0\r\n                  }\r\n              }, () => {\r\n                  this.endGame();\r\n              });\r\n          } else {\r\n              this.setState({\r\n                  time: {\r\n                      minutes,\r\n                      seconds,\r\n                      distance\r\n                  }\r\n              });\r\n          }\r\n      }, 1000);\r\n  }\r\n\r\n  \r\n  \r\n    renderQuestions = () => {\r\n      const { count,questions, error, second, time, ind } = this.state;\r\n      const NewQuestions = Array.from(questions);\r\n      const removeQuestions = NewQuestions.slice(count - 1, count);\r\n    \r\n      return removeQuestions.map((q, i) => (\r\n\r\n        <Container key={i}>\r\n          <ScreenQuiz>\r\n            \r\n            <div className=\"timer-container\">\r\n              <p>\r\n                <span className={classnames('right valid', {\r\n                  'warning': time.distance <= 120000,\r\n                  'invalid': time.distance < 30000\r\n                  })} style={{paddingLeft:'10px'}}>\r\n                  {time.minutes}:{time.seconds}\r\n                  <span  className=\"mdi mdi-clock-outline mdi-24px\"></span></span>\r\n              </p>\r\n            </div>\r\n\r\n            <h3>{count}/{questions.length}</h3>\r\n            <Title>{q.question}</Title>\r\n            <ContainerLabel>\r\n              {this.handleOptions(q.answerOptions)}\r\n            </ContainerLabel>\r\n            <Button onClick={this.handleClick}>Сохранить</Button>\r\n            {error && <Error>Please check an Options.</Error>}\r\n            <ButtonScr onClick={this.handleNextClick} right disabled={count === questions.length}>〉</ButtonScr>\r\n            <ButtonScr onClick={this.handlePrevClick} left disabled={count===1}>〈</ButtonScr>\r\n            {console.log('Count:',count)}\r\n          </ScreenQuiz>\r\n        </Container>\r\n\r\n      ));\r\n    };\r\n  \r\n    renderResult = () => {\r\n      const { answer,questions, screenFinish } = this.state;\r\n  \r\n      return (\r\n        <Container>\r\n          <ScreenQuiz screen={screenFinish}>\r\n            <Title>you got {answer} out of {questions.length} questions</Title>\r\n            <Button\r\n              onClick={() =>\r\n                this.setState({\r\n                  count: 0,\r\n                  screenFinish: false,\r\n                  screen: true,\r\n                  answer: 0\r\n                })\r\n              }\r\n            >\r\n              Play again\r\n            </Button>\r\n          </ScreenQuiz>\r\n        </Container>\r\n      );\r\n    };\r\n\r\n\r\n    render() {\r\n      const { screenFinish, questions, screen } = this.state;\r\n\r\n      return !screenFinish && questions ? (\r\n        <>{screen ? this.renderScreenInitial() : this.renderQuestions()}</>\r\n      ) : (\r\n        this.renderResult()\r\n      );\r\n    }\r\n\r\n    // render() {\r\n    //   console.log('qas',this.props.trainer.QuestionTableData);\r\n    //   console.log('qaz',this.state);\r\n    //   return (\r\n    //     <div>\r\n    //       <h1>Тестирование номер 1</h1>\r\n    //       {this.state.isStarted ? null : (\r\n    //         <div id=\"button\">\r\n    //           <Button variant=\"contained\" color=\"secondary\" onClick={()=>this.handleClick}>\r\n    //             Начать тест\r\n    //           </Button>\r\n    //         </div>\r\n    //       )}\r\n        \r\n    //     {this.state.isStarted ? (\r\n    //     // <Test2  details={this.props.trainer.QuestionTableData}/>\r\n    //     ) : null}\r\n    //     </div>\r\n    //   )\r\n    // }\r\n  }\r\n  \r\n  const mapStateToProps = state => ({\r\n      chapter : state.chapter,\r\n      trainer : state.trainer\r\n  });\r\n  \r\n  export default connect(mapStateToProps,{\r\n      ChangeQuestionSearchText,\r\n      ChangeQuestionTableData,\r\n      ChangeQuestionModalState\r\n  })(Test);\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}